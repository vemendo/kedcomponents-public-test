{"version":3,"file":"testpagespadmin.js","sources":["webpack://[name]/webpack/bootstrap","webpack://[name]/./kedbackend/client.js","webpack://[name]/./kedbackend/clientweb.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-client-web/bearer-storage-sessionstorage.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-client-web/hash-restorer.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-client-web/index.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-client/access-control.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-client/http-error.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-client/index.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-client/ked-bearer-provider.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-client/restclient.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-client/utils.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-repo/cache-bust.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-repo/delta-collection/apply-mutations-on-deltas.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-repo/delta-collection/delta-cache.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-repo/delta-collection/delta-collection.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-repo/delta-merge.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-repo/index.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-repo/kedbackend-collection.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-repo/kedbackend-query.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-repo/kedbackend-repo.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-repo/kedbackend-subscription.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-repo/kedbackend-writer.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-repo/mutation-queue.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-repo/query-set.js","webpack://[name]/./kedbackend/js/dist/js/ked-backend-repo/utils.js","webpack://[name]/./kedbackend/js/dist/js/ked-model-migrator/index.js","webpack://[name]/./kedbackend/js/dist/js/ked-model-migrator/migrate-course.js","webpack://[name]/./kedbackend/js/dist/js/ked-model-migrator/migrate-task.js","webpack://[name]/./kedbackend/js/dist/js/ked-model-migrator/migrate.js","webpack://[name]/./kedbackend/js/dist/js/observable/collection.js","webpack://[name]/./kedbackend/js/dist/js/observable/emitter.js","webpack://[name]/./kedbackend/js/dist/js/observable/fiber-context.js","webpack://[name]/./kedbackend/js/dist/js/observable/index.js","webpack://[name]/./kedbackend/js/dist/js/observable/map.js","webpack://[name]/./kedbackend/js/dist/js/observable/mixin.js","webpack://[name]/./kedbackend/js/dist/js/observable/observable.js","webpack://[name]/./kedbackend/js/dist/js/observable/value.js","webpack://[name]/./kedbackend/observable.js","webpack://[name]/./kedbackend/repo.js","webpack://[name]/./src/access-control/get-user-claims.ts","webpack://[name]/./src/access-control/index.ts","webpack://[name]/./src/apis/edsclient.ts","webpack://[name]/./src/components/charts/goal-progress.tsx","webpack://[name]/./src/components/course-builder-ks/admin/courses/create-standard-course.tsx","webpack://[name]/./src/components/course-builder-ks/admin/courses/delete-standard-course.tsx","webpack://[name]/./src/components/course-builder-ks/admin/courses/edit-course-block-requirements.tsx","webpack://[name]/./src/components/course-builder-ks/admin/courses/edit-standard-course-blocks.tsx","webpack://[name]/./src/components/course-builder-ks/admin/courses/edit-standard-course.tsx","webpack://[name]/./src/components/course-builder-ks/admin/index.tsx","webpack://[name]/./src/components/course-builder-ks/admin/routes.tsx","webpack://[name]/./src/components/course-builder-ks/common/banner.tsx","webpack://[name]/./src/components/course-builder-ks/common/side-list.tsx","webpack://[name]/./src/components/course-builder-ks/common/standard-course-instance-list.tsx","webpack://[name]/./src/components/course-builder-ks/common/two-columns-page.tsx","webpack://[name]/./src/components/course-builder-ks/logic/course-instance-tags.ts","webpack://[name]/./src/components/course-builder-ks/logic/get-course-codes-from-tags.ts","webpack://[name]/./src/components/course-builder-ks/logic/get-standard-courses-with-ordered-requirements.ts","webpack://[name]/./src/components/course-builder-ks/logic/list-course-instances.ts","webpack://[name]/./src/components/course-builder-ks/logic/ordered-requirements.ts","webpack://[name]/./src/components/course-builder-ks/logic/publish-course.ts","webpack://[name]/./src/components/course-builder/courses/business-logic.ts","webpack://[name]/./src/components/course-builder/courses/course-banner.tsx","webpack://[name]/./src/components/course-builder/knowledge-matrix-partial-utils.ts","webpack://[name]/./src/components/course-builder/schools/edit-school.tsx","webpack://[name]/./src/components/course-builder/schools/editable-school-list.tsx","webpack://[name]/./src/components/course-builder/schools/index.tsx","webpack://[name]/./src/components/course-builder/sub-components/ellipsis-loader.tsx","webpack://[name]/./src/components/course-builder/sub-components/knowledge-matrix.tsx","webpack://[name]/./src/components/course-builder/sub-components/remove-item.tsx","webpack://[name]/./src/components/course-builder/sub-components/select-related-docs.tsx","webpack://[name]/./src/components/course-builder/sub-components/spinner.tsx","webpack://[name]/./src/components/course-builder/subjects/diff/diff-xml-with-database.ts","webpack://[name]/./src/components/course-builder/subjects/diff/migrate-subject.ts","webpack://[name]/./src/components/course-builder/subjects/show-subject-inner.tsx","webpack://[name]/./src/components/course-builder/subjects/show-subject.tsx","webpack://[name]/./src/components/course-builder/subjects/skolverket-subject.ts","webpack://[name]/./src/components/course-builder/subjects/subjects-inner.tsx","webpack://[name]/./src/components/course-builder/subjects/uploaded-subject.tsx","webpack://[name]/./src/components/course-builder/utils.ts","webpack://[name]/./src/components/utility-components/LanguageContext.tsx","webpack://[name]/./src/components/utility-components/SetupLanguageIntl.tsx","webpack://[name]/./src/components/utility-components/checklist.tsx","webpack://[name]/./src/components/utility-components/form-field-text-input.tsx","webpack://[name]/./src/components/utility-components/form-field-textarea.tsx","webpack://[name]/./src/components/utility-components/form-field.tsx","webpack://[name]/./src/components/utility-components/lazy-content.tsx","webpack://[name]/./src/components/utility-components/live-query-view.tsx","webpack://[name]/./src/components/utility-components/loading-indicator.tsx","webpack://[name]/./src/components/utility-components/multiselect.tsx","webpack://[name]/./src/components/utility-components/open-close-box.tsx","webpack://[name]/./src/global-setters/configure.ts","webpack://[name]/./src/global-setters/set-all.ts","webpack://[name]/./src/global-setters/set-bearer-providers.ts","webpack://[name]/./src/global-setters/set-eds-client.ts","webpack://[name]/./src/global-setters/set-ked-backend-client.ts","webpack://[name]/./src/globals/KED.cfg.ts","webpack://[name]/./src/globals/KED.env.ts","webpack://[name]/./src/globals/KED.ts","webpack://[name]/./src/globals/db.ts","webpack://[name]/./src/globals/ked.ts","webpack://[name]/./src/test/data/users.ts","webpack://[name]/./src/test/set-current-user.ts","webpack://[name]/./src/test/testpage-spadmin.tsx","webpack://[name]/./src/test/utils/choose-user.tsx","webpack://[name]/./src/test/utils/include-css.ts","webpack://[name]/./src/utils/error-success-feedback.tsx","webpack://[name]/./src/utils/include-optional-css.ts","webpack://[name]/./src/utils/make-suspense-api.ts","webpack://[name]/./src/utils/query-string.ts","webpack://[name]/./src/utils/school-moment.ts","webpack://[name]/./src/utils/school-term.ts","webpack://[name]/./src/utils/utils.ts"],"sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"testpagespadmin\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp_name_\"] = window[\"webpackJsonp_name_\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/test/testpage-spadmin.tsx\",\"vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from './js/dist/js/ked-backend-client';","export * from './js/dist/js/ked-backend-client-web';","var BearerStorageSessionStorage = /** @class */ (function () {\n    function BearerStorageSessionStorage() {\n    }\n    BearerStorageSessionStorage.prototype.save = function (id, tokenInfo) {\n        sessionStorage.setItem(\"bearer-\" + id, JSON.stringify(tokenInfo));\n    };\n    BearerStorageSessionStorage.prototype.load = function (id) {\n        try {\n            var json = sessionStorage.getItem(\"bearer-\" + id);\n            return Promise.resolve(json ? JSON.parse(json) : { token: null, expires: 0 });\n        }\n        catch (ex) {\n            return Promise.resolve({ token: null, expires: 0 });\n        }\n    };\n    return BearerStorageSessionStorage;\n}());\nexport { BearerStorageSessionStorage };\n//# sourceMappingURL=bearer-storage-sessionstorage.js.map","var redirHash = sessionStorage.getItem(\"redir-hash\");\nif (redirHash)\n    try {\n        var _a = JSON.parse(redirHash), time = _a.time, hash = _a.hash;\n        if (time && time > Date.now() - 60000) {\n            sessionStorage.removeItem(\"redir-hash\");\n            location.hash = hash;\n        }\n    }\n    catch (_) { }\nexport function rememberHashLocation() {\n    sessionStorage.setItem(\"redir-hash\", JSON.stringify({ time: Date.now(), hash: location.hash }));\n}\n//# sourceMappingURL=hash-restorer.js.map","import * as tslib_1 from \"tslib\";\nimport { KedBackendClient, HttpError } from '../ked-backend-client';\nimport { BearerStorageSessionStorage } from \"./bearer-storage-sessionstorage\";\nimport { avoidSimultanousCalls } from '../ked-backend-client/utils';\nimport { KedModelMigratorMixin } from '../ked-model-migrator';\nimport './hash-restorer';\nimport { rememberHashLocation } from './hash-restorer';\nKedModelMigratorMixin(KedBackendClient.prototype);\nexport var storage = new BearerStorageSessionStorage();\nvar timeOfPageLoad = Date.now();\nvar WebServerBearerProvider = /** @class */ (function () {\n    function WebServerBearerProvider(tokenPath, tokenResponseMapper, tokenId) {\n        this.tokenPath = tokenPath;\n        this.tokenResponseMapper = tokenResponseMapper;\n        this.tokenId = tokenId;\n        this.tokenInfo = { token: null, expires: 0 };\n        this.getBearer = avoidSimultanousCalls(this.getBearer.bind(this));\n        this.refreshBearer = avoidSimultanousCalls(this.refreshBearer.bind(this));\n    }\n    WebServerBearerProvider.prototype.getBearer = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!!this.tokenInfo.token) return [3 /*break*/, 2];\n                        if (!this.tokenId) return [3 /*break*/, 2];\n                        _a = this;\n                        return [4 /*yield*/, storage.load(this.tokenId)];\n                    case 1:\n                        _a.tokenInfo = _b.sent();\n                        _b.label = 2;\n                    case 2:\n                        if (!(this.tokenInfo.expires < Date.now())) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.refreshBearer()];\n                    case 3:\n                        _b.sent();\n                        _b.label = 4;\n                    case 4: return [2 /*return*/, this.tokenInfo];\n                }\n            });\n        });\n    };\n    WebServerBearerProvider.prototype.refreshBearer = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var res, _a, _b, _c, _d;\n            return tslib_1.__generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0: return [4 /*yield*/, fetch(this.tokenPath, {\n                            headers: { Accept: \"text/plain; application/json\" },\n                            redirect: 'manual',\n                            cache: 'no-cache',\n                            credentials: \"same-origin\"\n                        })];\n                    case 1:\n                        res = _e.sent();\n                        if (res.status === 302 || (!res.status && res.type === \"opaqueredirect\")) {\n                            // User session timed out and server wants to redirect entire page to login page\n                            // Time to reload current page to force a redirect of the entire page instead for\n                            // just redirecting to /api/token or whatever.\n                            if (Date.now() - timeOfPageLoad > 60000) { // prohibit endless loop of reloading self.\n                                this.wantsRedirect = true; // So that listeners to onbeforeunload could show alternate message.\n                                console.log(\"Redirect wanted. Reload page.\");\n                                rememberHashLocation();\n                                window.location.reload(true);\n                                throw new HttpError(302, \"Redirected\");\n                            }\n                        }\n                        if (!(res.status != 200)) return [3 /*break*/, 3];\n                        _a = Error.bind;\n                        _b = \"HTTP\" + res.status + \" \";\n                        return [4 /*yield*/, res.text()];\n                    case 2: throw new (_a.apply(Error, [void 0, _b + (_e.sent())]))();\n                    case 3:\n                        _c = this;\n                        _d = this.tokenResponseMapper;\n                        return [4 /*yield*/, res.text()];\n                    case 4:\n                        _c.tokenInfo = _d.apply(this, [_e.sent()]);\n                        storage.save(this.tokenId, this.tokenInfo);\n                        return [2 /*return*/, this.tokenInfo];\n                }\n            });\n        });\n    };\n    return WebServerBearerProvider;\n}());\nexport { WebServerBearerProvider };\nexport var isomorphic = { fetch: fetch.bind(self), btoa: btoa.bind(self) };\nvar KedBackendClientWeb = /** @class */ (function (_super) {\n    tslib_1.__extends(KedBackendClientWeb, _super);\n    function KedBackendClientWeb(apiBaseUrl, providerOrTokenPath, options) {\n        var _this = this;\n        var bearerProvider = typeof providerOrTokenPath !== 'string' ?\n            providerOrTokenPath :\n            new WebServerBearerProvider(providerOrTokenPath, (options && options.tokenResponseMapper) || (function (x) { return ({ token: x, expires: Date.now() + 59 * 60 * 60 }); }), options && options.tokenId);\n        _this = _super.call(this, isomorphic, bearerProvider, apiBaseUrl) || this;\n        return _this;\n    }\n    return KedBackendClientWeb;\n}(KedBackendClient));\nexport { KedBackendClientWeb };\n//# sourceMappingURL=index.js.map","var DocumentAccess = /** @class */ (function () {\n    function DocumentAccess(accessClaimType, accessClaimValue, right) {\n        this.accessClaimType = accessClaimType;\n        this.accessClaimValue = accessClaimValue;\n        this.right = right;\n    }\n    DocumentAccess.fromString = function (ac) {\n        if (!ac)\n            return null;\n        var split = ac.split(':');\n        if (split.length < 3)\n            throw new Error(\"Invalid access string: \" + ac);\n        var claimType = DocumentAccess.unescape(split[0]);\n        var claimValue = DocumentAccess.unescape(split[1]);\n        var right = split[2];\n        if (right !== 'R' && right !== 'W' && right !== 'S')\n            throw new Error(\"Invalid access string: \" + ac);\n        return new DocumentAccess(claimType, claimValue, right);\n    };\n    DocumentAccess.escape = function (accessComponent) {\n        return accessComponent.replace(/\\%/g, \"%25\").replace(/\\:/g, \"%3A\");\n    };\n    DocumentAccess.unescape = function (accessComponent) {\n        return accessComponent.replace(/\\%3A/g, \":\").replace(/\\%25/g, \"%\");\n    };\n    DocumentAccess.prototype.toString = function () {\n        return DocumentAccess.escape(this.accessClaimType) + \":\" +\n            DocumentAccess.escape(this.accessClaimValue) + \":\" +\n            this.right;\n    };\n    DocumentAccess.fromStringArray = function (acl) {\n        return acl\n            .map(function (ac) { return DocumentAccess.fromString(ac); })\n            .filter(function (ac) { return ac; });\n    };\n    DocumentAccess.toStringArray = function (acl) {\n        return acl.map(function (ac) { return ac.toString(); });\n    };\n    return DocumentAccess;\n}());\nexport { DocumentAccess };\nexport function hasAccess(acl, userClaims, requestedRight) {\n    if (userClaims.some(function (claim) { return claim.type === 'role' && claim.value === \"ADMIN\"; }))\n        return true;\n    return acl.some(function (a) {\n        return userClaims.some(function (c) {\n            return a.accessClaimType === c.type &&\n                a.accessClaimValue === c.value && ((a.right === 'R' && requestedRight === 'R') ||\n                (a.right === 'W' && ['R', 'W'].indexOf(requestedRight) >= 0) ||\n                (a.right === 'S'));\n        });\n    });\n}\n//# sourceMappingURL=access-control.js.map","import * as tslib_1 from \"tslib\";\nvar HttpError = /** @class */ (function (_super) {\n    tslib_1.__extends(HttpError, _super);\n    function HttpError(code, message) {\n        var _this = _super.call(this, \"HTTP\" + code + \" \" + message) || this;\n        _this.code = code;\n        _this.message = message;\n        _this.name = \"http\" + code;\n        _this.message = \"HTTP\" + code + \" \" + message;\n        return _this;\n    }\n    return HttpError;\n}(Error));\nexport { HttpError };\n//# sourceMappingURL=http-error.js.map","import * as tslib_1 from \"tslib\";\nimport { RestClient } from './restclient';\nexport * from './utils';\nexport { KedBearerProvider } from './ked-bearer-provider';\nexport * from './access-control';\nexport { RestClient };\nimport { HttpError } from './http-error';\nexport { HttpError };\nexport * from './restclient';\nimport * as schema from 'kedbackend-schema/schema.json';\n;\n// | 'otherFlag' | 'thirdFlag';...\nvar KedBackendClient = /** @class */ (function () {\n    function KedBackendClient(isomorphic, bearerProvider, baseUrl) {\n        this.http = new RestClient(isomorphic, baseUrl, { bearerProvider: bearerProvider });\n    }\n    KedBackendClient.prototype.getMyClaims = function (table, fetchOptions) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var res, _a, _b;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.http.get(\"me/claims/\" + (table || \"\"), null, fetchOptions)];\n                    case 1:\n                        res = _c.sent();\n                        if (!(res.status != 200)) return [3 /*break*/, 3];\n                        _a = HttpError.bind;\n                        _b = [void 0, res.status];\n                        return [4 /*yield*/, res.text()];\n                    case 2: throw new (_a.apply(HttpError, _b.concat([_c.sent()])))();\n                    case 3: return [4 /*yield*/, res.json()];\n                    case 4: return [2 /*return*/, _c.sent()];\n                }\n            });\n        });\n    };\n    KedBackendClient.prototype.get = function (table, id, options, fetchOptions) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var res, _a, _b;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.http.get(table + \"/\" + id, options, fetchOptions)];\n                    case 1:\n                        res = _c.sent();\n                        if (!(res.status != 200)) return [3 /*break*/, 3];\n                        _a = HttpError.bind;\n                        _b = [void 0, res.status];\n                        return [4 /*yield*/, res.text()];\n                    case 2: throw new (_a.apply(HttpError, _b.concat([_c.sent()])))();\n                    case 3: return [4 /*yield*/, res.json()];\n                    case 4: return [2 /*return*/, _c.sent()];\n                }\n            });\n        });\n    };\n    KedBackendClient.prototype.list = function (table, options, fetchOptions) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, tableSchema_1, includedTables, res, _a, _b;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        query = tslib_1.__assign({}, options);\n                        if (typeof location === 'undefined' || !location.search.includes('dontUseSP')) {\n                            tableSchema_1 = schema.tables[table];\n                            includedTables = null;\n                            if (options.include) {\n                                if (tableSchema_1)\n                                    includedTables = [].concat(options.include)\n                                        .filter(function (graph) { return graph !== 'acl'; })\n                                        .map(function (graph) { return tableSchema_1.relationships[graph]; });\n                            }\n                            if (!query.from &&\n                                !query.to &&\n                                [query.hasEdgesFrom, query.hasEdgesTo, query.ids].filter(function (x) { return !!x; }).length <= 1 &&\n                                (tableSchema_1 && tableSchema_1.isPublic) &&\n                                (!includedTables || includedTables.every(function (table) { return schema.tables[table] && schema.tables[table].isPublic; }))) {\n                                query.flags = (query.flags || []).concat(['useSP']);\n                            }\n                        }\n                        if (options && options.mutationsOnEmpty)\n                            query.mutationsOnEmpty = JSON.stringify(options.mutationsOnEmpty);\n                        return [4 /*yield*/, this.http.get(\"\" + table, query, fetchOptions)];\n                    case 1:\n                        res = _c.sent();\n                        if (!(res.status != 200)) return [3 /*break*/, 3];\n                        _a = HttpError.bind;\n                        _b = [void 0, res.status];\n                        return [4 /*yield*/, res.text()];\n                    case 2: throw new (_a.apply(HttpError, _b.concat([_c.sent()])))();\n                    case 3: return [4 /*yield*/, res.json()];\n                    case 4: return [2 /*return*/, _c.sent()];\n                }\n            });\n        });\n    };\n    KedBackendClient.prototype.batch = function (reqs, fetchOptions) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var res, _a, _b;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        // Reorder operations so that 'add's come first and 'delete's come last:\n                        reqs = reqs.slice().sort(function (req1, req2) {\n                            return req1.op === 'add' ? -1 : req2.op === 'add' ? 1 :\n                                req1.op === 'delete' ? 1 : req2.op === 'delete' ? -1 : 0;\n                        });\n                        return [4 /*yield*/, this.http.post(\"batch\", reqs, fetchOptions)];\n                    case 1:\n                        res = _c.sent();\n                        if (!(res.status != 200)) return [3 /*break*/, 3];\n                        _a = HttpError.bind;\n                        _b = [void 0, res.status];\n                        return [4 /*yield*/, res.text()];\n                    case 2: throw new (_a.apply(HttpError, _b.concat([_c.sent()])))();\n                    case 3: return [4 /*yield*/, res.json()];\n                    case 4: return [2 /*return*/, _c.sent()];\n                }\n            });\n        });\n    };\n    KedBackendClient.prototype.do = function (scopeFn) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var runner;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        runner = new BatchRunner();\n                        scopeFn(runner);\n                        return [4 /*yield*/, this.batch(runner.mutationRequests)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    KedBackendClient.prototype.deleteRealm = function (realm) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var res, _a, _b;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.http.delete(\"realms/\" + realm)];\n                    case 1:\n                        res = _c.sent();\n                        if (!(res.status != 200)) return [3 /*break*/, 3];\n                        _a = HttpError.bind;\n                        _b = [void 0, res.status];\n                        return [4 /*yield*/, res.text()];\n                    case 2: throw new (_a.apply(HttpError, _b.concat([_c.sent()])))();\n                    case 3: return [4 /*yield*/, res.json()];\n                    case 4: return [2 /*return*/, _c.sent()];\n                }\n            });\n        });\n    };\n    KedBackendClient.prototype.add = function (table, doc, branchId) {\n        return this.do(function (r) { return r.add(table, doc); });\n    };\n    KedBackendClient.prototype.put = function (table, doc) {\n        return this.do(function (r) { return r.put(table, doc); });\n    };\n    KedBackendClient.prototype.update = function (table, id, deltaDoc, branchId) {\n        return this.do(function (r) { return r.update(table, id, deltaDoc, branchId); });\n    };\n    KedBackendClient.prototype.merge = function (branchId, targetBranchId) {\n        return this.do(function (r) { return r.merge(branchId, targetBranchId); });\n    };\n    KedBackendClient.prototype.clearBranch = function (branchId) {\n        return this.do(function (r) { return r.clearBranch(branchId); });\n    };\n    KedBackendClient.prototype.delete = function (table, id) {\n        return this.do(function (r) { return r.delete(table, id); });\n    };\n    KedBackendClient.prototype.share = function (table, id, acl) {\n        return this.do(function (r) { return r.share(table, id, acl); });\n    };\n    KedBackendClient.prototype.unshare = function (table, id, acl) {\n        return this.do(function (r) { return r.unshare(table, id, acl); });\n    };\n    KedBackendClient.prototype.link = function (sourceTable, sourceId, targetTable, targetId, label) {\n        return this.do(function (r) { return r.link(sourceTable, sourceId, targetTable, targetId, label); });\n    };\n    KedBackendClient.prototype.link2 = function (sourceTable, sourceId, targetId, label, branchId) {\n        return this.do(function (r) { return r.link2(sourceTable, sourceId, label, targetId, branchId); });\n    };\n    KedBackendClient.prototype.unlink = function (sourceTable, sourceId, targetTable, targetId, label) {\n        return this.do(function (r) { return r.unlink(sourceTable, sourceId, targetTable, targetId, label); });\n    };\n    KedBackendClient.prototype.unlink2 = function (sourceTable, sourceId, targetId, label, branchId) {\n        return this.do(function (r) { return r.unlink2(sourceTable, sourceId, label, targetId, branchId); });\n    };\n    KedBackendClient.prototype.undoLink = function (sourceTable, sourceId, targetId, label, branchId) {\n        return this.do(function (r) { return r.undoLink(sourceTable, sourceId, label, targetId, branchId); });\n    };\n    return KedBackendClient;\n}());\nexport { KedBackendClient };\nvar BatchRunner = /** @class */ (function () {\n    function BatchRunner() {\n        this.mutationRequests = [];\n    }\n    BatchRunner.prototype.add = function (table, doc, branchId) {\n        this.mutationRequests.push({ op: 'add', table: table, doc: doc, branchId: branchId });\n        return this;\n    };\n    BatchRunner.prototype.put = function (table, doc) {\n        doc = tslib_1.__assign({}, doc);\n        delete doc.acl; // Forbidden to send acl with put() calls.\n        this.mutationRequests.push({ op: 'put', table: table, doc: doc });\n        return this;\n    };\n    BatchRunner.prototype.update = function (table, id, deltaDoc, branchId) {\n        deltaDoc = tslib_1.__assign({}, deltaDoc);\n        this.mutationRequests.push({ op: 'update', table: table, id: id, deltaDoc: deltaDoc, branchId: branchId });\n    };\n    BatchRunner.prototype.merge = function (branchId, targetBranchId) {\n        this.mutationRequests.push({ op: 'merge', branchId: branchId, targetBranchId: targetBranchId });\n    };\n    BatchRunner.prototype.clearBranch = function (branchId) {\n        this.mutationRequests.push({ op: 'clear-branch', branchId: branchId });\n    };\n    BatchRunner.prototype.delete = function (table, id) {\n        this.mutationRequests.push({ op: 'delete', table: table, id: id });\n        return this;\n    };\n    BatchRunner.prototype.share = function (table, id, acl) {\n        this.mutationRequests.push({ op: 'share', table: table, id: id, acl: acl });\n        return this;\n    };\n    BatchRunner.prototype.unshare = function (table, id, acl) {\n        this.mutationRequests.push({ op: 'unshare', table: table, id: id, acl: acl });\n        return this;\n    };\n    BatchRunner.prototype.link = function (sourceTable, sourceId, targetTable, targetId, label) {\n        this.mutationRequests.push({ op: 'link', sourceTable: sourceTable, sourceId: sourceId, targetTable: targetTable, targetId: targetId, label: label });\n        return this;\n    };\n    BatchRunner.prototype.link2 = function (sourceTable, sourceId, label, targetId, branchId) {\n        this.mutationRequests.push({ op: 'link', sourceTable: sourceTable, sourceId: sourceId, targetId: targetId, label: label, branchId: branchId });\n    };\n    BatchRunner.prototype.unlink = function (sourceTable, sourceId, targetTable, targetId, label) {\n        this.mutationRequests.push({ op: 'unlink', sourceTable: sourceTable, sourceId: sourceId, targetTable: targetTable, targetId: targetId, label: label });\n        return this;\n    };\n    BatchRunner.prototype.unlink2 = function (sourceTable, sourceId, label, targetId, branchId) {\n        this.mutationRequests.push({ op: 'unlink', sourceTable: sourceTable, sourceId: sourceId, targetId: targetId, label: label, branchId: branchId });\n        return this;\n    };\n    BatchRunner.prototype.undoLink = function (sourceTable, sourceId, label, targetId, branchId) {\n        this.mutationRequests.push({ op: 'undo-link', sourceTable: sourceTable, sourceId: sourceId, targetId: targetId, label: label, branchId: branchId });\n    };\n    return BatchRunner;\n}());\nexport { BatchRunner };\n//# sourceMappingURL=index.js.map","import * as tslib_1 from \"tslib\";\nimport { RestClient } from './restclient';\nimport { avoidSimultanousCalls } from './utils';\nvar KedBearerProvider = /** @class */ (function () {\n    function KedBearerProvider(isomorphic, storage, tokenId, clientId, clientSecret, tokenUrl, tokenQuery) {\n        this.isomorphic = isomorphic;\n        this.storage = storage;\n        this.tokenId = tokenId;\n        this.clientId = clientId;\n        this.clientSecret = clientSecret;\n        this.tokenUrl = tokenUrl;\n        this.tokenQuery = tokenQuery;\n        this.tokenInfo = { token: null, expires: 0 };\n        this.client = new RestClient(isomorphic, \"\", {\n            username: this.clientId,\n            password: this.clientSecret\n        });\n        this.getBearer = avoidSimultanousCalls(this.getBearer.bind(this));\n        this.refreshBearer = avoidSimultanousCalls(this.refreshBearer.bind(this));\n    }\n    KedBearerProvider.prototype.getBearer = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, token, expires, _b, e_1;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this.tokenInfo, token = _a.token, expires = _a.expires;\n                        if (token && expires >= Date.now())\n                            return [2 /*return*/, this.tokenInfo];\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 4, , 6]);\n                        _b = this;\n                        return [4 /*yield*/, this.storage.load(this.clientId + \"/\" + this.tokenId)];\n                    case 2:\n                        _b.tokenInfo = _c.sent();\n                        if (this.tokenInfo.token && this.tokenInfo.expires >= Date.now())\n                            return [2 /*return*/, this.tokenInfo];\n                        return [4 /*yield*/, this.refreshBearer()];\n                    case 3:\n                        _c.sent();\n                        return [2 /*return*/, this.tokenInfo];\n                    case 4:\n                        e_1 = _c.sent();\n                        return [4 /*yield*/, this.refreshBearer()];\n                    case 5:\n                        _c.sent();\n                        return [2 /*return*/, this.tokenInfo];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    KedBearerProvider.prototype.refreshBearer = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var res, retries, _a, _b;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        retries = 0;\n                        _c.label = 1;\n                    case 1:\n                        if (!(retries < 6)) return [3 /*break*/, 5];\n                        console.log(\"Retrieving token for \" + this.tokenId);\n                        return [4 /*yield*/, this.client.get(this.tokenUrl, this.tokenQuery, { cache: 'reload' })];\n                    case 2:\n                        res = _c.sent();\n                        if (res.status !== 200) {\n                            console.warn(\"Got \" + res.status + \" \" + res.statusText);\n                            return [3 /*break*/, 4];\n                        }\n                        _a = this;\n                        _b = {};\n                        return [4 /*yield*/, res.text()];\n                    case 3:\n                        _a.tokenInfo = (_b.token = _c.sent(), _b.expires = Date.now() + 59 * 60 * 1000, _b);\n                        console.log(\"Got token for \" + this.tokenId + \": \" + JSON.stringify(this.tokenInfo));\n                        this.storage.save(this.clientId + \"/\" + this.tokenId, this.tokenInfo);\n                        return [2 /*return*/, this.tokenInfo];\n                    case 4:\n                        ++retries;\n                        return [3 /*break*/, 1];\n                    case 5: throw new Error(\"Failed to retrieve token for \" + JSON.stringify(this.tokenId));\n                }\n            });\n        });\n    };\n    return KedBearerProvider;\n}());\nexport { KedBearerProvider };\n//# sourceMappingURL=ked-bearer-provider.js.map","/*\ndeclare var Buffer; // node built-in\n\n\nfunction basicAuthHeader(username, password) {\n    return \"Basic \" + new Buffer(username + \":\" + password).toString(\"base64\");\n}\n*/\nimport * as tslib_1 from \"tslib\";\nimport { createUUID } from \"./utils\";\nimport { Emitter } from '../observable/emitter';\nvar RestClient = /** @class */ (function () {\n    function RestClient(isomorphic, baseUrl, options) {\n        this.isomorphic = isomorphic;\n        this.baseUrl = baseUrl;\n        this.options = options;\n        this.numOutstandingOperations = 0;\n        this.cache = {}; //, timeout: number}};\n        this._status = new Emitter(this);\n        this.fetchOptions = { mode: 'cors' };\n        this.authHeader = options.bearer ?\n            \"Bearer \" + options.bearer :\n            options.username ?\n                \"Basic \" + isomorphic.btoa(options.username + \":\" + (options.password || \"\")) :\n                null;\n        this.bearerProvider = options.bearerProvider || null;\n    }\n    Object.defineProperty(RestClient.prototype, \"status\", {\n        get: function () {\n            return this._status;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RestClient.prototype.suspenseFetch = function (path, method, headers, query, fetchOptions) {\n        var _this = this;\n        var key = method + \" \" + path + \" \" + JSON.stringify(headers) + \" \" + JSON.stringify(query) + \" \" + JSON.stringify(fetchOptions);\n        var entry = this.cache[key];\n        if (entry) {\n            // Entry found. Is it still being fetched?\n            if ('promise' in entry)\n                throw entry.promise; // Still being fetched. Multiple parallell fetches should work on same promise!\n            // Promise has resolved. Return result.\n            return entry.result;\n        }\n        else {\n            // We are the first to do this request. Start doing it:\n            var promise = this.fetch(path, method, headers, query, fetchOptions).then(function (res) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                var status, text;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            status = res.status;\n                            return [4 /*yield*/, res.text()];\n                        case 1:\n                            text = _a.sent();\n                            this.cache[key] = {\n                                result: {\n                                    status: status,\n                                    text: function () { return text; },\n                                    json: function () { return JSON.parse(text); }\n                                }\n                            };\n                            return [2 /*return*/];\n                    }\n                });\n            }); });\n            // Immediately put the promise in the cache. Multiple parallell fetches should work on the same promise!\n            this.cache[key] = { promise: promise };\n            // Suspend until promise is resolved. At that time, the cache will contain an answer!\n            throw promise;\n        }\n    };\n    RestClient.prototype.fetch = function (path, method, headers, query, fetchOptions) {\n        var _this = this;\n        ++this.numOutstandingOperations;\n        this._status.dispatch(this);\n        return this._fetch(path, method, headers, query, fetchOptions)\n            .then(function (res) {\n            --_this.numOutstandingOperations;\n            _this._status.dispatch(_this);\n            return res;\n        }).catch(function (err) {\n            --_this.numOutstandingOperations;\n            _this._status.dispatch(_this);\n            return Promise.reject(err);\n        });\n    };\n    RestClient.prototype._fetch = function (path, method, headers, query, fetchOptions) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var queryStr, _a, authHeader, tokenInfo, bearerProvider, _b, _c, url, res, wwwauth, _d;\n            return tslib_1.__generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        if (fetchOptions && fetchOptions.cache === 'no-cache') {\n                            // Workaround for back-button not respecting cache control in Chrome/Opera.\n                            // Append a query parameter to force a cache entry\n                            query = tslib_1.__assign({}, query, { nocache: createUUID() });\n                        }\n                        queryStr = query && Object.keys(query).filter(function (key) { return query[key] !== undefined; }).map(function (key) {\n                            return encodeURIComponent(key) +\n                                \"=\" +\n                                encodeURIComponent(query[key]);\n                        })\n                            .join('&');\n                        _a = this, authHeader = _a.authHeader, tokenInfo = _a.tokenInfo, bearerProvider = _a.bearerProvider;\n                        if (!(!authHeader && !tokenInfo && bearerProvider)) return [3 /*break*/, 2];\n                        _b = this;\n                        return [4 /*yield*/, bearerProvider.getBearer()];\n                    case 1:\n                        _b.tokenInfo = tokenInfo = _e.sent();\n                        _e.label = 2;\n                    case 2:\n                        if (!tokenInfo) return [3 /*break*/, 5];\n                        if (!(tokenInfo.expires < Date.now())) return [3 /*break*/, 4];\n                        console.log(\"Token expired. Refresh it:\");\n                        _c = this;\n                        return [4 /*yield*/, bearerProvider.refreshBearer()];\n                    case 3:\n                        _c.tokenInfo = tokenInfo = _e.sent();\n                        _e.label = 4;\n                    case 4:\n                        authHeader = \"Bearer \" + tokenInfo.token;\n                        _e.label = 5;\n                    case 5:\n                        // In one way or another, we've concluded an Authorization header to use:\n                        if (authHeader) {\n                            headers.Authorization = authHeader;\n                        }\n                        url = this.baseUrl + path + (queryStr ? \"?\" + queryStr : \"\");\n                        return [4 /*yield*/, this.isomorphic.fetch(url, tslib_1.__assign({}, this.fetchOptions, { headers: headers, method: method }, fetchOptions))];\n                    case 6:\n                        res = _e.sent();\n                        if (!(res.status == 401 && this.bearerProvider)) return [3 /*break*/, 9];\n                        wwwauth = res.headers.get(\"www-authenticate\");\n                        console.log(\"Got \" + res.status + \" from \" + (this.baseUrl + path));\n                        if (!(wwwauth && /Bearer/i.test(wwwauth))) return [3 /*break*/, 9];\n                        _d = this;\n                        return [4 /*yield*/, this.bearerProvider.refreshBearer()];\n                    case 7:\n                        _d.tokenInfo = _e.sent();\n                        headers.Authorization = \"Bearer \" + this.tokenInfo.token;\n                        return [4 /*yield*/, this.isomorphic.fetch(url, tslib_1.__assign({}, this.fetchOptions, { headers: headers, method: method }, fetchOptions))];\n                    case 8:\n                        res = _e.sent();\n                        _e.label = 9;\n                    case 9: return [2 /*return*/, res];\n                }\n            });\n        });\n    };\n    RestClient.prototype.get = function (path, query, fetchOptions) {\n        return this.fetch(path, \"GET\", { Accept: \"application/json; text/plain\" }, query, fetchOptions);\n    };\n    RestClient.prototype.suspenseGet = function (path, query, fetchOptions) {\n        return this.suspenseFetch(path, \"GET\", { Accept: \"application/json; text/plain\" }, query, fetchOptions);\n    };\n    RestClient.prototype.post = function (path, data, fetchOptions) {\n        return this.fetch(path, \"POST\", {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\"\n        }, null, tslib_1.__assign({}, fetchOptions, { body: JSON.stringify(data) }));\n    };\n    RestClient.prototype.delete = function (path, query, body, fetchOptions) {\n        return this.fetch(path, \"DELETE\", { Accept: \"application/json; text/plain\" }, query, tslib_1.__assign({}, fetchOptions, { body: body }));\n    };\n    return RestClient;\n}());\nexport { RestClient };\n//# sourceMappingURL=restclient.js.map","import * as tslib_1 from \"tslib\";\nexport function createUUID() {\n    // Decent solution from http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\n    var d = Date.now();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n    });\n    return uuid;\n}\nexport function avoidSimultanousCalls(method) {\n    var ongoingPromise = null;\n    return function () {\n        if (!ongoingPromise) {\n            ongoingPromise = method.apply(this, arguments).then(function (result) {\n                ongoingPromise = null;\n                return result;\n            });\n        }\n        return ongoingPromise;\n    };\n}\nexport function getGlobalId(realm) {\n    var prefix = 'ec96b3be-45fc-41d3-b69e-';\n    var pad = ['50', '08', 'e1', '40', 'e4', 'e7'];\n    if (realm.length > 6)\n        throw new Error(\"Too long realm\");\n    for (var i = 0; i < realm.length; ++i) {\n        var hex = realm.charCodeAt(i).toString(16);\n        pad[i] = hex.length === 2 ?\n            hex :\n            '0' + hex;\n    }\n    return prefix + pad.join('');\n}\nexport function computePredestinatedId(input) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var encoder, data, digest, _a, i;\n        return tslib_1.__generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    encoder = new TextEncoder();\n                    data = encoder.encode(input);\n                    _a = Uint8Array.bind;\n                    return [4 /*yield*/, crypto.subtle.digest('SHA-256', data)];\n                case 1:\n                    digest = new (_a.apply(Uint8Array, [void 0, _b.sent()]))();\n                    i = 0;\n                    return [2 /*return*/, 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                            var nibble = digest[i++] % 16 | 0;\n                            var washedNibble = c === 'x' ?\n                                nibble :\n                                nibble & 0x7 | 0x8;\n                            return washedNibble.toString(16);\n                        })];\n            }\n        });\n    });\n}\nexport function simpleDigest(input) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var encoder, inputBytes, digestBytes, _a;\n        return tslib_1.__generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    encoder = new TextEncoder();\n                    inputBytes = encoder.encode(input);\n                    _a = Uint8Array.bind;\n                    return [4 /*yield*/, crypto.subtle.digest('SHA-256', inputBytes)];\n                case 1:\n                    digestBytes = new (_a.apply(Uint8Array, [void 0, _b.sent(), 0, 16]))();\n                    return [2 /*return*/, buf2hex(digestBytes)];\n            }\n        });\n    });\n}\nvar simpleDigestCache = {};\nexport function simpleDigestSuspense(inputs) {\n    var results = inputs.map(function (input) { return simpleDigestCache[input]; });\n    var unresolvedInputs = [];\n    results.forEach(function (result, index) {\n        if (!result)\n            unresolvedInputs.push(inputs[index]);\n    });\n    if (unresolvedInputs.length === 0)\n        return results;\n    throw Promise.all(unresolvedInputs.map(function (input) { return simpleDigest(input).then(function (result) { return simpleDigestCache[input] = result; }); }));\n}\nexport function buf2hex(buffer) {\n    return Array.prototype.map.call(buffer, function (x) { return ('00' + x.toString(16)).slice(-2); }).join('');\n}\nexport function updateArray(a, mapper) {\n    var retval = a;\n    for (var i = 0, l = a.length; i < l; ++i) {\n        var t = a[i];\n        var mapped = mapper(t);\n        if (mapped !== t) {\n            if (retval === a)\n                retval = a.slice();\n            retval[i] = mapped;\n        }\n    }\n    return retval;\n}\n/*\nexport function updateArray<T>(a: T[], mapper: (t: T) => T | false): T[] {\n  let retval = a;\n  let j = 0;\n  for (let i=0,l=a.length; i<l; ++i, ++j) {\n    const t = a[i];\n    const mapped = mapper(t);\n    if (mapped === false) {\n      // Mapper wants to delete this doc.\n      if (retval === a) retval = a.slice();\n      retval.splice(j, 1);\n      --j; // compensate for ++j\n    } else if (mapped !== t) {\n      if (retval === a) retval = a.slice();\n      retval[j] = mapped;\n    }\n  }\n  return retval;\n}\n*/ \n//# sourceMappingURL=utils.js.map","import * as JsonSchema from \"kedbackend-schema/schema.json\";\nimport { getTableFromLabel } from \"./utils\";\nvar CacheBust = /** @class */ (function () {\n    function CacheBust() {\n    }\n    CacheBust.getCacheBust = function (table, query, user, includes) {\n        var involvedItems = CacheBust.getInvolvedItems(table, query, includes);\n        return involvedItems\n            .map(function (item) { return localStorage.getItem(\"cache-bust-\" + user + \"-\" + item); })\n            .filter(function (value) { return !!value; })\n            .join('/') || 'static';\n    };\n    CacheBust.invalidateCache = function (reqs, user) {\n        for (var _i = 0, _a = CacheBust.getCacheInvalidations(reqs); _i < _a.length; _i++) {\n            var item = _a[_i];\n            localStorage.setItem(\"cache-bust-\" + user + \"-\" + item, '' + Date.now());\n        }\n    };\n    CacheBust.getInvolvedItems = function (table, query, includes) {\n        var hasEdgesFrom = query.hasEdgesFrom;\n        var relatedTables = includes\n            .map(function (label) { return JsonSchema.tables[table].relationships[label]; })\n            .filter(function (table) { return !!table; });\n        if (hasEdgesFrom)\n            relatedTables.push(\"hef\" + table);\n        return [table, 'master', query.branchId].filter(function (x) { return !!x; }).concat(relatedTables).sort();\n    };\n    CacheBust.getCacheInvalidations = function (reqs) {\n        var invalidationSet = {};\n        reqs.forEach(function (req) {\n            switch (req.op) {\n                case 'add':\n                case 'put':\n                case 'delete':\n                case 'update':\n                    invalidationSet[req.table] = true;\n                    break;\n                case 'link':\n                case 'unlink':\n                case 'undo-link':\n                    invalidationSet[req.sourceTable] = true;\n                    invalidationSet[\"hef-\" + getTableFromLabel(req.sourceTable, req.label)] = true;\n                    break;\n                case 'clear-branch':\n                    invalidationSet[req.branchId] = true;\n                    break;\n                case 'merge':\n                    invalidationSet[req.branchId] = true;\n                    invalidationSet[req.targetBranchId || \"master\"] = true;\n                    break;\n            }\n        });\n        return Object.keys(invalidationSet);\n    };\n    return CacheBust;\n}());\nexport { CacheBust };\n//# sourceMappingURL=cache-bust.js.map","import * as tslib_1 from \"tslib\";\nimport { mergeDeltas } from '../delta-merge';\nexport function applyMutationsOnDeltas(branchId, deltas, mutations, optimistic, userDisplayName, hasAdditionalFilter) {\n    var _loop_1 = function (m) {\n        switch (m.op) {\n            case 'add-related':\n                //\n                // AddRelated RepoMutation\n                //\n                if (!hasAdditionalFilter && m.branchId === branchId) {\n                    deltas = [{\n                            type: 'add',\n                            sourceId: m.id,\n                            targetId: m.relatedDoc.id,\n                            label: m.graphProp,\n                            sourceTable: m.table,\n                            $meta: optimistic ? 'adding' : 'persisted',\n                            dateTime: Date.now(),\n                            targetName: m.relatedDoc.name,\n                            contributor: userDisplayName\n                        }].concat(deltas);\n                }\n                break;\n            case 'clear-branch':\n                //\n                // ClearBranch RepoMutation\n                //\n                if (m.branchId === branchId) {\n                    deltas = [];\n                }\n                break;\n            case 'delete':\n                //\n                // Delete RepoMutation\n                //\n                // This type of mutation can not be performed onto branches. There's no branchId property on m.\n                break;\n            case 'merge':\n                //\n                // Merge RepoMutation\n                //\n                if (m.branchId === branchId) {\n                    deltas = [];\n                }\n                else if (m.targetBranchId === branchId) {\n                    // This change will append new deltas to our deltas array but we don't know what would come.\n                    // Need to refetch from server.\n                    if (!optimistic)\n                        return { value: null }; // Caller should check for null and re-fetch data from server.\n                }\n                break;\n            case 'remove-related':\n                //\n                // Remove-Related RepoMutation\n                //\n                if (hasAdditionalFilter || m.branchId !== branchId)\n                    return \"continue\";\n                deltas = [{\n                        type: 'remove',\n                        sourceId: m.id,\n                        targetId: m.relatedDoc.id,\n                        targetName: m.relatedDoc.name,\n                        label: m.graphProp,\n                        sourceTable: m.table,\n                        contributor: userDisplayName,\n                        dateTime: Date.now(),\n                        $meta: optimistic ? 'adding' : 'persisted'\n                    }].concat(deltas);\n                break;\n            case 'undo-link':\n                //\n                // Undo-Link RepoMutation\n                //\n                if (m.branchId !== branchId)\n                    return \"continue\";\n                {\n                    var idx = deltas.findIndex(function (d) {\n                        return (d.type === 'add' || d.type === 'remove' || d.type === 'undo-link') &&\n                            d.sourceId === m.id &&\n                            d.targetId === m.relatedId;\n                    });\n                    if (idx < 0)\n                        return \"continue\";\n                    // Found an \"add\" or \"remove\" delta to change:\n                    if (optimistic) {\n                        var deltaRelation = deltas[idx];\n                        // Mark the existing add/remove delta as currenlty being deleted\n                        deltas = deltas.slice(0, idx).concat([\n                            tslib_1.__assign({}, deltaRelation, { $meta: optimistic ? 'removing' : 'persisted' })\n                        ], deltas.slice(idx + 1));\n                    }\n                    else {\n                        // Persisted. Just remove it:\n                        deltas = deltas.slice(0, idx).concat(deltas.slice(idx + 1));\n                    }\n                }\n                break;\n            case 'update':\n                //\n                // Update RepoMutation\n                //\n                if (m.branchId !== branchId)\n                    return \"continue\";\n                {\n                    var idx = deltas.findIndex(function (delta) {\n                        return delta.type === 'modify' &&\n                            delta.targetId === m.id;\n                    });\n                    if (idx < 0 && !hasAdditionalFilter) {\n                        deltas = [{\n                                type: 'modify',\n                                table: m.table,\n                                targetId: m.id,\n                                targetName: m.targetName,\n                                data: m.deltaDoc,\n                                dateTime: Date.now(),\n                                contributors: [userDisplayName],\n                                $meta: optimistic ? 'adding' : 'persisted',\n                            }].concat(deltas);\n                    }\n                    else {\n                        var existingDeltaDoc = deltas[idx];\n                        var contributors = existingDeltaDoc.contributors.slice();\n                        if (!contributors.includes(userDisplayName)) {\n                            contributors.push(userDisplayName);\n                        }\n                        var newData = mergeDeltas(existingDeltaDoc.data, m.deltaDoc, { removeUnsetProps: true });\n                        if (!optimistic && Object.keys(newData).length === 0) {\n                            // Committed mutation that resets a deltaDoc. Remove the deltaDoc entirely:\n                            deltas = deltas.slice(0, idx).concat(deltas.slice(idx + 1));\n                        }\n                        else {\n                            // \n                            deltas = [\n                                {\n                                    type: 'modify',\n                                    table: m.table,\n                                    targetId: m.id,\n                                    targetName: m.targetName,\n                                    data: newData,\n                                    dateTime: Date.now(),\n                                    contributors: contributors,\n                                    $meta: optimistic ? 'updating' : 'persisted',\n                                }\n                            ].concat(deltas.slice(0, idx), deltas.slice(idx + 1));\n                        }\n                    }\n                }\n                break;\n        }\n    };\n    for (var _i = 0, mutations_1 = mutations; _i < mutations_1.length; _i++) {\n        var m = mutations_1[_i];\n        var state_1 = _loop_1(m);\n        if (typeof state_1 === \"object\")\n            return state_1.value;\n    }\n    return deltas;\n}\n//# sourceMappingURL=apply-mutations-on-deltas.js.map","import * as tslib_1 from \"tslib\";\nimport { HttpError } from '../../ked-backend-client';\nimport { applyMutationsOnDeltas } from './apply-mutations-on-deltas';\nvar DeltaCache = /** @class */ (function () {\n    function DeltaCache(getClient, getUser, getUserDisplayName) {\n        this.getClient = getClient;\n        this.getUser = getUser;\n        this.getUserDisplayName = getUserDisplayName;\n        this.lookup = {};\n    }\n    DeltaCache.prototype.applyMutations = function (mutations, _a) {\n        var optimistic = (_a === void 0 ? { optimistic: false } : _a).optimistic;\n        // Apply mutations locally onto the DeltaCache and notify their subscribers\n        for (var _i = 0, _b = Object.keys(this.lookup); _i < _b.length; _i++) {\n            var queryKey = _b[_i];\n            var cacheEntry = this.lookup[queryKey];\n            if (cacheEntry.value) {\n                // Instead here: Store the mutations on cacheEntry. No matter if it yet has value or not.\n                // Then apply mutation whenever subscribing! (Better handling of mutations that arrives before fetch() is done)\n                // (See how I handle this in query-set.ts)\n                var newValue = applyMutationsOnDeltas(cacheEntry.query.branchId, cacheEntry.value, mutations, optimistic, this.getUserDisplayName(), !!cacheEntry.query.tags);\n                if (newValue === null) {\n                    // The mutation requires cacheEntry to be refetched from server\n                    if (!optimistic) {\n                        // Caller has successfully performed the mutations and got success back from server.\n                        // It's ok to refetch the deltas from server now:\n                        cacheEntry.fetch();\n                        // After fetch completes, it will notify the subscribers.\n                    }\n                }\n                if (newValue !== cacheEntry.value) {\n                    cacheEntry.optimisticValue = newValue;\n                    if (!optimistic)\n                        cacheEntry.value = newValue;\n                    cacheEntry.notify(newValue);\n                }\n            }\n        }\n    };\n    DeltaCache.prototype.subscribe = function (query, observer) {\n        var _this = this;\n        var cacheEntry = this.lookup[query.branchId + query.tags];\n        if (!cacheEntry) {\n            cacheEntry = new DeltaCacheEntry(this.getClient(), query);\n            this.lookup[query.branchId + query.tags] = cacheEntry;\n        }\n        if (cacheEntry.cleanupTimer) {\n            clearTimeout(cacheEntry.cleanupTimer);\n            cacheEntry.cleanupTimer = null;\n        }\n        var subscription = {\n            unsubscribe: function () {\n                cacheEntry.subscribers = cacheEntry.subscribers.filter(function (_a) {\n                    var o = _a.observer;\n                    return o !== observer;\n                });\n                if (cacheEntry.subscribers.length === 0) {\n                    cacheEntry.cleanupTimer = setTimeout(function () {\n                        if (cacheEntry.subscribers.length === 0) {\n                            delete _this.lookup[query.branchId + query.tags];\n                        }\n                    }, 100);\n                }\n            }\n        };\n        cacheEntry.subscribers.push({ observer: observer, subscription: subscription });\n        if (cacheEntry.value) {\n            // Value has been successfully retrieved already. Pick from cache.\n            observer(cacheEntry.optimisticValue || cacheEntry.value, null, subscription);\n        }\n        else if (cacheEntry.isFetching) {\n            // A value is on its way. Sit back and relax. All registered\n            // observers (including this one) will be notified when data arrives\n            // or fails.\n        }\n        else if (cacheEntry.error) {\n            observer(null, cacheEntry.error, subscription);\n        }\n        else {\n            cacheEntry.fetch();\n        }\n        return subscription;\n    };\n    return DeltaCache;\n}());\nexport { DeltaCache };\nvar DeltaCacheEntry = /** @class */ (function () {\n    function DeltaCacheEntry(client, query) {\n        this.fetchOperationId = 0; // Makes sure a re-fetch will discard the result from any ongoing fetch.\n        this.client = client;\n        this.query = query;\n        this.value = null;\n        this.error = null;\n        this.optimisticValue = null;\n        this.subscribers = [];\n        this.isFetching = false;\n        this.cleanupTimer = null;\n    }\n    DeltaCacheEntry.prototype.fetch = function () {\n        var _this = this;\n        var fetchOperationId = ++this.fetchOperationId;\n        this.isFetching = true;\n        this.fetchFromServer().then(function (value) {\n            // Success\n            if (fetchOperationId === _this.fetchOperationId) {\n                _this.isFetching = false;\n                value.sort(function (a, b) { return b.dateTime - a.dateTime; }); // Latest first\n                _this.value = value;\n                _this.optimisticValue = value;\n                _this.notify(value);\n            }\n        }).catch(function (error) {\n            // Fail\n            if (fetchOperationId === _this.fetchOperationId) {\n                _this.isFetching = false;\n                _this.error = error;\n                _this.fail(error);\n            }\n        });\n    };\n    DeltaCacheEntry.prototype.fetchFromServer = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var res, _a, _b;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (!this.query.branchId)\n                            throw new Error('Deltas only available on branches');\n                        return [4 /*yield*/, this.client.http.get('deltas', this.query)];\n                    case 1:\n                        res = _c.sent();\n                        if (!(res.status >= 300 || res.status < 200)) return [3 /*break*/, 3];\n                        _a = HttpError.bind;\n                        _b = [void 0, res.status];\n                        return [4 /*yield*/, res.text()];\n                    case 2: throw new (_a.apply(HttpError, _b.concat([_c.sent()])))();\n                    case 3: return [4 /*yield*/, res.json()];\n                    case 4: return [2 /*return*/, _c.sent()];\n                }\n            });\n        });\n    };\n    DeltaCacheEntry.prototype.notify = function (value) {\n        for (var _i = 0, _a = this.subscribers; _i < _a.length; _i++) {\n            var _b = _a[_i], observer = _b.observer, subscription = _b.subscription;\n            observer(value, null, subscription);\n        }\n    };\n    DeltaCacheEntry.prototype.fail = function (error) {\n        var copy = this.subscribers.slice();\n        this.subscribers = [];\n        for (var _i = 0, copy_1 = copy; _i < copy_1.length; _i++) {\n            var _a = copy_1[_i], observer = _a.observer, subscription = _a.subscription;\n            observer(null, error, subscription);\n        }\n    };\n    return DeltaCacheEntry;\n}());\n//# sourceMappingURL=delta-cache.js.map","import * as tslib_1 from \"tslib\";\nimport { Collection } from '../../observable';\nvar DeltaCollection = /** @class */ (function (_super) {\n    tslib_1.__extends(DeltaCollection, _super);\n    function DeltaCollection(deltaCache, query) {\n        var _this = _super.call(this, function (observer) { return _this.deltaCache.subscribe(query, observer); }) || this;\n        _this.deltaCache = deltaCache;\n        _this.query = query;\n        return _this;\n    }\n    DeltaCollection.prototype.tags = function () {\n        var tags = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tags[_i] = arguments[_i];\n        }\n        return new DeltaCollection(this.deltaCache, tslib_1.__assign({}, this.query, { tags: tags }));\n    };\n    return DeltaCollection;\n}(Collection));\nexport { DeltaCollection };\n//# sourceMappingURL=delta-collection.js.map","import * as tslib_1 from \"tslib\";\nexport function applyDelta(doc, delta) {\n    var keys = Object.keys(delta);\n    var targetDoc = doc;\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        if (targetDoc === doc)\n            targetDoc = tslib_1.__assign({}, doc);\n        var val = delta[key];\n        if (val && typeof val === 'object') {\n            var metaInstructions = Object.keys(val)\n                .filter(function (key) { return key.startsWith('$'); });\n            if (metaInstructions.length > 0) {\n                var _loop_1 = function (mi) {\n                    var miValue = val[mi];\n                    switch (mi) {\n                        case \"$unset\": {\n                            // Do nothing on target doc!\n                            targetDoc.$wasUnset = true; // Just mark it for re-retrieval after successful posting changes.\n                            break;\n                        }\n                        case \"$add\": {\n                            var valuesToAdd = miValue;\n                            if (!Array.isArray(valuesToAdd)) {\n                                throw new Error(\"$add instruction must contain array\");\n                            }\n                            var targetArray = targetDoc[key];\n                            if (!Array.isArray(targetArray)) {\n                                targetArray = [];\n                            }\n                            else {\n                                targetArray = targetArray.slice(); // On JS side, we must be immutable\n                            }\n                            targetDoc[key] = targetArray;\n                            for (var _i = 0, valuesToAdd_1 = valuesToAdd; _i < valuesToAdd_1.length; _i++) {\n                                var v = valuesToAdd_1[_i];\n                                if (!targetArray.includes(v)) { // avoid dups\n                                    targetArray.push(v);\n                                }\n                            }\n                            break;\n                        }\n                        case \"$remove\": {\n                            var valuesToRemove_1 = miValue;\n                            if (!Array.isArray(valuesToRemove_1)) {\n                                throw new Error(\"$remove instruction must contain array\");\n                            }\n                            var targetArray = targetDoc[key];\n                            if (!Array.isArray(targetArray)) {\n                                targetArray = [];\n                            }\n                            targetDoc[key] = targetArray.filter(function (t) { return !valuesToRemove_1.includes(t); });\n                            break;\n                        }\n                    }\n                };\n                for (var _a = 0, metaInstructions_1 = metaInstructions; _a < metaInstructions_1.length; _a++) {\n                    var mi = metaInstructions_1[_a];\n                    _loop_1(mi);\n                }\n                continue;\n            }\n        }\n        targetDoc[key] = val;\n    }\n    return targetDoc;\n}\n// {name: \"Ulla\"}, {name: {$unset:0}\n// {tags: {$add: \"hej\"}}, {tags: {$unset:0}\"}\nexport function mergeDeltas(delta1, delta2, _a) {\n    var removeUnsetProps = (_a === void 0 ? { removeUnsetProps: false } : _a).removeUnsetProps;\n    //return {...delta1, ...delta2};\n    var keys = Object.keys(delta2);\n    var targetDelta = tslib_1.__assign({}, delta1);\n    for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n        var key = keys_2[_i];\n        var val = delta2[key];\n        if (val && typeof val === 'object') {\n            var metaInstructions = Object.keys(val)\n                .filter(function (key) { return key.startsWith('$'); });\n            if (metaInstructions.length > 0) {\n                var _loop_2 = function (mi) {\n                    var miValue = val[mi];\n                    switch (mi) {\n                        case \"$unset\": {\n                            if (removeUnsetProps) {\n                                delete targetDelta[key];\n                            }\n                            else {\n                                // No matter if targetDelta is empty or has value. Set it to {$unset:0}\n                                // to make sure the very end result will have {$unset:0}\n                                targetDelta[key] = { $unset: 0 };\n                            }\n                            break;\n                        }\n                        case \"$add\": {\n                            var valuesToAdd_2 = miValue;\n                            if (!Array.isArray(valuesToAdd_2)) {\n                                throw new Error(\"$add instruction must contain array\");\n                            }\n                            var targetMetaProp = targetDelta[key];\n                            targetMetaProp = targetMetaProp ? tslib_1.__assign({}, targetMetaProp) : {};\n                            targetDelta[key] = targetMetaProp;\n                            // First, just check if target metaProp has {$remove: [...items]}\n                            // If so, remove any equal items from there before merging the {$add: [...]} arrays.\n                            var targetRemoveArray = targetMetaProp.$remove;\n                            if (Array.isArray(targetRemoveArray)) {\n                                targetMetaProp.$remove =\n                                    targetRemoveArray.filter(function (t) { return !valuesToAdd_2.includes(t); });\n                                if (targetMetaProp.$remove.length === 0) {\n                                    // If $remove array became emtpy. Remove the $remove prop.\n                                    delete targetMetaProp.$remove;\n                                }\n                            }\n                            // Now it's time to merge or create target $add array.\n                            var targetAddArray = targetMetaProp.$add;\n                            targetAddArray = targetAddArray ? targetAddArray.concat(valuesToAdd_2) : valuesToAdd_2.slice();\n                            targetMetaProp.$add = targetAddArray;\n                            break;\n                        }\n                        case \"$remove\": {\n                            var valuesToRemove_2 = miValue;\n                            if (!Array.isArray(valuesToRemove_2)) {\n                                throw new Error(\"$remove instruction must contain array\");\n                            }\n                            var targetMetaProp = targetDelta[key];\n                            targetMetaProp = targetMetaProp ? tslib_1.__assign({}, targetMetaProp) : {};\n                            targetDelta[key] = targetMetaProp;\n                            // First, just check if target metaProp has {$add: [...items]}\n                            // If so, remove any equal items from there before merging the {$remove: [...]} arrays.\n                            var targetAddArray = targetMetaProp.$remove;\n                            if (Array.isArray(targetAddArray)) {\n                                targetMetaProp.$add =\n                                    targetAddArray.filter(function (t) { return !valuesToRemove_2.includes(t); });\n                                if (targetMetaProp.$add.length === 0) {\n                                    // If $add array became emtpy. Remove the $add prop.\n                                    delete targetMetaProp.$add;\n                                }\n                            }\n                            // Now it's time to merge or create target $remove array.\n                            var targetRemoveArray = targetMetaProp.$remove;\n                            targetRemoveArray = targetRemoveArray ? targetRemoveArray.concat(valuesToRemove_2) : valuesToRemove_2.slice();\n                            targetMetaProp.$remove = targetRemoveArray;\n                            break;\n                        }\n                    }\n                };\n                for (var _b = 0, metaInstructions_2 = metaInstructions; _b < metaInstructions_2.length; _b++) {\n                    var mi = metaInstructions_2[_b];\n                    _loop_2(mi);\n                }\n                continue;\n            }\n        }\n        targetDelta[key] = val;\n    }\n    return targetDelta;\n}\n//# sourceMappingURL=delta-merge.js.map","export * from './kedbackend-collection';\nexport * from './kedbackend-query';\nexport * from './kedbackend-repo';\nexport * from './kedbackend-subscription';\nexport * from './kedbackend-writer';\nexport * from './mutation-queue';\nexport * from './query-set';\nexport * from '../observable/mixin';\n//# sourceMappingURL=index.js.map","import * as tslib_1 from \"tslib\";\nimport { BatchRunner } from '../ked-backend-client';\nimport { KedBackendSubscription } from \"./kedbackend-subscription\";\nimport { CacheBust } from './cache-bust';\nimport { KedBackendQuery } from './kedbackend-query';\nimport { Collection } from '../observable/collection';\n/**\n * Represents a \"live\" query against a table or filtered table.\n */\nvar KedBackendCollection = /** @class */ (function (_super) {\n    tslib_1.__extends(KedBackendCollection, _super);\n    function KedBackendCollection(repo, table, query) {\n        var _this = _super.call(this, function (observer) {\n            var subscription = new KedBackendSubscription(observer, _this);\n            _this.repo.querySet.subscribe(subscription);\n            return subscription;\n        }) || this;\n        _this.repo = repo;\n        _this.table = table;\n        _this.query = query;\n        return _this;\n    }\n    Object.defineProperty(KedBackendCollection.prototype, \"queryKey\", {\n        get: function () {\n            return KedBackendQuery.queryKey(this.table, this.query);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KedBackendCollection.prototype, \"includes\", {\n        get: function () {\n            return this._includes || (this._includes = [].concat(this.query.include || []));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    KedBackendCollection.prototype.applyQuery = function (query) {\n        return new KedBackendCollection(this.repo, this.table, tslib_1.__assign({}, this.query, query));\n    };\n    KedBackendCollection.prototype.addToQueryArrayProp = function (arrayProp, entries) {\n        var _a;\n        return this.applyQuery((_a = {}, _a[arrayProp] = (this.query[arrayProp] || []).concat(entries), _a));\n    };\n    KedBackendCollection.prototype.addFlags = function () {\n        var flags = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            flags[_i] = arguments[_i];\n        }\n        return this.addToQueryArrayProp(\"flags\", flags);\n    };\n    KedBackendCollection.prototype.debug = function () {\n        return this.applyQuery({ debug: true });\n    };\n    KedBackendCollection.prototype.idsOnly = function () {\n        return this.addFlags(\"idsOnly\");\n    };\n    KedBackendCollection.prototype.idsAndNamesOnly = function () {\n        return this.addFlags(\"idsAndNamesOnly\");\n    };\n    KedBackendCollection.prototype.includeIdsOnly = function () {\n        return this.addFlags(\"includeIdsOnly\");\n    };\n    KedBackendCollection.prototype.includeIdsAndNamesOnly = function () {\n        return this.addFlags(\"includeIdsAndNamesOnly\");\n    };\n    KedBackendCollection.prototype.between = function (from, to) {\n        return this.applyQuery({ from: from, to: to });\n    };\n    KedBackendCollection.prototype.role = function (role) {\n        return this.applyQuery({ role: role });\n    };\n    KedBackendCollection.prototype.hasEdgesFrom = function (ids) {\n        if (ids.length === 0 || ids.some(function (id) { return !id; }))\n            throw new Error(\"Invalid id list given to Collection.hasEdgesFrom(\" + JSON.stringify(ids) + \")\");\n        var hef = this.addToQueryArrayProp(\"hasEdgesFrom\", ids);\n        return hef;\n    };\n    KedBackendCollection.prototype.hasEdgesTo = function (ids) {\n        if (ids.length === 0 || ids.some(function (id) { return !id; }))\n            throw new Error(\"Invalid id list given to Collection.hasEdgesTo(\" + JSON.stringify(ids) + \")\");\n        var het = this.addToQueryArrayProp(\"hasEdgesTo\", ids);\n        return het;\n    };\n    KedBackendCollection.prototype.id = function (id) {\n        var _this = this;\n        return this.applyQuery({ ids: [id] }).single({\n            onZero: function () { throw new Error(\"Could not find entity in \" + _this.table + \" with id \" + id); },\n            onMany: function () { throw new Error(\"Multiple entries in \" + _this.table + \" with id \" + id); },\n        });\n    };\n    KedBackendCollection.prototype.ids = function (ids) {\n        return this.applyQuery({ ids: ids });\n    };\n    KedBackendCollection.prototype.name = function (name) {\n        return this.applyQuery({ name: name });\n    };\n    KedBackendCollection.prototype.tags = function () {\n        var tags = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tags[_i] = arguments[_i];\n        }\n        return this.applyQuery({ tags: tags });\n    };\n    KedBackendCollection.prototype.branchId = function (branchId) {\n        return this.applyQuery({ branchId: branchId });\n    };\n    KedBackendCollection.prototype.include = function () {\n        var graphs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            graphs[_i] = arguments[_i];\n        }\n        return this.addToQueryArrayProp(\"include\", graphs);\n    };\n    KedBackendCollection.prototype.cacheOptimized = function (onOrOff) {\n        return onOrOff === undefined || onOrOff === true ?\n            this.applyQuery({ cacheBust: CacheBust.getCacheBust(this.table, this.query, this.repo.getUser(), this.includes) }) :\n            this.applyQuery({ cacheBust: undefined });\n    };\n    KedBackendCollection.prototype.mutationsOnEmpty = function (mutationFactory) {\n        var tx = new BatchRunner();\n        mutationFactory(tx);\n        return this.applyQuery({ mutationsOnEmpty: tx.mutationRequests });\n    };\n    KedBackendCollection.prototype.single = function (throwers) {\n        var _this = this;\n        var _a = throwers || {}, onZero = _a.onZero, onMany = _a.onMany;\n        return this.toValue().map(function (items) {\n            if (items.length === 0) {\n                if (onZero)\n                    onZero();\n                else\n                    throw new Error(\"Single item of \" + _this.table + \" expected to be returned by query \" + JSON.stringify(_this.query) + \" but none was found.\");\n            }\n            if (items.length > 1) {\n                debugger;\n                if (onMany)\n                    onMany();\n                else\n                    console.log(\"Single item of \" + _this.table + \" expected to be returned by query \" + JSON.stringify(_this.query) + \" but \" + items.length + \" was found.\");\n            }\n            return items[0];\n        });\n    };\n    /*combineLatest<TOther>(other: QueryObservable<TOther>) {\n      return this.render(x => x).combineLatest(other);\n    }*/\n    KedBackendCollection.prototype.update = function (doc, changes, debounce) {\n        if (debounce === void 0) { debounce = 1000; }\n        this.repo.writer.mutate([{\n                op: 'update',\n                table: this.table,\n                branchId: this.query.branchId,\n                id: doc.id,\n                deltaDoc: changes,\n                targetName: doc.name\n            }], debounce);\n    };\n    KedBackendCollection.prototype.addRelated = function (id, label, relatedDoc) {\n        this.repo.writer.mutate([{\n                op: 'add-related',\n                table: this.table,\n                branchId: this.query.branchId,\n                id: id,\n                graphProp: label,\n                relatedDoc: relatedDoc\n            }], 0);\n    };\n    KedBackendCollection.prototype.add = function (doc) {\n        this.repo.writer.mutate([{\n                op: 'add',\n                id: doc.id,\n                table: this.table,\n                doc: doc\n            }], 0);\n    };\n    KedBackendCollection.prototype.removeRelated = function (id, label, relatedDoc) {\n        this.repo.writer.mutate([{\n                op: 'remove-related',\n                table: this.table,\n                branchId: this.query.branchId,\n                id: id,\n                graphProp: label,\n                relatedDoc: relatedDoc\n            }], 0);\n    };\n    KedBackendCollection.prototype.undoLink = function (id, label, relatedId) {\n        if (!this.query.branchId)\n            throw new Error(\"undo links can only be performed on branches\");\n        this.repo.writer.mutate([{\n                op: 'undo-link',\n                table: this.table,\n                branchId: this.query.branchId,\n                id: id,\n                graphProp: label,\n                relatedId: relatedId\n            }], 0);\n    };\n    KedBackendCollection.prototype.delete = function () {\n        var _this = this;\n        var ids = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            ids[_i] = arguments[_i];\n        }\n        this.repo.writer.mutate(ids.map(function (id) { return ({\n            op: 'delete',\n            table: _this.table,\n            id: id\n        }); }), 0);\n    };\n    KedBackendCollection.prototype.unsubscribe = function (subscription) {\n        this.repo.querySet.unsubscribe(subscription);\n    };\n    return KedBackendCollection;\n}(Collection));\nexport { KedBackendCollection };\n/*mixin(\n  KedBackendCollection.prototype,\n  MappedCollection.prototype,\n  \"map\", \"flat\", \"concat\", \"render\", \"load\");*/\n//# sourceMappingURL=kedbackend-collection.js.map","import * as tslib_1 from \"tslib\";\nimport { updateArray } from '../ked-backend-client/utils';\nimport { branchSensitive, getTableFromLabel } from './utils';\nimport { applyDelta } from './delta-merge';\nvar KedBackendQuery = /** @class */ (function () {\n    function KedBackendQuery(table, query, user, repo, mutationQueue) {\n        this.table = table;\n        this.query = query;\n        this.user = user;\n        this.repo = repo;\n        this.mutationQueue = mutationQueue;\n        this.subscriptions = [];\n        this.data = [];\n        this.gotInitialResponse = false;\n        this.invalid = false;\n        this.loadedVersion = 0;\n        this._loadPromise = null;\n        this.includes = query.include ?\n            typeof query.include === 'string' ?\n                [query.include] :\n                query.include :\n            [];\n    }\n    KedBackendQuery.queryKey = function (table, query) {\n        var mutationsOnEmpty = query.mutationsOnEmpty, comparableProps = tslib_1.__rest(query, [\"mutationsOnEmpty\"]);\n        return table + JSON.stringify(comparableProps);\n    };\n    Object.defineProperty(KedBackendQuery.prototype, \"queryKey\", {\n        get: function () {\n            return KedBackendQuery.queryKey(this.table, this.query);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    KedBackendQuery.prototype.subscribe = function (subscription) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.subscriptions.push(subscription);\n                        if (!(this.gotInitialResponse && !this.invalid)) return [3 /*break*/, 1];\n                        data = this.getDataWithMutationsApplied(this.mutationQueue.get(), true, this.data);\n                        subscription.notifySubscriber(data, this.error);\n                        return [3 /*break*/, 4];\n                    case 1:\n                        data = this.queryLocally();\n                        if (!data) return [3 /*break*/, 2];\n                        this.data = data;\n                        this.error = null;\n                        subscription.notifySubscriber(data, this.error);\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this.load()];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    KedBackendQuery.prototype.load = function (version) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var loadPromise;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.gotInitialResponse) {\n                            // mutationsOnEmpty should never be used twice.\n                            delete this.query.mutationsOnEmpty;\n                        }\n                        if (!(!version && this._loadPromise)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._loadPromise];\n                    case 1: \n                    // loading is ongoing, and caller does not require a recent refresh.\n                    // wait for the ongoing load to complete\n                    return [2 /*return*/, _a.sent()];\n                    case 2:\n                        version = version || this.repo.writer.persistedVersion.value;\n                        loadPromise = this._loadPromise = this._load(version).then(function (data) {\n                            if (_this._loadPromise === loadPromise) {\n                                _this.data = data;\n                                _this.loadedVersion = Math.max(_this.loadedVersion, version);\n                            }\n                        }).catch(function (error) {\n                            if (_this._loadPromise === loadPromise) {\n                                // Noone has refreshed our load. The error is the final result. Set it.\n                                _this.error = error;\n                            }\n                        }).then(function () {\n                            if (_this._loadPromise === loadPromise) {\n                                // Noone has refreshed our load. We're finished. Data or error is already set.\n                                // Mark gotInitialResponse to true and notify subscribers.\n                                _this._loadPromise = null;\n                                _this.gotInitialResponse = true;\n                                _this.notifySubscribers(_this.mutationQueue.get());\n                            }\n                            else {\n                                // A more recent call to load() is ongoing, OR was ongoing but responded\n                                // before us.\n                                // In any case return this._loadPromise. If it's ongoing we'll wait for it\n                                // to finish. If it's null, we'll be returning finally here without\n                                // any action, because the action was taken by the refresher.\n                                return _this._loadPromise; // Wait for the refreshed load to complete\n                            }\n                        });\n                        return [4 /*yield*/, loadPromise];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    KedBackendQuery.prototype._load = function (version) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.mutationQueue.affectsQuery(this.table, this.query, this.includes)) return [3 /*break*/, 2];\n                        // There are outgoing mutations that affects this query.\n                        // Need to wait till they reach server and server responds with OK before querying\n                        // the server. Otherwise, we may get inaccurate data from server.\n                        return [4 /*yield*/, this.repo.writer.waitForVersionToPersist(version)];\n                    case 1:\n                        // There are outgoing mutations that affects this query.\n                        // Need to wait till they reach server and server responds with OK before querying\n                        // the server. Otherwise, we may get inaccurate data from server.\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [4 /*yield*/, this.queryServer()];\n                    case 3: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    KedBackendQuery.prototype.unsubscribe = function (subscription) {\n        this.subscriptions = this.subscriptions.filter(function (s) { return s !== subscription; });\n    };\n    KedBackendQuery.prototype.commitMutations = function (mutations, version) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _i, mutations_1, m, data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.data) return [3 /*break*/, 9];\n                        _i = 0, mutations_1 = mutations;\n                        _a.label = 1;\n                    case 1:\n                        if (!(_i < mutations_1.length)) return [3 /*break*/, 8];\n                        m = mutations_1[_i];\n                        if (!(m.op === 'clear-branch' && (m.branchId === this.query.branchId))) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.refreshOrInvalidate(version)];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                    case 3:\n                        if (!(m.op === 'merge' && (!m.targetBranchId ||\n                            m.branchId === this.query.branchId ||\n                            m.targetBranchId === this.query.branchId))) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.refreshOrInvalidate(version)];\n                    case 4:\n                        _a.sent();\n                        return [2 /*return*/];\n                    case 5:\n                        if (!(m.op === 'update' && ((m.deltaDoc.tags && this.query.tags) ||\n                            (m.deltaDoc.name && this.query.name)))) return [3 /*break*/, 7];\n                        // A tag may have been added, or renamed, and\n                        // the query is dependent on the same property.\n                        // The query must be refreshed from server as we cannot\n                        // commit the mutations locally as we don't have all info.\n                        return [4 /*yield*/, this.refreshOrInvalidate(version)];\n                    case 6:\n                        // A tag may have been added, or renamed, and\n                        // the query is dependent on the same property.\n                        // The query must be refreshed from server as we cannot\n                        // commit the mutations locally as we don't have all info.\n                        _a.sent();\n                        return [2 /*return*/];\n                    case 7:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 8:\n                        data = this.getDataWithMutationsApplied(mutations, false, this.data);\n                        this.data = data;\n                        _a.label = 9;\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    KedBackendQuery.prototype.refreshOrInvalidate = function (version) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.subscriptions.length === 0)) return [3 /*break*/, 1];\n                        this.invalid = true;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.load(version)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    KedBackendQuery.prototype.notifySubscribers = function (optimisticMutations) {\n        var _this = this;\n        if (this.data && this.gotInitialResponse) {\n            var data_1 = this.getDataWithMutationsApplied(optimisticMutations, true, this.data);\n            this.subscriptions.forEach(function (s) {\n                s.notifySubscriber(data_1, _this.error);\n            });\n        }\n    };\n    KedBackendQuery.prototype.queryLocally = function () {\n        return this.repo.querySet.queryLocally(this.table, this.query, this.includes);\n    };\n    KedBackendQuery.prototype.queryServer = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var data;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.repo.getClient().list(this.table, tslib_1.__assign({}, this.query))];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    KedBackendQuery.prototype.getDataWithMutationsApplied = function (mutations, optimistic, data) {\n        var _this = this;\n        mutations.forEach(function (mutation) {\n            data = _this.applyMutationsOnData(data, mutation, optimistic);\n        });\n        return data;\n    };\n    KedBackendQuery.prototype.applyMutationsOnData = function (data, m, optimistic) {\n        if (branchSensitive(m) && m.branchId != this.query.branchId)\n            return data;\n        var _a = this, table = _a.table, includes = _a.includes, listOptions = _a.query;\n        var sourceIds = listOptions.hasEdgesFrom ? [].concat(listOptions.hasEdgesFrom || []) : [];\n        var requestedTags = listOptions.tags ? [].concat(listOptions.tags || []) : [];\n        switch (m.op) {\n            case 'update': {\n                return updateArray(data, function (doc) {\n                    if (doc.id === m.id) {\n                        // Apply delta on updated document\n                        var updatedDoc = applyDelta(doc, m.deltaDoc);\n                        if (optimistic)\n                            updatedDoc.$meta = 'updating';\n                        return updatedDoc;\n                    }\n                    // If id does not apply to this doc, search in graphs the id is found\n                    // among graph included docs, and if so, update that one:\n                    includes.forEach(function (label) {\n                        var _a;\n                        var includedDocs = doc[label];\n                        if (includedDocs) {\n                            var updatedArray = updateArray(includedDocs, function (related) {\n                                if (related.id !== m.id)\n                                    return related;\n                                var updatedRelated = applyDelta(related, m.deltaDoc);\n                                if (optimistic)\n                                    updatedRelated.$meta = 'updating';\n                                return updatedRelated;\n                            });\n                            if (updatedArray !== includedDocs) {\n                                doc = tslib_1.__assign({}, doc, (_a = {}, _a[label] = updatedArray, _a));\n                            }\n                        }\n                    });\n                    return doc;\n                });\n            }\n            case 'add':\n                if (table === m.table) {\n                    if (listOptions.tags) {\n                        var queriedTags_1 = [].concat(listOptions.tags); // tag can be either string or string[]. Make is string[] always.\n                        if (m.doc.tags && m.doc.tags.some(function (tag) { return queriedTags_1.includes(tag); })) {\n                            return data.concat([m.doc]); // Make the added doc appear in the result (optimistic mutation)\n                        }\n                    }\n                    // Todo, apply also for other list options, like ids:\n                    // The above code for 'add' was only written to cover the use case of teachers-page notifications!\n                }\n                return data; // fallback case - query was not affected.\n            case 'add-related':\n                if (table === m.table && includes.indexOf(m.graphProp) !== -1) {\n                    // If expression is `db.courseBlocks....whatever.. .include(\"abilities\")`, detect: db.courseBlocks.addRelated(blockId, 'abilities', ...)\n                    // ...because table = 'courseBlocks' and includes has \"abilities\".\n                    return updateArray(data, function (doc) {\n                        var _a;\n                        if (doc.id !== m.id)\n                            return doc;\n                        var relatedDoc = tslib_1.__assign({}, m.relatedDoc);\n                        if (optimistic)\n                            relatedDoc.$meta = 'adding';\n                        return tslib_1.__assign({}, doc, (_a = {}, _a[m.graphProp] = doc[m.graphProp].concat([relatedDoc]), _a));\n                    });\n                }\n                if (listOptions.hasEdgesFrom) {\n                    if (sourceIds.includes(m.id)) {\n                        // If expression is:\n                        //   `db.courseBlocks.hasEdgesFrom([courseId])`  (meaning table='courseBlocks' and sourceIds includes courseId)\n                        // , detect: db.courseInstances.addRelated(courseId, 'courseBlocks', ....) // m.graphProp === 'blocks'--> getTableFromLabel --> 'courseBlocks'\n                        if (table === getTableFromLabel(m.table, m.graphProp)) {\n                            if (!listOptions.tags)\n                                return data.concat(this.setGraphProps(m.relatedDoc));\n                            if (m.relatedDoc.tags && requestedTags.some(function (tag) { return m.relatedDoc.tags.includes(tag); })) {\n                                return data.concat(this.setGraphProps(m.relatedDoc));\n                            }\n                        }\n                    }\n                }\n                if (listOptions.ids && listOptions.ids.some(function (id) { return id === m.relatedDoc.id; })) {\n                    // A certain ID is observed. A doc with this id is being added.\n                    // Add the doc to the result. Exactly this WILL happen in the following typical scenario:\n                    // 1. User adds a related document to a list.\n                    // 2. Document remains within the MutationQueue while batch-request is being processed by server.\n                    // 3. User clicks the added item to edit or view it (or our component redirects to its editor)\n                    // 4. A new query of that particular ID is subscribed to {ids=[theId]}\n                    //    KedBackendQuery.subscribe then does this:\n                    //      1. Call queryLocally() before querying server\n                    //      2. queryLocally() inspects mutations and finds a match, returning an empty list\n                    //         (assumes as we are adding it, it can't exist on the server anyway)\n                    //      3. KedBackendQUery applies mutations onto the empty list, and ends up here to add\n                    //         it optimistically.\n                    //      4. When server responds with 200 OK, calls us here again with optimistic=false\n                    //         to \"persist\" it in the query's data array.\n                    //      4B: If not 200 OK, mutation may be gone and the subscriber will se an error page\n                    //         \"Could not find entity with id X.\" along with a red error message on the screen\n                    //         about that it failed to save on server.\n                    return data.concat(this.setGraphProps(m.relatedDoc));\n                }\n                return data;\n            case 'remove-related':\n                if (table === m.table && includes.indexOf(m.graphProp) !== -1) {\n                    return updateArray(data, function (doc) {\n                        var _a;\n                        var includedDocs = doc[m.graphProp];\n                        if (!includedDocs)\n                            return doc;\n                        if (doc.id !== m.id)\n                            return doc;\n                        return tslib_1.__assign({}, doc, (_a = {}, _a[m.graphProp] = optimistic ?\n                            // Mark related-doc-to-remove with $meta: 'deleting'\n                            includedDocs.map(function (d) { return d.id !== m.relatedDoc.id ?\n                                d : tslib_1.__assign({}, d, { $meta: 'deleting' }); }) :\n                            // Delete related-doc-to-remove from doc[grapProp]:\n                            includedDocs.filter(function (d) { return d.id !== m.relatedDoc.id; }), _a));\n                    });\n                }\n                if (listOptions.hasEdgesFrom) {\n                    if (sourceIds.includes(m.id))\n                        return optimistic ?\n                            data.map(function (d) { return d.id === m.relatedDoc.id ? tslib_1.__assign({}, d, { $meta: 'deleting' }) : d; }) :\n                            data.filter(function (d) { return d.id !== m.relatedDoc.id; });\n                }\n                return data;\n            case 'delete':\n                if (table === m.table) {\n                    return data.filter(function (d) { return d.id !== m.id; });\n                }\n                else if (listOptions.include) {\n                    var includedTables = includes\n                        .map(function (label) { return ({ label: label, table: getTableFromLabel(table, label) }); });\n                    var labels_1 = includedTables.filter(function (_a) {\n                        var table = _a.table;\n                        return table === m.table;\n                    });\n                    if (labels_1.length > 0) {\n                        return updateArray(data, function (doc) {\n                            labels_1.forEach(function (_a) {\n                                var label = _a.label;\n                                var _b;\n                                var relatedDocs = doc[label];\n                                if (relatedDocs) {\n                                    doc = tslib_1.__assign({}, doc, (_b = {}, _b[label] = optimistic ?\n                                        relatedDocs.map(function (d) { return d.id === m.id ? tslib_1.__assign({}, d, { $meta: 'deleting' }) : d; }) :\n                                        relatedDocs.filter(function (_a) {\n                                            var id = _a.id;\n                                            return id !== m.id;\n                                        }), _b));\n                                }\n                            });\n                            return doc;\n                        });\n                    }\n                }\n                return data;\n            default:\n                return data;\n        }\n    };\n    KedBackendQuery.prototype.setGraphProps = function (doc) {\n        var copy = tslib_1.__assign({}, doc);\n        this.includes.forEach(function (label) { return copy[label] = copy[label] || []; });\n        return copy;\n    };\n    return KedBackendQuery;\n}());\nexport { KedBackendQuery };\n//# sourceMappingURL=kedbackend-query.js.map","import * as tslib_1 from \"tslib\";\nimport { tables } from 'kedbackend-schema/schema.json';\nimport { KedBackendCollection } from './kedbackend-collection';\nimport { QuerySet } from './query-set';\nimport { MutationQueue } from './mutation-queue';\nimport { KedBackendWriter } from './kedbackend-writer';\nimport { DeltaCollection } from './delta-collection/delta-collection';\nvar KedBackendRepo = /** @class */ (function () {\n    function KedBackendRepo(getClient, getUser, getUserDisplayName, defaultQueryOptions, mutationQueue, querySet, writer, cacheOptimized) {\n        var _this = this;\n        this.getClient = getClient;\n        this.getUser = getUser;\n        this.getUserDisplayName = getUserDisplayName;\n        this.defaultQueryOptions = defaultQueryOptions;\n        this.mutationQueue = mutationQueue;\n        this.querySet = querySet;\n        this.writer = writer;\n        this.cacheOptimized = cacheOptimized;\n        if (!defaultQueryOptions)\n            this.defaultQueryOptions = {};\n        if (!mutationQueue)\n            this.mutationQueue = new MutationQueue();\n        if (!querySet)\n            this.querySet = new QuerySet(this.mutationQueue);\n        if (!writer)\n            this.writer = new KedBackendWriter(this.mutationQueue, this.querySet, getClient, getUser, getUserDisplayName);\n        Object.keys(tables).forEach(function (table) {\n            var collection = new KedBackendCollection(_this, table, defaultQueryOptions || {});\n            if (cacheOptimized) {\n                collection = collection.cacheOptimized();\n            }\n            _this[table] = collection;\n        });\n        this.deltas = new DeltaCollection(this.writer.deltaCache, {\n            branchId: this.defaultQueryOptions.branchId // If branchId is undefined. DeltaCollection will respond with Error on subscribe()\n        });\n    }\n    KedBackendRepo.prototype.table = function (tableName) {\n        var collection = new KedBackendCollection(this, tableName, this.defaultQueryOptions);\n        if (this.cacheOptimized)\n            collection = collection.cacheOptimized();\n        return collection;\n    };\n    KedBackendRepo.prototype._clone = function (queryOptions, cacheOptimized) {\n        var clone = new KedBackendRepo(this.getClient, this.getUser, this.getUserDisplayName, tslib_1.__assign({}, this.defaultQueryOptions, queryOptions), this.mutationQueue, this.querySet, this.writer, cacheOptimized === undefined ? this.cacheOptimized : cacheOptimized);\n        return clone;\n    };\n    KedBackendRepo.prototype.branch = function (branchId) {\n        return this._clone({ branchId: branchId });\n    };\n    KedBackendRepo.prototype.role = function (role) {\n        return this._clone({ role: role });\n    };\n    KedBackendRepo.prototype.optimizeCache = function () {\n        return this._clone({}, true);\n    };\n    KedBackendRepo.prototype.clearBranch = function () {\n        if (!this.defaultQueryOptions.branchId)\n            throw new Error(\"Cannot clear master branch\");\n        this.writer.mutate([{ op: 'clear-branch', branchId: this.defaultQueryOptions.branchId }], 0);\n    };\n    KedBackendRepo.prototype.merge = function (targetBranchId) {\n        if (!this.defaultQueryOptions.branchId)\n            throw new Error(\"Cannot merge from master branch\");\n        this.writer.mutate([{ op: 'merge', branchId: this.defaultQueryOptions.branchId, targetBranchId: targetBranchId }], 0);\n    };\n    KedBackendRepo.prototype.saveNow = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.writer.waitForVersionToPersist(this.writer.currentVersion)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return KedBackendRepo;\n}());\nexport { KedBackendRepo };\n//# sourceMappingURL=kedbackend-repo.js.map","var KedBackendSubscription = /** @class */ (function () {\n    function KedBackendSubscription(subscriber, collection) {\n        this.subscriber = subscriber;\n        this.collection = collection;\n    }\n    KedBackendSubscription.prototype.notifySubscriber = function (data, error) {\n        try {\n            if (error)\n                this.subscriber([], error, this);\n            else if (data !== this.lastNotifiedData) { // Will in-fact be equal by reference if data is same as last notification (as we use an immutable approach on data)\n                this.lastNotifiedData = data;\n                this.subscriber(data, error, this);\n            }\n        }\n        catch (ex) {\n            try {\n                this.subscriber([], ex, this);\n            }\n            catch (ex2) {\n                console.error(\"Error while notifying KedBackendSubscriber:\", ex2, 'originally notified error:', ex);\n            }\n        }\n    };\n    KedBackendSubscription.prototype.unsubscribe = function () {\n        this.collection.unsubscribe(this);\n    };\n    return KedBackendSubscription;\n}());\nexport { KedBackendSubscription };\n//# sourceMappingURL=kedbackend-subscription.js.map","import * as tslib_1 from \"tslib\";\nimport { MutationQueue } from './mutation-queue';\nimport { BatchRunner } from '../ked-backend-client';\nimport { tables } from 'kedbackend-schema/schema.json';\nimport { CacheBust } from './cache-bust';\nimport { Emitter } from '../observable';\nimport { DeltaCache } from './delta-collection/delta-cache';\nvar KedBackendWriter = /** @class */ (function () {\n    function KedBackendWriter(mutationQueue, querySet, getClient, getUser, getUserDisplayName) {\n        this.mutationQueue = mutationQueue;\n        this.querySet = querySet;\n        this.getClient = getClient;\n        this.getUser = getUser;\n        this.getUserDisplayName = getUserDisplayName;\n        this._timeoutId = null;\n        this._isSavingPromise = null;\n        this.currentVersion = 0;\n        this.persistedVersion = new Emitter(0);\n        this.errorSubscribers = [];\n        this.stateSubscribers = [];\n        this.deltaCache = new DeltaCache(getClient, getUser, getUserDisplayName);\n    }\n    Object.defineProperty(KedBackendWriter.prototype, \"isSaving\", {\n        get: function () { return !!this._isSavingPromise; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KedBackendWriter.prototype, \"isEdited\", {\n        get: function () { return this.mutationQueue.get().length > 0; },\n        enumerable: true,\n        configurable: true\n    });\n    KedBackendWriter.prototype.onError = function (callback) {\n        this.errorSubscribers.push(callback);\n    };\n    KedBackendWriter.prototype.onStateChange = function (callback) {\n        this.stateSubscribers.push(callback);\n    };\n    KedBackendWriter.prototype.off = function (callback) {\n        this.errorSubscribers = this.errorSubscribers.filter(function (s) { return s !== callback; });\n        this.stateSubscribers = this.stateSubscribers.filter(function (s) { return s !== callback; });\n    };\n    KedBackendWriter.prototype.dispatchError = function (error, retryable) {\n        var _this = this;\n        this.errorSubscribers.forEach(function (callback) {\n            try {\n                callback(error, retryable, _this);\n            }\n            catch (_) { }\n        });\n    };\n    KedBackendWriter.prototype.dispatchStateChange = function () {\n        var _this = this;\n        this.stateSubscribers.forEach(function (callback) {\n            try {\n                callback(_this);\n            }\n            catch (_) { }\n        });\n    };\n    KedBackendWriter.prototype.mutate = function (mutations, debounce) {\n        this.mutationQueue.add(mutations);\n        ++this.currentVersion;\n        this.dispatchStateChange();\n        this.querySet.notifySubscribers();\n        this.deltaCache.applyMutations(this.mutationQueue.get(), { optimistic: true });\n        if (!this._isSavingPromise) {\n            if (this._timeoutId)\n                clearTimeout(this._timeoutId);\n            this._timeoutId = setTimeout(this.save.bind(this), debounce);\n        }\n        // If isSaving, we don't need to do anything, becase it will re-check if additional\n        // mutations have come, when saving is done.\n    };\n    KedBackendWriter.prototype.retrySave = function () {\n        return this.save();\n    };\n    KedBackendWriter.prototype.waitForVersionToPersist = function (version) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var persistedVersion;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.persistedVersion.load()];\n                    case 1:\n                        persistedVersion = _a.sent();\n                        if (!(persistedVersion < version)) return [3 /*break*/, 3];\n                        this.save(); // Be more eager to save\n                        return [4 /*yield*/, this.persistedVersion.filter(function (persistedVersion) { return persistedVersion >= version; }).load()];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    KedBackendWriter.prototype.save = function () {\n        var _this = this;\n        if (this._timeoutId)\n            clearTimeout(this._timeoutId);\n        if (this._isSavingPromise)\n            return this._isSavingPromise;\n        if (!this.isEdited)\n            return Promise.resolve();\n        this._timeoutId = null;\n        this._isSavingPromise = this._save();\n        this._isSavingPromise.catch(function () { }).then(function () { return _this._isSavingPromise = null; });\n        return this._isSavingPromise;\n    };\n    KedBackendWriter.prototype._save = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var mutations, version, mutationRequests, res_1, etagMutations, error_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.dispatchStateChange();\n                        mutations = this.mutationQueue.get();\n                        version = this.currentVersion;\n                        this.mutationQueue.moveToSavingQueue();\n                        mutationRequests = this.mapMutations(mutations);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 6, 11, 12]);\n                        return [4 /*yield*/, this.getClient().batch(mutationRequests)];\n                    case 2:\n                        res_1 = _a.sent();\n                        etagMutations = Object.keys(res_1.newEtags).map(function (id) { return ({\n                            op: 'update',\n                            table: null,\n                            id: id,\n                            deltaDoc: { $etag: res_1.newEtags[id] },\n                            targetName: null // We don't have the target name. But this mutation won't be visible in a DeltaCollection anyway, so it wont be used.\n                        }); });\n                        // Invalidate cache\n                        CacheBust.invalidateCache(mutationRequests, this.getUser());\n                        // Commmit mutations along with etagMutations into queries cached data\n                        this.persistedVersion.dispatch(version);\n                        this.deltaCache.applyMutations(mutations, { optimistic: false });\n                        return [4 /*yield*/, this.querySet.commitMutations(MutationQueue.merge(mutations, etagMutations), version)];\n                    case 3:\n                        _a.sent();\n                        // On success, clear saving queue as the mutations will now be committed to all query's data instead.\n                        this.mutationQueue.clearSavingQueue();\n                        this.dispatchStateChange(); // isEdited may have turned to false\n                        // Finally, notify subscribers so that views get updated with committed results\n                        this.querySet.notifySubscribers();\n                        if (!(this.mutationQueue.get().length > 0)) return [3 /*break*/, 5];\n                        // Additional mutations happend while we were saving. Handle them as well.\n                        return [4 /*yield*/, this._save()];\n                    case 4:\n                        // Additional mutations happend while we were saving. Handle them as well.\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [3 /*break*/, 12];\n                    case 6:\n                        error_1 = _a.sent();\n                        this.persistedVersion.dispatchError(error_1);\n                        if (!(error_1 && error_1.name && error_1.name.startsWith(\"http4\"))) return [3 /*break*/, 9];\n                        // Access Control denied, bad request or similar. Throw mutations away.\n                        this.dispatchError(error_1, false);\n                        this.mutationQueue.clearSavingQueue();\n                        this.dispatchStateChange(); // isEdited may have turned to false\n                        this.querySet.notifySubscribers();\n                        if (!(this.mutationQueue.get().length > 0)) return [3 /*break*/, 8];\n                        // Ho ho! Additional mutations happend while we were saving. Handle them alone. THey might be more lucky.\n                        return [4 /*yield*/, this._save()];\n                    case 7:\n                        // Ho ho! Additional mutations happend while we were saving. Handle them alone. THey might be more lucky.\n                        _a.sent();\n                        _a.label = 8;\n                    case 8: return [3 /*break*/, 10];\n                    case 9:\n                        this.dispatchError(error_1, true);\n                        _a.label = 10;\n                    case 10: return [3 /*break*/, 12];\n                    case 11:\n                        this.dispatchStateChange();\n                        return [7 /*endfinally*/];\n                    case 12: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    KedBackendWriter.prototype.mapMutations = function (mutations) {\n        var br = new BatchRunner();\n        mutations.forEach(function (m) {\n            switch (m.op) {\n                case 'update':\n                    br.update(m.table, m.id, m.deltaDoc, m.branchId);\n                    break;\n                case 'add':\n                    br.add(m.table, m.doc);\n                    break;\n                case 'add-related':\n                    if (!m.relatedDoc.$etag) {\n                        // No $etag means this is a new document. Add it before linking to it:\n                        br.add(tables[m.table].relationships[m.graphProp], m.relatedDoc, m.branchId);\n                    }\n                    br.link2(m.table, m.id, m.graphProp, m.relatedDoc.id, m.branchId);\n                    break;\n                case 'remove-related':\n                    br.unlink2(m.table, m.id, m.graphProp, m.relatedDoc.id, m.branchId);\n                    break;\n                case 'undo-link':\n                    br.undoLink(m.table, m.id, m.graphProp, m.relatedId, m.branchId);\n                    break;\n                case 'delete':\n                    br.delete(m.table, m.id);\n                    break;\n                case 'clear-branch':\n                    br.clearBranch(m.branchId);\n                    break;\n                case 'merge':\n                    br.merge(m.branchId, m.targetBranchId);\n                    break;\n            }\n        });\n        return br.mutationRequests;\n    };\n    return KedBackendWriter;\n}());\nexport { KedBackendWriter };\n//# sourceMappingURL=kedbackend-writer.js.map","import * as tslib_1 from \"tslib\";\nimport { getTableFromLabel, branchSensitive, globalOp } from './utils';\nimport { mergeDeltas } from './delta-merge';\nvar MutationQueue = /** @class */ (function () {\n    function MutationQueue() {\n        this.queue = [];\n        this.savingQueue = [];\n    }\n    MutationQueue.prototype.add = function (mutations) {\n        this.queue = MutationQueue.merge(this.queue, mutations);\n    };\n    MutationQueue.prototype.moveToSavingQueue = function () {\n        this.savingQueue = MutationQueue.merge(this.savingQueue, this.queue);\n        this.queue = [];\n    };\n    MutationQueue.prototype.clearSavingQueue = function () {\n        this.savingQueue = [];\n    };\n    MutationQueue.prototype.get = function () {\n        return this.savingQueue.concat(this.queue);\n    };\n    MutationQueue.prototype.affectsQuery = function (table, query, includes) {\n        var mutations = this.get();\n        if (mutations.some(function (m) { return m.op === 'merge' || m.op === 'clear-branch'; }))\n            return true;\n        if (query.ids) {\n            // A query with \"ids\" filter will be easy to detect a no-match on:\n            return mutations.some(function (m) { return globalOp(m) || (!branchSensitive(m) || m.branchId === query.branchId) &&\n                query.ids.includes(m.id); });\n        }\n        // Otherwise, check if mutations affect same branch and table. Could be done more fine grained,\n        // but that would only be a suboptimization.\n        return mutations.some(function (m) {\n            return m.op === 'add' ?\n                m.table === table :\n                m.op === 'delete' ?\n                    m.table === table || (includes.some(function (label) { return getTableFromLabel(table, label) === m.table; })) :\n                    globalOp(m) ? true :\n                        m.branchId == query.branchId &&\n                            (m.table === table || (m.op !== 'update' && ([table].concat(includes.map(function (label) { return getTableFromLabel(table, label); })).some(function (table) { return getTableFromLabel(m.table, m.graphProp) === table; }))));\n        });\n    };\n    MutationQueue.merge = function (queue1, queue2) {\n        var mutableQueue1 = queue1.slice();\n        var mutableQueue2 = queue2.slice();\n        //if (mutableQueue1.length > 0) debugger;\n        var len = queue1.length;\n        var _loop_1 = function (i) {\n            var m = queue1[i];\n            if (m.op === 'update') {\n                var overlappingIdOpIdx = mutableQueue2.findIndex(function (newMut) {\n                    return newMut.op === 'update' &&\n                        newMut.branchId === m.branchId &&\n                        newMut.id === m.id;\n                });\n                if (overlappingIdOpIdx >= 0) {\n                    mutableQueue1[i] = tslib_1.__assign({}, m, { deltaDoc: mergeDeltas(m.deltaDoc, mutableQueue2[overlappingIdOpIdx].deltaDoc) });\n                    mutableQueue2.splice(overlappingIdOpIdx, 1);\n                }\n            }\n        };\n        for (var i = 0; i < len; ++i) {\n            _loop_1(i);\n        }\n        return mutableQueue1.concat(mutableQueue2);\n    };\n    return MutationQueue;\n}());\nexport { MutationQueue };\n//# sourceMappingURL=mutation-queue.js.map","import * as tslib_1 from \"tslib\";\nimport { KedBackendQuery } from './kedbackend-query';\nimport * as JsonSchema from 'kedbackend-schema/schema.json';\nimport { queryArray } from './utils';\nvar QuerySet = /** @class */ (function () {\n    function QuerySet(mutationQueue) {\n        this.mutationQueue = mutationQueue;\n        this.queries = [];\n    }\n    QuerySet.prototype.commitMutations = function (mutations, version) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(this.queries.map(function (q) { return q.commitMutations(mutations, version); }))];\n                    case 1:\n                        _a.sent();\n                        this.cleanupInvalidQueries();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    QuerySet.prototype.cleanupInvalidQueries = function () {\n        this.queries = this.queries.filter(function (q) {\n            if (q.invalid) {\n                if (q.timeoutHandle) {\n                    clearTimeout(q.timeoutHandle);\n                    q.timeoutHandle = null;\n                }\n                return false;\n            }\n            return true;\n        });\n    };\n    QuerySet.prototype.notifySubscribers = function () {\n        var optimisticMutations = this.mutationQueue.get();\n        this.queries.forEach(function (q) {\n            q.notifySubscribers(optimisticMutations);\n        });\n    };\n    QuerySet.prototype.findQuery = function (table, query) {\n        return this.queries.find(function (q) { return q.queryKey === KedBackendQuery.queryKey(table, query); });\n    };\n    QuerySet.prototype.queryLocally = function (table, query, includes) {\n        // For now, only handle this very common and special case (which\n        // will save a lot of unnescessary network traffic if I am thinking right...)\n        var mutations = this.mutationQueue.get();\n        // Check if the query wants to get a single entity by its ID:\n        if (query.ids && query.ids.length === 1) {\n            // And if so, if we have an outgoing mutation to create that entity:\n            if (mutations.some(function (m) { return m.op === 'add-related' && m.relatedDoc.id === query.ids[0]; })) {\n                // Then return an EMPTY response, signalling that we can resolve this locally,\n                // but let the optistic feature of KedBackendQuery apply the mutation before\n                // notifying subscribers (we don't want it to be persistent before the server\n                // has accepted the mutation)\n                return [];\n            }\n        }\n        // OK, another quite common case is when we ask for a certain ID and that ID replies\n        // within another query\n        if (query.hasEdgesFrom || query.hasEdgesTo)\n            return null; // Not possible to handle\n        if (!query.ids)\n            return null; // For now, just take hight for this particular and most common case!\n        var _loop_1 = function (q) {\n            if (!q.gotInitialResponse)\n                return \"continue\";\n            if (q.query.branchId !== query.branchId)\n                return \"continue\";\n            if (q.query.flags)\n                return \"continue\"; // It would be complex to support various flags. Query's data may include ids only. Can't rely on the query.\n            var qIncludes = q.includes;\n            if (qIncludes.length > 0 && (!query.include || query.include.length === 0)) {\n                // We don't include, but this query does. Check if we can find our result within it.\n                var label = qIncludes.find(function (l) { return JsonSchema.tables[q.table][\"relationships\"][l] === table; });\n                if (label) {\n                    var res_1 = {};\n                    for (var _i = 0, _a = q.data; _i < _a.length; _i++) {\n                        var entity = _a[_i];\n                        var subData = queryArray(query, entity[label]);\n                        subData.forEach(function (r) { return res_1[r.id] = r; });\n                    }\n                    var result_1 = Object.keys(res_1).map(function (id) { return res_1[id]; });\n                    // Only return result if we could look up every requested ID:\n                    if (!query.ids.every(function (id) { return result_1.some(function (x) { return x.id === id; }); }))\n                        return \"continue\";\n                    return { value: result_1 };\n                }\n            }\n            if (!includes.every(function (label) { return qIncludes.includes(label); }))\n                return \"continue\";\n            // Lastly, if the query includes all graphs that we do, pick the subset from that query.\n            // Concrete example: We observe a certain Task by ID and want its knowledgeRequirements along with it,\n            // and there's another query of all tasks that also includes knowledgeRequirements. Use it. \n            if (q.table === table) {\n                var result_2 = queryArray(query, q.data);\n                // Only return result if we could look up every requested ID:\n                if (!query.ids.every(function (id) { return result_2.some(function (x) { return x.id === id; }); }))\n                    return \"continue\";\n                return { value: result_2 };\n            }\n        };\n        for (var _i = 0, _a = this.queries; _i < _a.length; _i++) {\n            var q = _a[_i];\n            var state_1 = _loop_1(q);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n    };\n    QuerySet.prototype.subscribe = function (subscription) {\n        var _a = subscription.collection, table = _a.table, query = _a.query, repo = _a.repo;\n        var kbQuery = this.findQuery(table, query);\n        if (!kbQuery) {\n            kbQuery = new KedBackendQuery(table, query, repo.getUser(), repo, this.mutationQueue);\n            this.queries.push(kbQuery);\n        }\n        else {\n            if (kbQuery.timeoutHandle) {\n                clearTimeout(kbQuery.timeoutHandle);\n                kbQuery.timeoutHandle = null;\n            }\n        }\n        kbQuery.subscribe(subscription);\n    };\n    QuerySet.prototype.unsubscribe = function (subscription) {\n        var _this = this;\n        var _a = subscription.collection, table = _a.table, query = _a.query, repo = _a.repo;\n        var kbQuery = this.findQuery(table, query);\n        if (kbQuery) {\n            // Prohibit further notifications to this subscription:\n            kbQuery.unsubscribe(subscription);\n            // Release unnescessary memory when there are no more subscriptions of this query, by removing the query itself\n            // To that in a delayed manner, so that an unsubscribe() followed by an immediate subscribe() don't have to re-query the server:\n            if (kbQuery.subscriptions.length === 0) {\n                // Schedule for garbage collection in 5 minutes:\n                kbQuery.timeoutHandle = setTimeout(function () {\n                    // Check if kbQuery still has no subscriptions (not certain! A new subscriber may have come along...)\n                    if (kbQuery.subscriptions.length === 0) {\n                        // Still no subscriptions on it, time to release some memory and forget the in-memory cache of the query result\n                        _this.queries = _this.queries.filter(function (q) { return q !== kbQuery; });\n                    }\n                }, this.queries.length > 50 ?\n                    500 : // Don't host too many queries. Garbage collect this within 500 ms\n                    5 * 60000); // Allow query in memory for another 5 minutes\n            }\n        }\n    };\n    return QuerySet;\n}());\nexport { QuerySet };\n//# sourceMappingURL=query-set.js.map","import { tables } from 'kedbackend-schema/schema.json';\nexport function getTableFromLabel(table, label) {\n    return tables[table].relationships[label];\n}\nexport function queryArray(query, data) {\n    var filter = getFilterFromQuery(query);\n    return data.filter(filter);\n}\nexport function AND(filter1, filter2) {\n    return function (x) { return filter1(x) && filter2(x); };\n}\nexport function getFilterFromQuery(query) {\n    var filter = function (x) { return true; };\n    if (query.from)\n        return AND(filter, function (x) { return x.dateTime >= query.from; });\n    if (query.to)\n        return AND(filter, function (x) { return x.dateTime < query.to; });\n    if (query.ids)\n        return AND(filter, function (x) { return query.ids.includes(x.id); });\n    if (query.name)\n        return AND(filter, function (x) { return x.name === query.name; });\n    if (query.tags)\n        return AND(filter, function (x) { return x.tags && [].concat(query.tags || []).some(function (tag) { return x.tags.includes(tag); }); });\n    // query.hasEdgesFrom and query.hasEdgesTo cannot by filtered here\n    return filter;\n}\nexport function branchSensitive(m) {\n    return m.op !== 'delete';\n}\nexport function globalOp(m) {\n    return m.op === 'clear-branch' || m.op === 'merge';\n}\n//# sourceMappingURL=utils.js.map","import migrate from './migrate';\nexport var KedModelMigratorMixin = function (client) {\n    if (client.__migrator_mixed_in)\n        return;\n    client.__migrator_mixed_in = true;\n    var get = client.get;\n    var list = client.list;\n    client.get = function (table, id, options) {\n        var include = options && options.include;\n        return get.apply(this, arguments).then(function (result) {\n            migrate(result, table, include && include.toString().split(','));\n            return result;\n        });\n    };\n    client.list = function (table, options) {\n        var include = options && options.include;\n        return list.apply(this, arguments).then(function (result) {\n            result.forEach(function (doc) { return migrate(doc, table, include && include.toString().split(',')); });\n            return result;\n        });\n    };\n    return client;\n};\n//# sourceMappingURL=index.js.map","import migrateTask from './migrate-task';\nexport default function migrateCourse(course, graphs) {\n    if (!course.modules)\n        course.modules = [];\n    course.modules.forEach(function (module) {\n        if (!module.resources) {\n            module.resources = [];\n        }\n        if (!module.taskIds) {\n            module.taskIds = [];\n        }\n    });\n    if (!course.responsibleTeachers) {\n        course.responsibleTeachers = [];\n    }\n    // Earlier wrong spelling of resources\n    if ('resourses' in course && !('resources' in course)) {\n        course.resources = course.resourses;\n        delete course.resourses;\n    }\n    if (!course.resources) {\n        course.resources = [];\n    }\n    if (graphs) {\n        graphs.forEach(function (label) {\n            switch (label) {\n                case 'tasks':\n                    course.tasks.forEach(function (task) { return migrateTask(task); });\n                    break;\n            }\n        });\n    }\n}\n//# sourceMappingURL=migrate-course.js.map","export default function migrateTask(task) {\n    if (!task.resources)\n        task.resources = [];\n}\n//# sourceMappingURL=migrate-task.js.map","import migrateCourse from './migrate-course';\nimport migrateTask from './migrate-task';\nexport default function migrate(doc, table, graphs) {\n    switch (table) {\n        case \"courses\":\n            migrateCourse(doc, graphs);\n            break;\n        case \"tasks\":\n            migrateTask(doc);\n            break;\n    }\n}\n//# sourceMappingURL=migrate.js.map","import * as tslib_1 from \"tslib\";\nimport { Observable } from \"./observable\";\nimport { initMapMethod } from \"./map\";\nimport { Value } from \"./value\";\nimport { Emitter } from \"./emitter\";\nvar Collection = /** @class */ (function (_super) {\n    tslib_1.__extends(Collection, _super);\n    function Collection(subscribe) {\n        return _super.call(this, subscribe) || this;\n    }\n    Collection.prototype._map = function (mapper) {\n        throw \"mixedin\";\n    };\n    Collection.from = function (x) {\n        if (x.subscribe)\n            return new Collection(function (s) { return x.subscribe(s); });\n        if (Array.isArray(x)) {\n            var emitter_1 = new Emitter(x);\n            return new Collection(function (s) { return emitter_1.subscribe(s); });\n        }\n        throw new Error(\"ObservableCollection.from() can only take arrays or observables\");\n    };\n    Collection.prototype.map = function (mapper) {\n        return this._map(function (items) { return items.map(function (item) { return mapper(item); }); });\n    };\n    Collection.prototype.flat = function () {\n        return this._map(function (items) { return [].concat.apply([], items); });\n    };\n    Collection.prototype.filter = function (filter) {\n        return this._map(function (items) { return items.filter(filter); });\n    };\n    Collection.prototype.concat = function (other) {\n        return Collection.from(this.toValue().combineLatest(other).map(function (_a) {\n            var me = _a[0], other = _a[1];\n            return me.concat(other);\n        }));\n    };\n    Collection.prototype.orderBy = function (prop) {\n        return this.toValue().map(function (array) { return array.slice().sort(function (a, b) {\n            var aProp = a && a[prop];\n            var bProp = b && b[prop];\n            return aProp > bProp ? 1 : aProp < bProp ? -1 : 0;\n        }); }).toCollection(function (x) { return x; });\n    };\n    Collection.prototype.toValue = function () {\n        var _this = this;\n        return new Value(function (s) { return _this.subscribe(s); });\n    };\n    Collection.prototype.groupBy = function (prop) {\n        return this.toValue().map(function (items) {\n            var rv = {};\n            items.forEach(function (item) {\n                var list = rv[item[prop]] || (rv[item[prop]] = []);\n                list.push(item);\n            });\n            return rv;\n        });\n    };\n    Collection.prototype.first = function () {\n        return this.toValue().map(function (arr) { return arr[0]; });\n    };\n    return Collection;\n}(Observable));\nexport { Collection };\nCollection.prototype._map = initMapMethod(Collection);\n//# sourceMappingURL=collection.js.map","import * as tslib_1 from \"tslib\";\nimport { Value } from \"./value\";\nvar Emitter = /** @class */ (function (_super) {\n    tslib_1.__extends(Emitter, _super);\n    function Emitter(initialValue) {\n        var _this = _super.call(this, function (observer) {\n            var subscription = {\n                unsubscribe: function () { return _this.subscribers = _this.subscribers.filter(function (_a) {\n                    var s = _a[0];\n                    return s !== observer;\n                }); },\n            };\n            _this.subscribers.push([observer, subscription]);\n            if (_this.error)\n                observer(null, _this.error, subscription);\n            else\n                observer(_this.value, undefined, subscription);\n            return subscription;\n        }) || this;\n        _this.subscribers = [];\n        _this.value = initialValue;\n        return _this;\n    }\n    Emitter.prototype.dispatch = function (value) {\n        this.value = value;\n        this.error = undefined;\n        this._dispatch();\n    };\n    Emitter.prototype.dispatchError = function (error) {\n        this.error = error;\n        this._dispatch();\n    };\n    Emitter.prototype._dispatch = function () {\n        var _this = this;\n        this.subscribers.forEach(function (_a) {\n            var observer = _a[0], subscription = _a[1];\n            try {\n                observer(_this.value, _this.error, subscription);\n            }\n            catch (err) {\n                observer(null, err, subscription);\n            }\n        });\n    };\n    return Emitter;\n}(Value));\nexport { Emitter };\n//# sourceMappingURL=emitter.js.map","var stack = [];\nvar currentFiber = null;\nvar providers = [function () { return currentFiber; }];\nfunction pushFiber(fiber) {\n    stack.push(currentFiber);\n    currentFiber = fiber;\n}\nfunction popFiber() {\n    currentFiber = stack.pop();\n}\nvar _FiberContext = {\n    get current() { return currentFiber; },\n    /*run: function rerun<R>(fiber: Fiber, fn: ()=>R): R | Promise<R> {\n      pushFiber(fiber);\n      try {\n        return Promise.resolve(fn());\n      } catch (p) {\n        if (p && typeof p.then === 'function') {\n          return p.then(()=>rerun(fiber, fn));\n        } else {\n          return Promise.reject(p);\n        }\n      } finally {\n        popFiber();\n      }\n    },*/\n    addProvider: function (getCurrentFiber) {\n        providers.push(getCurrentFiber);\n        setCurrentGetterFromProviders();\n    },\n    removeProvider: function (getCurrentFiber) {\n        providers = providers.filter(function (p) { return p !== getCurrentFiber; });\n        setCurrentGetterFromProviders();\n    }\n};\nfunction setCurrentGetterFromProviders() {\n    Object.defineProperty(_FiberContext, \"current\", {\n        get: providers.reduce(function (p, c) { return function () { return p() || c(); }; }),\n        set: function () { throw new Error(\"Use FiberContext.push() to change current fiber\"); }\n    });\n}\nvar _global = (typeof self === 'undefined' ? global : self);\nif (!_global[\"KEDFiberContext\"]) {\n    _global[\"KEDFiberContext\"] = _FiberContext;\n}\nexport var FiberContext = _global[\"KEDFiberContext\"];\n//# sourceMappingURL=fiber-context.js.map","export * from './observable';\nexport * from './value';\nexport * from './collection';\nexport * from './emitter';\nexport * from './fiber-context';\n//# sourceMappingURL=index.js.map","export function initMapMethod(ctor) {\n    return function (mapper) {\n        var _this = this;\n        return new ctor(function (observer) { return _this.subscribe(function (value, error, subscription) {\n            if (error)\n                observer(null, error, subscription);\n            else\n                try {\n                    observer(mapper(value), error, subscription);\n                }\n                catch (err) {\n                    observer(null, err, subscription);\n                }\n        }); });\n    };\n}\n//# sourceMappingURL=map.js.map","export function mixin(targetProto, mixinProto) {\n    var props = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        props[_i - 2] = arguments[_i];\n    }\n    props.forEach(function (prop) { return targetProto[prop] = mixinProto[prop]; });\n}\n//# sourceMappingURL=mixin.js.map","var Observable = /** @class */ (function () {\n    //static get [Symbol.species]() { return this; }\n    function Observable(_subscribe) {\n        this._subscribe = _subscribe;\n    }\n    Observable.prototype.subscribe = function (observer) {\n        try {\n            return this._subscribe(function (items, error, subscription) {\n                try {\n                    observer(items, error, subscription);\n                }\n                catch (err) {\n                    observer(null, err, subscription);\n                }\n            });\n        }\n        catch (error) {\n            observer(null, error, { unsubscribe: function () { } });\n        }\n    };\n    return Observable;\n}());\nexport { Observable };\n//# sourceMappingURL=observable.js.map","import * as tslib_1 from \"tslib\";\nimport { Observable } from \"./observable\";\nimport { initMapMethod } from \"./map\";\nimport { Collection } from \"./collection\";\nimport { FiberContext } from './fiber-context';\nvar Value = /** @class */ (function (_super) {\n    tslib_1.__extends(Value, _super);\n    function Value(subscribe) {\n        return _super.call(this, subscribe) || this;\n    }\n    Value.from = function (x) {\n        if (x.subscribe)\n            return new Value(function (s) { return x.subscribe(s); });\n        throw new Error(\"Value.from() can only take observables\");\n    };\n    Value.prototype.read = function () {\n        var resolved = false, result, err, notify;\n        var subscription = this.subscribe(function (value, error, subsciption) {\n            resolved = true;\n            result = value;\n            err = error;\n            if (error && notify)\n                notify(null, error, subsciption);\n            else if (notify)\n                notify(value, null, subsciption);\n        });\n        if (resolved) {\n            var currentFiber = FiberContext.current;\n            if (!currentFiber) {\n                subscription.unsubscribe();\n                throw new Error(\"Invalid Fiber Context\");\n            }\n            if (err) {\n                subscription.unsubscribe();\n                throw err;\n            }\n            var subscriptions = currentFiber.subscriptions, observer = currentFiber.observer;\n            subscriptions.push(subscription);\n            notify = observer;\n            return result;\n        }\n        throw new Promise(function (resolve, reject) {\n            notify = function (value, error, subscription) {\n                subscription.unsubscribe();\n                if (error)\n                    reject(error);\n                else\n                    resolve(value);\n            };\n        });\n    };\n    Value.prototype.load = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.subscribe(function (value, error, subsciption) {\n                if (error)\n                    reject(error);\n                else\n                    resolve(value);\n                subsciption.unsubscribe();\n            });\n        });\n    };\n    Value.prototype.filter = function (fn) {\n        var _this = this;\n        return new Value(function (observer) { return _this.subscribe(function (value, error, subscription) {\n            if (error)\n                observer(null, error, subscription);\n            else if (fn(value))\n                observer(value, error, subscription);\n        }); });\n    };\n    Value.prototype.log = function (prefix) {\n        return this.map(function (x) {\n            console.log(prefix, x);\n            return x;\n        });\n    };\n    Value.prototype.toCollection = function (mapper) {\n        var _this = this;\n        return new Collection(function (s) { return _this.map(mapper).subscribe(s); });\n    };\n    Value.prototype.combineLatest = function (other) {\n        var _this = this;\n        return new Value(function (observer) {\n            var values = [null, null];\n            var mySubscription, otherSubscription;\n            var subscription = {\n                unsubscribe: function () {\n                    mySubscription.unsubscribe();\n                    otherSubscription.unsubscribe();\n                }\n            };\n            mySubscription = _this.subscribe(function (items, error, s) {\n                if (error) {\n                    s.unsubscribe();\n                    observer(null, error, subscription);\n                }\n                values[0] = items;\n                if (values[1] !== null)\n                    observer(values, null, subscription);\n            });\n            otherSubscription = other.subscribe(function (value, error, s) {\n                if (error) {\n                    s.unsubscribe();\n                    observer(null, error, subscription);\n                }\n                values[1] = value;\n                if (values[0] !== null)\n                    observer(values, null, subscription);\n            });\n            return subscription;\n        });\n    };\n    Value.prototype.switchMap = function (mapper) {\n        var _this = this;\n        return new Value(function (observer) {\n            var mappedSubscription = null;\n            var subscription = null;\n            var returnedSubscription = {\n                unsubscribe: function () {\n                    subscription.unsubscribe();\n                    if (mappedSubscription) {\n                        mappedSubscription.unsubscribe();\n                        mappedSubscription = null;\n                    }\n                }\n            };\n            subscription = _this.subscribe(function (item, error, s) {\n                subscription = s;\n                if (mappedSubscription) {\n                    mappedSubscription.unsubscribe();\n                    mappedSubscription = null;\n                }\n                if (error)\n                    observer(null, error, returnedSubscription);\n                else {\n                    try {\n                        var observableOrValue = mapper(item);\n                        if (observableOrValue && typeof observableOrValue.subscribe === 'function') {\n                            mappedSubscription = observableOrValue.subscribe(function (value, error, s) {\n                                mappedSubscription = s;\n                                observer(value, error, returnedSubscription);\n                            });\n                        }\n                        else {\n                            observer(observableOrValue, null, subscription);\n                        }\n                    }\n                    catch (error) {\n                        observer(null, error, subscription);\n                    }\n                }\n            });\n            return returnedSubscription;\n        });\n    };\n    return Value;\n}(Observable));\nexport { Value };\nValue.prototype.map = initMapMethod(Value);\n//# sourceMappingURL=value.js.map","export * from './js/dist/js/observable';\n","export * from './js/dist/js/ked-backend-repo';\n","export default function getUserClaims(user) {\n    return [{\n            type: \"email\",\n            value: user.mail\n        }, {\n            type: \"school\",\n            value: user.school\n        }].concat(user.roles.map(function (role) { return ({\n        type: \"role\",\n        value: role\n    }); })).concat(user.roles.map(function (role) { return ({\n        type: \"schoolRole\",\n        value: user.school + \"/\" + role\n    }); }));\n}\n","import * as tslib_1 from \"tslib\";\nimport { DocumentAccess, hasAccess as _hasAccess } from 'kedbackend/client';\nimport getUserClaims from './get-user-claims';\nimport { parseQueryString, generateQueryString } from \"../utils/query-string\";\nexport { getUserClaims };\nexport var IMPERSONATION_QUERY_PARAMS = [\n    \"user\",\n    \"role\",\n    \"school\",\n    \"debug\",\n    \"testVersion\",\n    \"testversion\",\n    \"features\",\n    \"schoolGrade\",\n    \"schoolgrade\",\n    \"schoolType\",\n    \"schooltype\"\n];\nexport function hasAccess(user, doc, requestedRight) {\n    var claims = getUserClaims(user);\n    if (requestedRight !== 'R' && user.tutorFor) {\n        claims = claims.filter(function (claim) { return claim.type !== 'email'; });\n    }\n    var result = _hasAccess(DocumentAccess.fromStringArray(doc.acl || []), claims, requestedRight);\n    //console.log(`Has ${requestedRight} access to ${doc.name}/${doc.id}: ${result}`);\n    return result;\n}\nexport function hasReadAccess(user, doc) {\n    return hasAccess(user, doc, 'R');\n}\nexport function hasWriteAccess(user, doc) {\n    return hasAccess(user, doc, 'W');\n}\nexport function hasShareAccess(user, doc) {\n    return hasAccess(user, doc, 'S');\n}\nexport function isTeacherAtSchool(user, school) {\n    var isTeacher = user.roles.some(function (role) { return role === 'EMPLOYEE' || role === 'ADMIN'; });\n    var belongsToSchool = (school || \"\").toLowerCase() === user.school.toLowerCase();\n    return (isTeacher && belongsToSchool);\n}\nexport function isAdminOrTeacherAtSchool(user, school) {\n    return user.roles.includes(\"ADMIN\") || isTeacherAtSchool(user, school);\n}\nexport var impersonationEnv = {\n    actAs: function (options) {\n        var role = options.role, school = options.school, url = options.url;\n        var currentQuery = parseQueryString(location.search);\n        var newQuery = tslib_1.__assign({}, currentQuery, { role: role, school: school });\n        var newQueryString = generateQueryString(newQuery);\n        if (url) {\n            location.href = \"\" + url + newQueryString;\n        }\n        else {\n            location.hash = \"#\";\n            location.search = newQueryString;\n        }\n    }\n};\nexport function actAs(options) {\n    impersonationEnv.actAs(options);\n}\nexport function preserveImpersonationQuery(url, query) {\n    var e_1, _a;\n    var currentQuery = parseQueryString(location.search);\n    var preservedQuery = {};\n    try {\n        for (var IMPERSONATION_QUERY_PARAMS_1 = tslib_1.__values(IMPERSONATION_QUERY_PARAMS), IMPERSONATION_QUERY_PARAMS_1_1 = IMPERSONATION_QUERY_PARAMS_1.next(); !IMPERSONATION_QUERY_PARAMS_1_1.done; IMPERSONATION_QUERY_PARAMS_1_1 = IMPERSONATION_QUERY_PARAMS_1.next()) {\n            var param = IMPERSONATION_QUERY_PARAMS_1_1.value;\n            if (currentQuery[param])\n                preservedQuery[param] = currentQuery[param];\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (IMPERSONATION_QUERY_PARAMS_1_1 && !IMPERSONATION_QUERY_PARAMS_1_1.done && (_a = IMPERSONATION_QUERY_PARAMS_1.return)) _a.call(IMPERSONATION_QUERY_PARAMS_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    var newQueryString = generateQueryString(tslib_1.__assign({}, preservedQuery, query));\n    var pHash = url.indexOf('#');\n    return pHash >= 0 ?\n        \"\" + url.substr(0, pHash) + newQueryString + url.substr(pHash) :\n        \"\" + url + newQueryString;\n}\n","import * as tslib_1 from \"tslib\";\nimport { RestClient } from 'kedbackend/client';\nimport { HttpError } from 'kedbackend/client';\nimport { getTermStarEndDate } from '../utils/school-moment';\nimport { SchoolTerm } from '../utils/school-term';\nimport { dateTimeReviver, L } from '../utils/utils';\nimport mockJsonFile from './mock/mock-eds-data.json';\nimport moment from 'moment';\nimport { makeSuspenseApi } from '../utils/make-suspense-api';\nvar EdsClient = /** @class */ (function () {\n    function EdsClient(isomorphic, baseUrl, bearerProvider, userEmailGetter) {\n        var _this = this;\n        this.http = new RestClient(isomorphic, baseUrl, { bearerProvider: bearerProvider });\n        this.userEmailGetter = userEmailGetter;\n        var isApiMethod = function (m) {\n            return typeof _this[m] === 'function' &&\n                m !== 'constructor' && // Since makeSuspenseApi() walks prototype chain\n                m !== 'privatizingCacheBust' &&\n                m !== 'userEmailGetter';\n        } // List non-API methods here...\n        ;\n        Object.keys(EdsClient.prototype).forEach(function (method) {\n            if (isApiMethod(method)) {\n                _this[method] = avoidSimultanousCalls(_this[method]);\n            }\n        });\n        this.suspense = makeSuspenseApi(this, { isApiMethod: isApiMethod });\n    }\n    EdsClient.prototype.privatizingCacheBust = function () {\n        return { user: this.userEmailGetter() };\n    };\n    /**\n       * Retrieve active courses for current logged in student.\n       *\n       * @param courseCode Short-name of the course. Optional.\n       */\n    EdsClient.prototype.getActiveCourses = function (q) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, res, _a, _b, json, ex_1;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _c.trys.push([0, 5, , 6]);\n                        query = this.privatizingCacheBust();\n                        if (q) {\n                            if (q.courseCode)\n                                query.CourseCode = q.courseCode;\n                            if (q.periodName)\n                                query.PeriodName = q.periodName;\n                        }\n                        return [4 /*yield*/, this.http.get(\"studentactivecourses\", query)];\n                    case 1:\n                        res = _c.sent();\n                        if (!(res.status != 200)) return [3 /*break*/, 3];\n                        _a = HttpError.bind;\n                        _b = [void 0, res.status];\n                        return [4 /*yield*/, res.text()];\n                    case 2: throw new (_a.apply(HttpError, _b.concat([_c.sent()])))();\n                    case 3: return [4 /*yield*/, res.json()];\n                    case 4:\n                        json = _c.sent();\n                        return [2 /*return*/, json.courses];\n                    case 5:\n                        ex_1 = _c.sent();\n                        console.error(\"Error from EDS: \" + ex_1);\n                        throw new Error(L(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"Kunde tyv\\u00E4rr inte ladda terminsm\\u00E5l eller avklarade steg fr\\u00E5n EDS. F\\u00F6rs\\u00F6k igen senare...\"], [\"Kunde tyv\\u00E4rr inte ladda terminsm\\u00E5l eller avklarade steg fr\\u00E5n EDS. F\\u00F6rs\\u00F6k igen senare...\"]))));\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieve latest assessments for current logged in user.\n     *\n     * @param limit Optional limit\n     */\n    EdsClient.prototype.getLatestAssessments = function (limit) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var query, res, _a, _b, json;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        query = this.privatizingCacheBust();\n                        if (!isNaN(limit))\n                            query.Count = limit;\n                        return [4 /*yield*/, this.http.get(\"studentassessments\", query)];\n                    case 1:\n                        res = _c.sent();\n                        if (!(res.status != 200)) return [3 /*break*/, 3];\n                        _a = HttpError.bind;\n                        _b = [void 0, res.status];\n                        return [4 /*yield*/, res.text()];\n                    case 2: throw new (_a.apply(HttpError, _b.concat([_c.sent()])))();\n                    case 3: return [4 /*yield*/, res.json()];\n                    case 4:\n                        json = _c.sent();\n                        return [2 /*return*/, json.assessments];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieve studyplans for current logged-in user\n     */\n    EdsClient.prototype.getStudentGoals = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var res, _a, _b, json;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.http.get(\"studentgoals\", this.privatizingCacheBust())];\n                    case 1:\n                        res = _c.sent();\n                        if (!(res.status != 200)) return [3 /*break*/, 3];\n                        _a = HttpError.bind;\n                        _b = [void 0, res.status];\n                        return [4 /*yield*/, res.text()];\n                    case 2: throw new (_a.apply(HttpError, _b.concat([_c.sent()])))();\n                    case 3: return [4 /*yield*/, res.json()];\n                    case 4:\n                        json = _c.sent();\n                        return [2 /*return*/, json.studentGoals];\n                }\n            });\n        });\n    };\n    EdsClient.prototype.getStudentFutureAbilities = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var res, _a, _b, json;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.http.get(\"studentFutureAbilities\", this.privatizingCacheBust())];\n                    case 1:\n                        res = _c.sent();\n                        if (!(res.status != 200)) return [3 /*break*/, 3];\n                        _a = HttpError.bind;\n                        _b = [void 0, res.status];\n                        return [4 /*yield*/, res.text()];\n                    case 2: throw new (_a.apply(HttpError, _b.concat([_c.sent()])))();\n                    case 3: return [4 /*yield*/, res.json()];\n                    case 4:\n                        json = _c.sent();\n                        return [2 /*return*/, json.studentFutureAbilities];\n                }\n            });\n        });\n    };\n    EdsClient.prototype.getTeacherTutorStudents = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var res, _a, _b, json;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.http.get(\"teachertutorstudents\", this.privatizingCacheBust())];\n                    case 1:\n                        res = _c.sent();\n                        if (!(res.status != 200)) return [3 /*break*/, 3];\n                        _a = HttpError.bind;\n                        _b = [void 0, res.status];\n                        return [4 /*yield*/, res.text()];\n                    case 2: throw new (_a.apply(HttpError, _b.concat([_c.sent()])))();\n                    case 3: return [4 /*yield*/, res.json()];\n                    case 4:\n                        json = _c.sent();\n                        return [2 /*return*/, json.students];\n                }\n            });\n        });\n    };\n    /**\n     * getSchoolTuitionGroups()\n     *\n     * Return tuitiongroups for school\n     *\n     * @param schoolName - name of school\n     * @param courseCode - Skolverkets code for course\n     */\n    EdsClient.prototype.getSchoolTuitionGroups = function (q) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var res, _a, _b, json;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.http.get(\"SchoolTuitionGroups\", tslib_1.__assign({}, this.privatizingCacheBust(), q))];\n                    case 1:\n                        res = _c.sent();\n                        if (!(res.status != 200)) return [3 /*break*/, 3];\n                        _a = HttpError.bind;\n                        _b = [void 0, res.status];\n                        return [4 /*yield*/, res.text()];\n                    case 2: throw new (_a.apply(HttpError, _b.concat([_c.sent()])))();\n                    case 3: return [4 /*yield*/, res.json()];\n                    case 4:\n                        json = _c.sent();\n                        return [2 /*return*/, json.schoolTuitionGroups];\n                }\n            });\n        });\n    };\n    /**\n     * getTuitionGroupStudents()\n     *\n     * Return name and mailadresses for tutitiongroups in schools\n     *\n     * @param schoolName - name of school\n     * @param tuitionGroupName - tuition gruop name in EDS\n     */\n    EdsClient.prototype.getTuitionGroupStudents = function (q) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var res, _a, _b, json;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.http.get(\"TuitionGroupStudents\", tslib_1.__assign({}, this.privatizingCacheBust(), q))];\n                    case 1:\n                        res = _c.sent();\n                        if (!(res.status != 200)) return [3 /*break*/, 3];\n                        _a = HttpError.bind;\n                        _b = [void 0, res.status];\n                        return [4 /*yield*/, res.text()];\n                    case 2: throw new (_a.apply(HttpError, _b.concat([_c.sent()])))();\n                    case 3: return [4 /*yield*/, res.json()];\n                    case 4:\n                        json = _c.sent();\n                        return [2 /*return*/, json.tuitionGroupStudents];\n                }\n            });\n        });\n    };\n    /**\n     * getSchoolTeachers()\n     *\n     * Return name and mailadresses for tutitiongroups in schools\n     *\n     * @param schoolName - name of school\n     */\n    EdsClient.prototype.getSchoolTeachers = function (q) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var res, _a, _b, json;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.http.get(\"SchoolTeachers\", tslib_1.__assign({}, this.privatizingCacheBust(), q))];\n                    case 1:\n                        res = _c.sent();\n                        if (!(res.status != 200)) return [3 /*break*/, 3];\n                        _a = HttpError.bind;\n                        _b = [void 0, res.status];\n                        return [4 /*yield*/, res.text()];\n                    case 2: throw new (_a.apply(HttpError, _b.concat([_c.sent()])))();\n                    case 3: return [4 /*yield*/, res.json()];\n                    case 4:\n                        json = _c.sent();\n                        return [2 /*return*/, json.schoolTeachers];\n                }\n            });\n        });\n    };\n    // we assume that the EDS will return the current academic year dates determined by the current date\n    EdsClient.prototype.getAcademicYearTerms = function (schoolLocale, date) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var holidays, firstTermMoment, secondTermMoment, startFirstTermDate, startSecondTermDate, endFirstTermDate, endSecondTermDate, firstTerm, secondTerm;\n            return tslib_1.__generator(this, function (_a) {\n                // mock data\n                switch (schoolLocale) {\n                    case 'en_sin':\n                        return [2 /*return*/, mockJsonFile.SouthIndia.filter(function (f) { return moment(date).isSameOrAfter(f.firstTerm.startDate) && moment(date).isSameOrBefore(f.secondTerm.endDate); })[0]];\n                    case 'en_nin':\n                        return [2 /*return*/, mockJsonFile.NorthIndia.filter(function (f) { return moment(date).isSameOrAfter(f.firstTerm.startDate) && moment(date).isSameOrBefore(f.secondTerm.endDate); })[0]];\n                    case 'sv':\n                        {\n                            holidays = [];\n                            firstTermMoment = getTermStarEndDate(date, true);\n                            secondTermMoment = getTermStarEndDate(date, false);\n                            startFirstTermDate = firstTermMoment[0];\n                            startSecondTermDate = secondTermMoment[0];\n                            endFirstTermDate = firstTermMoment[1];\n                            endSecondTermDate = secondTermMoment[1];\n                            firstTerm = { startDate: new Date(startFirstTermDate.year(), startFirstTermDate.month(), startFirstTermDate.date()).toDateString(), endDate: new Date(startFirstTermDate.year(), endFirstTermDate.month(), endFirstTermDate.date()).toDateString() };\n                            secondTerm = { startDate: new Date(startSecondTermDate.year(), startSecondTermDate.month(), startSecondTermDate.date()).toDateString(), endDate: new Date(startSecondTermDate.year(), endSecondTermDate.month(), endSecondTermDate.date()).toDateString() };\n                            return [2 /*return*/, { firstTerm: firstTerm, secondTerm: secondTerm, holidays: holidays }];\n                        }\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    return EdsClient;\n}());\nexport { EdsClient };\nvar EDSPeriod = /** @class */ (function () {\n    function EDSPeriod(periodStringOrSchoolTerm) {\n        if (typeof periodStringOrSchoolTerm === 'string') {\n            this.period = periodStringOrSchoolTerm;\n            this.term = this.period.startsWith('HT') ? 'AT' : 'ST';\n            this.year = parseInt(this.period.substr(2));\n            if (isNaN(this.year))\n                throw new Error(\"Invalid period: \" + this.period);\n        }\n        else {\n            var schoolTerm = new SchoolTerm(periodStringOrSchoolTerm);\n            this.period = (schoolTerm.term === 'AT' ? \"HT\" : \"VT\") + schoolTerm.year;\n            this.term = schoolTerm.term;\n            this.year = schoolTerm.year;\n        }\n    }\n    Object.defineProperty(EDSPeriod.prototype, \"schoolTerm\", {\n        get: function () {\n            return new SchoolTerm({\n                academicYear: this.term === 'AT' ?\n                    this.year + \"/\" + (this.year + 1) :\n                    this.year - 1 + \"/\" + this.year,\n                term: this.term\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EDSPeriod.prototype.toString = function () {\n        return this.period;\n    };\n    EDSPeriod.prototype.valueOf = function () {\n        return this.year + \":\" + (this.term === 'ST' ? \"1\" : \"2\");\n    };\n    return EDSPeriod;\n}());\nexport { EDSPeriod };\nexport function parseJsonDate_old(jsonDateStr) {\n    var date = dateTimeReviver(\"\", jsonDateStr);\n    if (!(date instanceof Date))\n        throw new Error(\"Invalid JSON date string: \" + jsonDateStr);\n    return date;\n}\nfunction avoidSimultanousCalls(method) {\n    var ongoingPromises = {};\n    return function () {\n        var argsJson = JSON.stringify([].slice.call(arguments));\n        if (!ongoingPromises[argsJson]) {\n            ongoingPromises[argsJson] = method.apply(this, arguments).then(function (result) {\n                delete ongoingPromises[argsJson];\n                return result;\n            });\n        }\n        return ongoingPromises[argsJson];\n    };\n}\nvar templateObject_1;\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nvar GoalProgress = /** @class */ (function (_super) {\n    tslib_1.__extends(GoalProgress, _super);\n    function GoalProgress() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.createProgress = function () {\n            var _a = _this.props, numberOfTasks = _a.numberOfTasks, completedNumberOfTasks = _a.completedNumberOfTasks, maximumTasksDisplayed = _a.maximumTasksDisplayed, backgroundColor = _a.backgroundColor, progressColor = _a.progressColor;\n            var progress = [];\n            if (numberOfTasks > maximumTasksDisplayed) {\n                return React.createElement(\"div\", { className: \"progress-overview\" },\n                    \" \",\n                    completedNumberOfTasks,\n                    \" / \",\n                    numberOfTasks,\n                    \" \");\n            }\n            for (var taskNo = 1; taskNo <= numberOfTasks; taskNo++) {\n                progress.push(React.createElement(\"svg\", { key: taskNo },\n                    React.createElement(\"circle\", { className: \"circle-chart-background\", fill: taskNo > completedNumberOfTasks ? backgroundColor : progressColor, cx: \"8\", cy: \"8\", r: \"8\" })));\n            }\n            return progress;\n        };\n        return _this;\n    }\n    GoalProgress.prototype.render = function () {\n        return React.createElement(\"div\", { className: \"goals-progress\" }, this.createProgress());\n    };\n    GoalProgress.defaultProps = {\n        numberofTasks: 0,\n        completedNumberOfTasks: 0,\n        maximumTasksDisplayed: 10,\n        backgroundColor: \"lightgrey\",\n        progressColor: \"#3dbca2\",\n    };\n    return GoalProgress;\n}(React.Component));\nexport { GoalProgress };\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { createUUID } from 'kedbackend/client';\nimport { db, globalId, Schools } from '../../../../globals/db';\nimport { withRouter } from 'react-router';\nimport { L } from '../../../../utils/utils';\nimport { LazyContent } from '../../../utility-components/lazy-content';\nimport { computeTagsFromSubjectCodes } from '../../logic/course-instance-tags';\nvar _CreateStandardCourse = /** @class */ (function (_super) {\n    tslib_1.__extends(_CreateStandardCourse, _super);\n    function _CreateStandardCourse(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            courseName: \"\",\n            courseType: 'theme-course',\n            subject: { subjectName: '', subjectCode: '' }\n        };\n        return _this;\n    }\n    _CreateStandardCourse.prototype.createCourse = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, type, name, subject, courseId, _b, officialBranchId, schoolId, courseProperties;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this.state, type = _a.courseType, name = _a.courseName, subject = _a.subject;\n                        courseId = createUUID();\n                        return [4 /*yield*/, Schools.standardSchool.load()];\n                    case 1:\n                        _b = _c.sent(), officialBranchId = _b.officialBranchId, schoolId = _b.id;\n                        db.branches.addRelated(officialBranchId, \"approvedChildren\", {\n                            id: createUUID(),\n                            name: 'draft',\n                            acl: [\n                                \"role:USER:R\",\n                                \"schoolRole:standard/EMPLOYEE:S\"\n                            ],\n                            schoolId: schoolId,\n                            treeParentId: officialBranchId,\n                            tags: [courseId] // Allow following queries:\n                            // List all draft for a certain school: {hasEdgesFrom=schoolBranchId&tags=courseId}\n                            // Get official draft for a certain school: {hasEdgesFrom=schoolBranchId&name=draft&tags=courseId}\n                        });\n                        courseProperties = {\n                            id: courseId,\n                            acl: [\n                                'schoolRole:standard/EMPLOYEE:S',\n                                'role:USER:R'\n                            ],\n                            name: name,\n                            //description: type === 'step-course' ? \"Stegkurs\" : \"Teamkurs\",\n                            tags: type === 'step-course' ?\n                                computeTagsFromSubjectCodes([], [subject.subjectCode]) :\n                                []\n                        };\n                        db.global.addRelated(globalId, \"courseInstances\", type === 'step-course' ? tslib_1.__assign({}, courseProperties, { type: type, description: L(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"Stegkurs\"], [\"Stegkurs\"]))), subject: subject }) : tslib_1.__assign({}, courseProperties, { type: type, description: L(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"Temakurs\"], [\"Temakurs\"]))), subjects: [] }));\n                        this.setState({\n                            courseName: ''\n                        });\n                        return [4 /*yield*/, db.saveNow()];\n                    case 2:\n                        _c.sent();\n                        this.props.history.push(\"/admin/courses/\" + courseId + \"/settings\");\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    _CreateStandardCourse.prototype.isValidState = function (giveMessage) {\n        var _a = this.state, courseName = _a.courseName, courseType = _a.courseType, subject = _a.subject;\n        var rv = courseName && courseType === 'theme-course' || subject.subjectCode;\n        if (!rv && giveMessage) {\n            if (!courseName)\n                return L(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"Kursens namn m\\u00E5ste fyllas i\"], [\"Kursens namn m\\u00E5ste fyllas i\"])));\n            if (!subject.subjectCode)\n                return L(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject([\"\\u00C4mne m\\u00E5ste v\\u00E4ljas f\\u00F6r stegkurser\"], [\"\\u00C4mne m\\u00E5ste v\\u00E4ljas f\\u00F6r stegkurser\"])));\n        }\n        return rv;\n    };\n    _CreateStandardCourse.prototype.render = function () {\n        var _this = this;\n        var _a = this.state, courseName = _a.courseName, courseType = _a.courseType, subject = _a.subject;\n        return (React.createElement(\"div\", null,\n            React.createElement(\"h2\", null, \"Skapa ny standardkurs\"),\n            React.createElement(\"hr\", null),\n            React.createElement(\"div\", null,\n                \"Namn: \",\n                React.createElement(\"input\", { type: \"text\", value: courseName, onChange: function (ev) { return _this.setState({ courseName: ev.target.value }); } })),\n            React.createElement(\"br\", null),\n            React.createElement(\"div\", null,\n                React.createElement(\"input\", { type: \"radio\", name: \"course-type\", checked: courseType === 'step-course', onChange: function (ev) { return ev.target.checked && _this.setState({ courseType: 'step-course' }); } }),\n                \" Stegkurs\"),\n            React.createElement(\"br\", null),\n            React.createElement(\"div\", null,\n                React.createElement(\"input\", { type: \"radio\", name: \"course-type\", checked: courseType === 'theme-course', onChange: function (ev) { return ev.target.checked && _this.setState({ courseType: 'theme-course' }); } }),\n                \" Temakurs\"),\n            React.createElement(\"br\", null),\n            courseType === 'step-course' ? React.createElement(React.Fragment, null,\n                React.createElement(\"br\", null),\n                React.createElement(\"form\", null,\n                    React.createElement(\"label\", { className: \"kclabel\" }, L(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject([\"\\u00C4mne\"], [\"\\u00C4mne\"])))),\n                    React.createElement(LazyContent, null, db.subjects.tags(\"schoolType:primary\").toValue().map(function (subjects) {\n                        return React.createElement(\"select\", { value: subject.subjectCode, onChange: function (ev) { return _this.setState({\n                                subject: subjects.filter(function (s) { return s.code === ev.target.value; }).map(function (s) { return ({\n                                    subjectCode: s.code,\n                                    subjectName: s.name\n                                }); })[0]\n                            }); } },\n                            React.createElement(\"option\", { value: \"\" }, L(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject([\"V\\u00E4lj \\u00E4mne\"], [\"V\\u00E4lj \\u00E4mne\"])))),\n                            subjects.map(function (subject) { return React.createElement(\"option\", { key: subject.code, value: subject.code }, subject.name); }));\n                    })))) : null,\n            React.createElement(\"div\", null,\n                React.createElement(\"button\", { disabled: !this.isValidState(), className: [\"btn\", \"btn-large\", this.isValidState() ? \"\" : \"disabled\"].join(' '), onClick: function () { return _this.isValidState() ?\n                        _this.createCourse() : alert(_this.isValidState(true)); } }, \"Skapa\"))));\n    };\n    return _CreateStandardCourse;\n}(React.Component));\nexport var CreateStandardCourse = withRouter(_CreateStandardCourse);\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6;\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { liveQueryView } from '../../../utility-components/live-query-view';\nimport { db } from '../../../../globals/db';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Spinner } from '../../../course-builder/sub-components/spinner';\nexport var DeleteStandardCourse = withRouter(liveQueryView(function (_a) {\n    var courseId = _a.courseId, history = _a.history;\n    return db.courseInstances.ids([courseId]).toValue()\n        .combineLatest(db.branches.tags(courseId).idsOnly().map(function (_a) {\n        var id = _a.id;\n        return id;\n    }))\n        .combineLatest(db.courseBlocks.tags(courseId).idsOnly().map(function (_a) {\n        var id = _a.id;\n        return id;\n    }))\n        .combineLatest(db.courseContents.tags(courseId).idsOnly().map(function (_a) {\n        var id = _a.id;\n        return id;\n    }))\n        .combineLatest(db.courseTabs.tags(courseId).idsOnly().map(function (_a) {\n        var id = _a.id;\n        return id;\n    }))\n        .combineLatest(db.tasks.tags(courseId).idsOnly().map(function (_a) {\n        var id = _a.id;\n        return id;\n    }))\n        .map(function (_a) {\n        var _b = tslib_1.__read(_a, 2), a = _b[0], b = _b[1];\n        return ({\n            courses: a[0][0][0][0],\n            branchIds: a[0][0][0][1],\n            courseBlockIds: a[0][0][1],\n            courseContentIds: a[0][1],\n            courseTabIds: a[1],\n            taskIds: b\n        });\n    })\n        .map(function (_a) {\n        var courses = _a.courses, branchIds = _a.branchIds, courseBlockIds = _a.courseBlockIds, courseContentIds = _a.courseContentIds, courseTabIds = _a.courseTabIds, taskIds = _a.taskIds;\n        if (courses.length === 0)\n            return React.createElement(\"div\", null,\n                React.createElement(\"p\", null, \"Kursen \\u00E4r nu borttagen\"),\n                React.createElement(Link, { className: \"btn btn-large\", to: \"/admin\" }, \"Till adminverktygets startsida\"));\n        var course = courses[0];\n        return React.createElement(\"div\", { className: [\"entitymeta-\" + course.$meta].join(' ') },\n            React.createElement(\"h2\", null,\n                \"Bekr\\u00E4fta borttagning av standardkursen \",\n                course.name,\n                \" \"),\n            React.createElement(\"p\", null, \"F\\u00F6ljande relaterade objekt kommer ocks\\u00E5 att tas bort\"),\n            React.createElement(\"p\", null,\n                \"Tempor\\u00E4ra utkast: \",\n                branchIds.length,\n                \" st\"),\n            React.createElement(\"p\", null,\n                \"Kursblock: \",\n                courseBlockIds.length,\n                \" st\"),\n            React.createElement(\"p\", null,\n                \"Inneh\\u00E5llsrutor (totalt inklusive skolors egna varianter): \",\n                courseContentIds.length,\n                \" st\"),\n            React.createElement(\"p\", null,\n                \"Flikar (totalt inklusive skolors egna varianter): \",\n                courseTabIds.length,\n                \" st\"),\n            React.createElement(\"p\", null,\n                \"Uppgifter (totalt inklusive skolors egna varianter): \",\n                taskIds.length,\n                \" st\"),\n            React.createElement(\"a\", { className: \"btn btn-large\", onClick: function () { return history.go(-1); } }, \"Avbryt\"),\n            React.createElement(\"div\", { className: \"btn btn-warning btn-large pull-right\", onClick: function () {\n                    var _a, _b, _c, _d, _e;\n                    // Delete all draft ids.\n                    (_a = db.branches).delete.apply(_a, tslib_1.__spread(branchIds));\n                    // Delete all descendant ids:\n                    (_b = db.courseBlocks).delete.apply(_b, tslib_1.__spread(courseBlockIds));\n                    (_c = db.courseContents).delete.apply(_c, tslib_1.__spread(courseContentIds));\n                    (_d = db.courseTabs).delete.apply(_d, tslib_1.__spread(courseTabIds));\n                    (_e = db.tasks).delete.apply(_e, tslib_1.__spread(taskIds));\n                    // Delete the course itself\n                    db.courseInstances.delete(course.id);\n                } }, \"Bekr\\u00E4fta borttagning av kurs\"));\n    });\n}, {\n    spinner: React.createElement(\"p\", null,\n        \"H\\u00E4mtar relaterade objekt... \",\n        React.createElement(Spinner, null))\n}));\n","import * as tslib_1 from \"tslib\";\nimport React from 'react';\nimport { KnowledgeMatrix } from '../../../course-builder/sub-components/knowledge-matrix';\nimport { LazyContent } from '../../../utility-components/lazy-content';\nimport { getCourseCodesFromTags } from '../../logic/get-course-codes-from-tags';\nimport { L } from '../../../../utils/utils';\nimport { getStandardCoursesWithOrderedRequirements } from '../../logic/get-standard-courses-with-ordered-requirements';\nimport { OpenCloseBox } from '../../../utility-components/open-close-box';\nimport { SelectRelatedDocs } from '../../../course-builder/sub-components/select-related-docs';\nimport { liveQueryView } from '../../../utility-components/live-query-view';\nimport { getIdsNotCoveredByReqReferencingDocs } from '../../../course-builder/courses/business-logic';\nexport var CourseBlockRequirements = liveQueryView(function (_a) {\n    var _b;\n    var repo = _a.repo, course = _a.course, block = _a.block;\n    var courseCodes = getCourseCodesFromTags(block.tags);\n    var courseCodeTags = courseCodes.map(function (code) { return \"course:\" + code; });\n    return getStandardCoursesWithOrderedRequirements(courseCodes)\n        .combineLatest((_b = repo.courseBlocks\n        .hasEdgesFrom([course.id])) // Same parent give me sibling blocks!\n    .tags.apply(_b, tslib_1.__spread(courseCodeTags)).include(\"abilities\", \"centralContent\", \"knowledgeRequirements\")\n        .includeIdsOnly()) // So we can detect non-covered requirements\n        .map(function (_a) {\n        var _b = tslib_1.__read(_a, 2), courseTemplates = _b[0], siblingBlocks = _b[1];\n        var uncoveredIds = getIdsNotCoveredByReqReferencingDocs(courseTemplates, siblingBlocks);\n        if (courseTemplates.length === 0)\n            return React.createElement(\"p\", null, L(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"Blocket \\u00E4r inte kopplad till n\\u00E5gon \\u00E5rskurs\"], [\"Blocket \\u00E4r inte kopplad till n\\u00E5gon \\u00E5rskurs\"]))));\n        return React.createElement(\"div\", null, courseTemplates.map(function (_a) {\n            var id = _a.id, name = _a.name, abilities = _a.abilities, centralContent = _a.centralContent, knowledgeRequirements = _a.knowledgeRequirements;\n            return React.createElement(\"div\", { key: id },\n                courseTemplates.length === 1 ? undefined : React.createElement(\"h1\", null, name),\n                React.createElement(OpenCloseBox, { className: \"larger\", title: React.createElement(\"p\", null, L(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"V\\u00E4lj blockets kunskapskrav\"], [\"V\\u00E4lj blockets kunskapskrav\"])))) },\n                    React.createElement(\"p\", null, L(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"Markera de kunskapskrav som blocket ska t\\u00E4cka.\"], [\"Markera de kunskapskrav som blocket ska t\\u00E4cka.\"])))),\n                    React.createElement(LazyContent, null, repo[\"knowledge-requirements\"].hasEdgesFrom([block.id]).idsOnly().toValue().map(function (blockKrs) {\n                        return React.createElement(KnowledgeMatrix, { knowledgeRequirements: knowledgeRequirements, markedIds: blockKrs.map(function (_a) {\n                                var id = _a.id;\n                                return id;\n                            }), idsToMarkNotOk: uncoveredIds, markMode: true, onMarkChanged: function (markedId, isMarked) {\n                                // Remove invalid knowledge requirements (those that are not part of the standard course)\n                                // Can happen after changing school year / course or subject.\n                                var invalidKrs = blockKrs.filter(function (kr) { return !knowledgeRequirements.some(function (_a) {\n                                    var id = _a.id;\n                                    return kr.id === id;\n                                }); });\n                                invalidKrs.forEach(function (invalidKr) {\n                                    repo.courseBlocks.removeRelated(block.id, \"knowledgeRequirements\", invalidKr);\n                                });\n                                var markedDoc = knowledgeRequirements.filter(function (_a) {\n                                    var id = _a.id;\n                                    return id === markedId;\n                                })[0];\n                                if (isMarked) {\n                                    repo.courseBlocks.addRelated(block.id, \"knowledgeRequirements\", markedDoc);\n                                }\n                                else {\n                                    repo.courseBlocks.removeRelated(block.id, \"knowledgeRequirements\", markedDoc);\n                                }\n                            } });\n                    }))),\n                React.createElement(LazyContent, null, repo.abilities.hasEdgesFrom([block.id]).idsOnly().toValue().map(function (blockAbilities) {\n                    return React.createElement(SelectRelatedDocs, { options: abilities, title: L(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject([\"V\\u00E4lj blockets f\\u00F6rm\\u00E5gor\"], [\"V\\u00E4lj blockets f\\u00F6rm\\u00E5gor\"]))), markedIds: blockAbilities.map(function (_a) {\n                            var id = _a.id;\n                            return id;\n                        }), uncoveredIds: uncoveredIds, markMode: true, \n                        //migratedIds={task && task.migratedTexts && task.migratedTexts.abilities}\n                        onMarkChanged: function (markedId, isMarked) {\n                            // Remove invalid abilities (those that are not part of the standard course)\n                            // Can happen after changing school year / course or subject.\n                            var invalidAbilities = blockAbilities.filter(function (a) { return !abilities.some(function (_a) {\n                                var id = _a.id;\n                                return a.id === id;\n                            }); });\n                            invalidAbilities.forEach(function (invalidAbility) {\n                                repo.courseBlocks.removeRelated(block.id, \"abilities\", invalidAbility);\n                            });\n                            var markedDoc = abilities.filter(function (_a) {\n                                var id = _a.id;\n                                return id === markedId;\n                            })[0];\n                            if (isMarked) {\n                                repo.courseBlocks.addRelated(block.id, \"abilities\", markedDoc);\n                            }\n                            else {\n                                repo.courseBlocks.removeRelated(block.id, \"abilities\", markedDoc);\n                            }\n                        } });\n                })),\n                React.createElement(LazyContent, null, repo[\"central-content\"].hasEdgesFrom([block.id]).idsOnly().toValue().map(function (blockCCs) {\n                    return React.createElement(SelectRelatedDocs, { options: centralContent, title: L(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject([\"V\\u00E4lj blockets centrala inneh\\u00E5ll\"], [\"V\\u00E4lj blockets centrala inneh\\u00E5ll\"]))), markedIds: blockCCs.map(function (cc) { return cc.id; }), uncoveredIds: uncoveredIds, markMode: true, \n                        //migratedIds={task && task.migratedTexts && task.migratedTexts.centralContent}\n                        onMarkChanged: function (markedId, isMarked) {\n                            // Remove invalid central contents (those that are not part of the standard course)\n                            // Can happen after changing school year / course or subject.\n                            var invalidCentralContents = blockCCs.filter(function (cc) { return !centralContent.some(function (_a) {\n                                var id = _a.id;\n                                return cc.id === id;\n                            }); });\n                            invalidCentralContents.forEach(function (invalidCC) {\n                                repo.courseBlocks.removeRelated(block.id, \"centralContent\", invalidCC);\n                            });\n                            var markedDoc = centralContent.filter(function (_a) {\n                                var id = _a.id;\n                                return id === markedId;\n                            })[0];\n                            if (isMarked) {\n                                repo.courseBlocks.addRelated(block.id, \"centralContent\", markedDoc);\n                            }\n                            else {\n                                repo.courseBlocks.removeRelated(block.id, \"centralContent\", markedDoc);\n                            }\n                        } });\n                })));\n        }));\n    });\n});\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;\n","import * as tslib_1 from \"tslib\";\nimport React from 'react';\nimport { compareProp, L } from '../../../../utils/utils';\nimport { createUUID } from 'kedbackend/client';\nimport { RemoveItem } from '../../../course-builder/sub-components/remove-item';\nimport { getSchoolYears, computeTagsFromSchoolYears } from '../../logic/course-instance-tags';\nimport { CourseBlockRequirements } from './edit-course-block-requirements';\nexport var EditStandardCourseBlocks = function (_a) {\n    var repo = _a.repo, course = _a.course;\n    return React.createElement(\"div\", null,\n        React.createElement(\"label\", { className: \"kclabel\" }, L(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"Kursblock\"], [\"Kursblock\"])))),\n        course.blocks.sort(compareProp(\"blockNo\")).map(function (block, idx) {\n            return React.createElement(CourseBlockSettings, { key: block.id, block: block, course: course, repo: repo, isLastBlock: idx === course.blocks.length - 1 });\n        }),\n        React.createElement(\"button\", { className: \"btn\", onClick: function () { return addCourseBlock(repo, course); } },\n            React.createElement(\"i\", { className: \"fa fa-plus\", \"aria-hidden\": \"true\" }),\n            \" \", L(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"L\\u00E4gg till block\"], [\"L\\u00E4gg till block\"])))),\n        React.createElement(\"br\", null));\n};\nexport var CourseBlockSettings = function (_a) {\n    var block = _a.block, course = _a.course, repo = _a.repo, isLastBlock = _a.isLastBlock;\n    return React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"ked_boxed\", style: { position: \"relative\" } },\n            React.createElement(\"h4\", null,\n                \"Block \",\n                block.blockNo), L(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"Steg\"], [\"Steg\"]))),\n            \" \",\n            React.createElement(\"div\", { className: \"btn-group\" }, block.stepNumbers.map(function (stepNo) {\n                return React.createElement(\"a\", { key: stepNo, className: \"btn btn-small step-button\" }, stepNo);\n            })),\n            React.createElement(\"form\", null,\n                React.createElement(\"label\", { className: \"kclabel\" }, L(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject([\"\\u00C5rskurs\"], [\"\\u00C5rskurs\"])))),\n                React.createElement(\"select\", { value: getSchoolYears(block.tags)[0] || \"\", onChange: function (ev) { return repo.courseBlocks.update(block, {\n                        tags: computeTagsFromSchoolYears(block.tags, [ev.target.value].filter(function (x) { return !!x; }))\n                    }); } },\n                    React.createElement(\"option\", { value: \"\" }, L(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject([\"V\\u00E4lj \\u00E5rskurser\"], [\"V\\u00E4lj \\u00E5rskurser\"])))),\n                    React.createElement(\"option\", { value: \"1-3\" }, L(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject([\"\\u00C5rskurs 1-3\"], [\"\\u00C5rskurs 1-3\"])))),\n                    React.createElement(\"option\", { value: \"4-6\" }, L(templateObject_7 || (templateObject_7 = tslib_1.__makeTemplateObject([\"\\u00C5rskurs 4-6\"], [\"\\u00C5rskurs 4-6\"])))),\n                    React.createElement(\"option\", { value: \"7-9\" }, L(templateObject_8 || (templateObject_8 = tslib_1.__makeTemplateObject([\"\\u00C5rskurs 7-9\"], [\"\\u00C5rskurs 7-9\"])))))),\n            React.createElement(\"br\", null),\n            getSchoolYears(block.tags).length > 0 ?\n                React.createElement(CourseBlockRequirements, { block: block, course: course, repo: repo }) :\n                undefined,\n            isLastBlock ? React.createElement(RemoveItem, { title: \"Ta bort blocket\", style: { display: 'inline-block', position: \"absolute\", top: 0, right: 0 }, onClick: function () { return confirm(L(templateObject_9 || (templateObject_9 = tslib_1.__makeTemplateObject([\"Ta bort blocket?\"], [\"Ta bort blocket?\"])))) &&\n                    repo.courseInstances.removeRelated(course.id, \"blocks\", block); } })\n                : null),\n        React.createElement(\"hr\", null));\n};\nfunction addCourseBlock(repo, course) {\n    var lastBlock = course.blocks.sort(compareProp(\"blockNo\")).slice().pop();\n    var blockNo = lastBlock ? lastBlock.blockNo + 1 : 1;\n    var firstStepNo = lastBlock ?\n        lastBlock.stepNumbers[lastBlock.stepNumbers.length - 1] + 1 :\n        1;\n    var newBlock = {\n        id: createUUID(),\n        acl: [\n            'schoolRole:standard/EMPLOYEE:S',\n            'role:USER:R'\n        ],\n        blockNo: blockNo,\n        locked: true,\n        name: \"Block \" + blockNo,\n        tags: tslib_1.__spread([course.id], course.tags.filter(function (tag) { return tag.startsWith(\"course:\") || tag.startsWith(\"sub:\"); })),\n        stepNumbers: [firstStepNo, firstStepNo + 1, firstStepNo + 2, firstStepNo + 3, firstStepNo + 4]\n    };\n    repo.courseInstances.addRelated(course.id, \"blocks\", newBlock);\n    newBlock.stepNumbers.forEach(function (stepNo) {\n        var introductionTab = {\n            id: createUUID(),\n            type: 'step-course-tab',\n            tabClass: 'intro-tab',\n            tabTitle: L(templateObject_10 || (templateObject_10 = tslib_1.__makeTemplateObject([\"Introduktion\"], [\"Introduktion\"]))),\n            name: L(templateObject_11 || (templateObject_11 = tslib_1.__makeTemplateObject([\"Introduktion\"], [\"Introduktion\"]))),\n            locked: true,\n            acl: [\n                'schoolRole:standard/EMPLOYEE:S',\n                'role:USER:R'\n            ],\n            stepNo: stepNo,\n            order: 0,\n            tags: tslib_1.__spread([course.id], course.tags.filter(function (tag) { return tag.startsWith(\"course:\") || tag.startsWith(\"sub:\"); }))\n        };\n        repo.courseBlocks.addRelated(newBlock.id, \"tabs\", introductionTab);\n    });\n}\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11;\n","var _this = this;\nimport * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { db, CourseInstances, Schools } from '../../../../globals/db';\nimport { TextInput } from '../../../utility-components/form-field-text-input';\nimport { TextAreaFormField } from '../../../utility-components/form-field-textarea';\nimport { FormField } from '../../../utility-components/form-field';\nimport { L } from '../../../../utils/utils';\nimport { Link, withRouter } from 'react-router-dom';\nimport { liveQueryView } from '../../../utility-components/live-query-view';\nimport { publishCourse } from '../../logic/publish-course';\nimport { Multiselect } from '../../../utility-components/multiselect';\nimport { Checklist } from '../../../utility-components/checklist';\nimport { getSubjectCodes, computeTagsFromSubjectCodes, getSchoolYears, computeTagsFromSchoolYears, computeTagsFromActiveState } from '../../logic/course-instance-tags';\nimport { EditStandardCourseBlocks } from './edit-standard-course-blocks';\nimport cfg from '../../../../globals/KED.cfg';\nimport { preserveImpersonationQuery } from '../../../../access-control';\nexport var EditStandardCourse = withRouter(liveQueryView(function (_a) {\n    var courseId = _a.courseId, history = _a.history;\n    return CourseInstances.getOrCreateBranchId(Schools.standardSchool, courseId)\n        .map(function (branchId) { return db.branch(branchId); })\n        .switchMap(function (branch) {\n        return branch.courseInstances.include(\"blocks\").id(courseId).map(function (course) { return React.createElement(React.Fragment, null,\n            React.createElement(TextInput, { autoFocus: true, label: \"Namn\", id: \"CourseInstance:name\", placeholder: \"\", value: course.name, onChange: function (name) { return branch.courseInstances.update(course, { name: name }); } }),\n            React.createElement(TextAreaFormField, { label: \"Beskrivning\", id: \"CourseInstance:description\", rows: 7, placeholder: \"\", value: course.description, onChange: function (description) {\n                    branch.courseInstances.update(course, { description: description });\n                } }),\n            React.createElement(FormField, { label: \"Typ\", id: \"CourseInstance:type\" },\n                React.createElement(\"div\", { className: \"align-horizontal\" },\n                    React.createElement(\"div\", { className: \"horizontalItem top\" },\n                        React.createElement(\"input\", { disabled: true, type: \"radio\", name: \"course-type\", checked: course.type === 'step-course', id: \"CourseInstance:type\", onChange: function (ev) { return ev.target.checked && branch.courseInstances.update(course, { type: 'step-course' }); } }),\n                        \" Stegkurs\")),\n                React.createElement(\"div\", { className: \"align-horizontal\" },\n                    React.createElement(\"div\", { className: \"horizontalItem\" },\n                        React.createElement(\"input\", { disabled: true, type: \"radio\", name: \"course-type\", checked: course.type === 'theme-course', id: \"CourseInstance:type\", onChange: function (ev) { return ev.target.checked && branch.courseInstances.update(course, { type: 'theme-course' }); } }),\n                        \" Temakurs\"))),\n            course.type === 'step-course' ? React.createElement(React.Fragment, null,\n                React.createElement(\"br\", null),\n                React.createElement(FormField, { label: L(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\u00C4mne\"], [\"\\u00C4mne\"]))), id: \"CourseInstance:subject\" },\n                    React.createElement(\"p\", { id: \"CourseInstance:subject\" }, course.subject.subjectName))) : null,\n            React.createElement(\"br\", null),\n            React.createElement(\"form\", null,\n                React.createElement(\"label\", { className: \"kclabel\" }, L(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\u00C4ndringspolicy\"], [\"\\u00C4ndringspolicy\"])))),\n                React.createElement(Checklist, { available: [\n                        { name: L(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"Till\\u00E5t skolor skapa egna flikar\"], [\"Till\\u00E5t skolor skapa egna flikar\"]))), key: \"allowAddTabs\" },\n                        { name: L(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject([\"Till\\u00E5t skolor d\\u00F6lja standardflikar\"], [\"Till\\u00E5t skolor d\\u00F6lja standardflikar\"]))), key: \"allowRemoveTabs\" },\n                        { name: L(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject([\"Till\\u00E5t skolor \\u00E4ndra ordningen mellan standardflikar\"], [\"Till\\u00E5t skolor \\u00E4ndra ordningen mellan standardflikar\"]))), key: \"allowReorderTabs\" },\n                    ], selected: [\n                        course.allowAddTabs && \"allowAddTabs\",\n                        course.allowRemoveTabs && \"allowRemoveTabs\",\n                        course.allowReorderTabs && \"allowReorderTabs\"\n                    ].filter(function (x) { return !!x; }), onChange: function (selectedPolicy) { return branch.courseInstances.update(course, {\n                        allowAddTabs: selectedPolicy.includes(\"allowAddTabs\"),\n                        allowRemoveTabs: selectedPolicy.includes(\"allowRemoveTabs\"),\n                        allowReorderTabs: selectedPolicy.includes(\"allowReorderTabs\"),\n                    }); } })),\n            course.type === 'step-course' ? React.createElement(React.Fragment, null, getSubjectCodes(course.tags).length > 0 ? React.createElement(EditStandardCourseBlocks, { repo: branch, course: course }) : undefined) : undefined,\n            course.type === 'theme-course' ? React.createElement(React.Fragment, null,\n                React.createElement(\"br\", null),\n                React.createElement(\"form\", null,\n                    React.createElement(\"label\", { className: \"kclabel\" }, L(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject([\"Kopplade \\u00E4mnen\"], [\"Kopplade \\u00E4mnen\"])))),\n                    React.createElement(Multiselect, { selected: (course.subjects || []).map(function (_a) {\n                            var name = _a.name, code = _a.code;\n                            return ({ name: name, key: code });\n                        }), getOptions: function () { return db.subjects.tags('schoolType:primary').map(function (s) { return ({ name: s.name, key: s.code }); }).toValue().load(); }, onChange: function (selectedOptions) { return branch.courseInstances.update(course, {\n                            tags: computeTagsFromSubjectCodes(course.tags, selectedOptions.map(function (o) { return o.key; })),\n                            subjects: selectedOptions.map(function (option) { return ({ name: option.name, code: option.key }); })\n                        }); } })),\n                React.createElement(\"br\", null),\n                React.createElement(\"form\", null,\n                    React.createElement(\"label\", { className: \"kclabel\" }, L(templateObject_7 || (templateObject_7 = tslib_1.__makeTemplateObject([\"\\u00C5rskurser som ska ing\\u00E5\"], [\"\\u00C5rskurser som ska ing\\u00E5\"])))),\n                    React.createElement(Checklist, { available: [\n                            { name: L(templateObject_8 || (templateObject_8 = tslib_1.__makeTemplateObject([\"\\u00C5rskurs 1-3\"], [\"\\u00C5rskurs 1-3\"]))), key: \"1-3\" },\n                            { name: L(templateObject_9 || (templateObject_9 = tslib_1.__makeTemplateObject([\"\\u00C5rskurs 4-6\"], [\"\\u00C5rskurs 4-6\"]))), key: \"4-6\" },\n                            { name: L(templateObject_10 || (templateObject_10 = tslib_1.__makeTemplateObject([\"\\u00C5rskurs 7-9\"], [\"\\u00C5rskurs 7-9\"]))), key: \"7-9\" }\n                        ], selected: getSchoolYears(course.tags), onChange: function (selectedSchoolYears) { return branch.courseInstances.update(course, {\n                            tags: computeTagsFromSchoolYears(course.tags, selectedSchoolYears)\n                        }); } }))) : undefined,\n            React.createElement(\"br\", null),\n            course.tags.includes('active') ?\n                React.createElement(\"div\", { className: \"btn btn-large pull-right\", onClick: function () {\n                        var newTags = computeTagsFromActiveState(course.tags, false);\n                        branch.courseInstances.update(course, { tags: newTags });\n                    } }, \"Inaktivera\") :\n                React.createElement(\"div\", { className: \"btn btn-large pull-right\", onClick: function () {\n                        var newTags = computeTagsFromActiveState(course.tags, true);\n                        branch.courseInstances.update(course, { tags: newTags });\n                    } }, \"Aktivera\"),\n            React.createElement(Link, { className: \"btn btn-warning btn-large pull-right\", to: \"/admin/courses/\" + courseId + \"/confirm-delete\" }, L(templateObject_11 || (templateObject_11 = tslib_1.__makeTemplateObject([\"Radera ...\"], [\"Radera ...\"])))),\n            React.createElement(\"div\", { className: \"btn btn-large btn-warning\", onClick: function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                    return tslib_1.__generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                publishCourse({ school: \"standard\", draftRepo: branch, course: course });\n                                return [4 /*yield*/, db.saveNow()];\n                            case 1:\n                                _a.sent();\n                                location.href = preserveImpersonationQuery(cfg.KED_SUBJECT_PLANNER_URL + \"#/standard/courses/\" + courseId, {});\n                                return [2 /*return*/];\n                        }\n                    });\n                }); } }, \"Publicera\")); });\n    });\n}));\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11;\n/*async function deleteCourse(course: CourseInstance) {\n  try {\n    // Get course's drafts on all schools\n    // Get ids of all related entities (search by entities tags with course id)\n    const [\n      draftBranchIds,\n      courseBlockIds,\n      courseContentIds,\n      couresTabsIds,\n      tasksIds] = await Promise.all([\n        db.branches.tags(course.id).load(),\n        db.courseBlocks.tags(course.id).load(),\n        db.courseContents.tags(course.id).load(),\n        db.courseTabs.tags(course.id).load(),\n        db.tasks.tags(course.id).load()\n      ]);\n\n    // Delete all draft ids.\n    db.branches.delete(...draftBranchIds);\n    // Delete all descendant ids:\n    db.courseBlocks.delete(...courseBlockIds);\n    db.courseContents.delete(...courseContentIds);\n    db.courseTabs.delete(...couresTabsIds);\n    db.tasks.delete(...tasksIds);\n\n    // Delete the course itself\n    db.courseInstances.delete(course.id);\n\n  } catch (error) {\n    showError(error);\n  }\n}*/\n","import * as React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { ErrorSuccessFeedback } from '../../../utils/error-success-feedback';\nimport { ROUTES, TABS_ARRAY } from './routes';\nimport { Banner } from '../common/banner';\nimport { LoadingIndicator } from '../../utility-components/loading-indicator';\nexport var SubjectPlannerAdminApp = function () {\n    return React.createElement(Router, null,\n        React.createElement(React.Fragment, null,\n            ROUTES.map(function (_a, index) {\n                var exact = _a.exact, path = _a.path, tabId = _a.tabId, title = _a.title, content = _a.content;\n                return React.createElement(Route, { key: index, path: path, exact: exact, component: function (routeProps) { return React.createElement(React.Fragment, null,\n                        React.createElement(Banner, { activeTab: tabId || \"$\", tabs: TABS_ARRAY, title: title || \"\", backgroundImage: \"https://ks.kunskapsporten.se/images/18.6323bc4d15f4831f9c82dedf/theme.jpg\" }),\n                        content(routeProps)); } });\n            }),\n            React.createElement(ErrorSuccessFeedback, null),\n            React.createElement(LoadingIndicator, null)));\n};\n","import * as tslib_1 from \"tslib\";\nimport React from 'react';\nimport { CreateStandardCourse } from './courses/create-standard-course';\nimport { TwoColumnsPage } from '../common/two-columns-page';\nimport { StandardCourseInstanceList } from '../common/standard-course-instance-list';\nimport { Redirect } from 'react-router-dom';\nimport env from '../../../globals/KED.env';\nimport cfg from '../../../globals/KED.cfg';\nimport { EditStandardCourse } from './courses/edit-standard-course';\nimport { DeleteStandardCourse } from './courses/delete-standard-course';\nimport { SubjectsInner } from '../../course-builder/subjects/subjects-inner';\nimport { ShowSubjectInner } from '../../course-builder/subjects/show-subject-inner';\nimport { L } from '../../../utils/utils';\nimport { SchoolsWithoutBanner } from '../../course-builder/schools';\nimport { EditSchoolNoBanner } from '../../course-builder/schools/edit-school';\nimport { isTeacherAtSchool, preserveImpersonationQuery } from '../../../access-control';\nvar RedirectFromRoot = function () {\n    var _a = env.currentUser, roles = _a.roles, school = _a.school;\n    if (roles.includes(\"ADMIN\") || isTeacherAtSchool(env.currentUser, \"standard\"))\n        return React.createElement(Redirect, { to: \"/admin\" });\n    location.href = preserveImpersonationQuery(cfg.KED_SUBJECT_PLANNER_URL, {});\n    return React.createElement(\"div\", null);\n    /*return roles.includes(\"ADMIN\") ?\n      <Redirect to=\"/admin\" /> :\n    //roles.includes(\"EMPLOYEE\") ?\n    //<Redirect to={`/${school}/courses/edit`} /> :\n      <Redirect to={`/admin/courses`} />;*/\n};\nexport var TABS = {\n    $: ['/admin', React.createElement(React.Fragment, null, \"Start\")],\n    //courses: ['/admin/courses', <>Kurser</>],\n    schools: [\"/schools\", React.createElement(React.Fragment, null, \"Skolor\")],\n    import: ['/admin/import', React.createElement(React.Fragment, null, \"Import\")],\n};\nexport var ROUTES = [\n    {\n        path: \"/\",\n        exact: true,\n        content: function () { return React.createElement(RedirectFromRoot, null); }\n    },\n    {\n        path: \"/admin\",\n        exact: true,\n        tabId: \"$\",\n        title: \"Ämnesplaneraren Admin\",\n        content: function () { return React.createElement(Redirect, { to: \"/admin/courses/create\" }); }\n    },\n    {\n        path: \"/admin/courses/create\",\n        exact: true,\n        tabId: \"$\",\n        title: \"Skapa standardkurs\",\n        content: function () {\n            return React.createElement(TwoColumnsPage, { left: React.createElement(CreateStandardCourse, null), right: React.createElement(StandardCourseInstanceList, null), rightWidth: 5 });\n        }\n    }, {\n        path: \"/admin/courses/:courseId/settings\",\n        exact: true,\n        tabId: \"$\",\n        title: \"Ämnesplaneraren Admin\",\n        content: function (_a) {\n            var match = _a.match;\n            return React.createElement(TwoColumnsPage, { left: React.createElement(EditStandardCourse, { courseId: match.params.courseId }), right: React.createElement(StandardCourseInstanceList, null), rightWidth: 5 });\n        }\n    }, {\n        path: \"/admin/courses/:courseId/confirm-delete\",\n        exact: true,\n        tabId: \"$\",\n        title: \"Bekräfta radering av standardkurs\",\n        content: function (_a) {\n            var match = _a.match;\n            return React.createElement(TwoColumnsPage, { left: React.createElement(DeleteStandardCourse, { courseId: match.params.courseId }), right: React.createElement(StandardCourseInstanceList, null), rightWidth: 5 });\n        }\n    }, {\n        path: \"/admin/import\",\n        exact: true,\n        tabId: 'import',\n        title: \"Import från Skolverket\",\n        content: function () { return React.createElement(SubjectsInner, { linkPrefix: \"/admin/import/\" }); }\n    }, {\n        path: \"/admin/import/:subjectId\",\n        exact: false,\n        tabId: \"import\",\n        title: \"Import från skolverket\",\n        content: function (_a) {\n            var match = _a.match;\n            return React.createElement(ShowSubjectInner, { id: match.params.subjectId });\n        }\n    }, {\n        path: \"/schools\",\n        exact: true,\n        tabId: \"schools\",\n        title: L(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"Skolor\"], [\"Skolor\"]))),\n        content: function () { return React.createElement(SchoolsWithoutBanner, { viewCourseUrl: cfg.KED_SUBJECT_PLANNER_URL }); }\n    }, {\n        path: \"/schools/:schoolId/edit\",\n        tabId: \"schools\",\n        title: \"Skolor\",\n        content: function (_a) {\n            var match = _a.match;\n            return React.createElement(EditSchoolNoBanner, { title: L(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"Redigera skola\"], [\"Redigera skola\"]))), id: match.params.schoolId });\n        }\n    }, {\n        path: \"/schools/new/gymnasium\",\n        tabId: \"schools\",\n        title: \"Skolor\",\n        content: function (_a) {\n            var match = _a.match;\n            return React.createElement(EditSchoolNoBanner, { title: L(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"L\\u00E4gg till skola\"], [\"L\\u00E4gg till skola\"]))), type: \"gymnasium\" });\n        }\n    }, {\n        path: \"/schools/new/primary\",\n        tabId: \"schools\",\n        title: \"Skolor\",\n        content: function (_a) {\n            var match = _a.match;\n            return React.createElement(EditSchoolNoBanner, { title: L(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject([\"L\\u00E4gg till skola\"], [\"L\\u00E4gg till skola\"]))), type: \"primary\" });\n        }\n    }\n];\nexport var TABS_ARRAY = Object.keys(TABS).map(function (key) { return ({\n    key: key,\n    name: TABS[key][1],\n    link: TABS[key][0]\n}); });\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4;\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Emitter } from 'kedbackend/observable';\nimport { LazyContent } from '../../utility-components/lazy-content';\nimport { EllipsisLoader } from '../../course-builder/sub-components/ellipsis-loader';\nimport { preserveImpersonationQuery } from '../../../access-control';\nimport { L } from '../../../utils/utils';\nvar LazyBanner = /** @class */ (function (_super) {\n    tslib_1.__extends(LazyBanner, _super);\n    function LazyBanner() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.dragState = new Emitter({ tabBeingDragged: '', tabBeingHovered: '', insertBefore: false, originClientX: -1 });\n        return _this;\n    }\n    LazyBanner.prototype.render = function () {\n        var _this = this;\n        var lazyProps = this.props.lazyProps;\n        return (React.createElement(\"div\", { className: \"sv-row sv-layout sv-skip-spacer\", style: { overflow: \"visible\" } },\n            React.createElement(\"div\", { className: \"sv-layout sv-skip-spacer sv-column-12\" },\n                React.createElement(\"div\", { className: \"sv-script-portlet sv-portlet sv-skip-spacer\" },\n                    React.createElement(LazyContent, { noError: true }, lazyProps.map(function (_a) {\n                        var backgroundImage = _a.backgroundImage;\n                        return backgroundImage && React.createElement(\"style\", null, \"\\n              .pageHeader {\\n                background-image: url('\" + backgroundImage + \"') !important;\\n              }\\n            \");\n                    })),\n                    React.createElement(\"div\", { className: \"pageHeader\" },\n                        React.createElement(\"a\", null,\n                            React.createElement(\"h1\", null,\n                                React.createElement(LazyContent, { noError: true }, lazyProps.map(function (props) { return React.createElement(React.Fragment, null, props.title); })))),\n                        React.createElement(LazyContent, { noError: true }, lazyProps.map(function (_a) {\n                            var cornerBox = _a.cornerBox;\n                            return cornerBox &&\n                                React.createElement(\"div\", { className: \"pageHeaderCornerBox\" }, cornerBox);\n                        })),\n                        React.createElement(\"div\", { className: \"buttonsField\" },\n                            React.createElement(\"div\", { className: \"buttonsContainer\" },\n                                React.createElement(LazyContent, { spinner: React.createElement(EllipsisLoader, null) }, lazyProps.map(function (_a) {\n                                    var tabs = _a.tabs, buttons = _a.buttons, activeTab = _a.activeTab, blocks = _a.blocks, sortableTabs = _a.sortableTabs, onTabDrop = _a.onTabDrop;\n                                    return React.createElement(React.Fragment, null,\n                                        blocks ? React.createElement(\"div\", { className: \"align-horizontal\" }, blocks.map(function (block) { return React.createElement(\"div\", { key: block.id, className: \"horizontalItem top\" },\n                                            React.createElement(\"div\", { className: \"align-vertical\" },\n                                                React.createElement(\"div\", null,\n                                                    React.createElement(\"a\", null, block.name)),\n                                                React.createElement(\"div\", null,\n                                                    React.createElement(\"div\", { className: \"btn-group\" }, block.steps.map(function (step) { return React.createElement(React.Fragment, { key: step.stepNo },\n                                                        React.createElement(Link, { to: step.link, className: \"btn btn-small step-button\" + (step.isActive ? \" activePage\" : \"\") }, step.stepNo),\n                                                        React.createElement(\"a\", null)); }))))); })) : null,\n                                        React.createElement(\"div\", { className: 'horizontalMenu' },\n                                            React.createElement(LazyContent, null, _this.dragState.map(function (_a) {\n                                                var tabBeingDragged = _a.tabBeingDragged, tabBeingHovered = _a.tabBeingHovered, insertBefore = _a.insertBefore, originClientX = _a.originClientX;\n                                                return React.createElement(\"ul\", { className: sortableTabs ? \"sortable\" : null, onDrop: onTabDrop ? function (ev) {\n                                                        if (tabBeingHovered && tabBeingDragged) {\n                                                            onTabDrop(tabBeingDragged, tabBeingHovered, insertBefore ?\n                                                                'before' : 'after');\n                                                        }\n                                                        _this.dragState.dispatch(tslib_1.__assign({}, _this.dragState.value, { tabBeingHovered: '', tabBeingDragged: '' }));\n                                                    } : null },\n                                                    tabs.map(function (_a, idx) {\n                                                        var name = _a.name, key = _a.key, link = _a.link, onClick = _a.onClick, draggable = _a.draggable;\n                                                        var isActive = activeTab === key || (activeTab === '$' && idx === 0);\n                                                        var dragState = _this.dragState;\n                                                        name = name || L(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"(Namnl\\u00F6s flik)\"], [\"(Namnl\\u00F6s flik)\"])));\n                                                        return React.createElement(React.Fragment, { key: key },\n                                                            insertBefore && tabBeingHovered === key ? React.createElement(\"li\", { className: \"drop-target\", onDragOver: function (ev) { return ev.preventDefault(); } }, \"\\u00A0\") : null,\n                                                            React.createElement(\"li\", { className: [\n                                                                    isActive ? \"activePage\" : \"\",\n                                                                    key === tabBeingDragged ? \"drag-source\" : \"\",\n                                                                    sortableTabs && draggable ? \"draggable\" : \"\"\n                                                                ].filter(function (x) { return x; }).join(' '), draggable: sortableTabs && draggable, onDragStart: sortableTabs && draggable ? function (ev) {\n                                                                    ev.dataTransfer.effectAllowed = \"move\";\n                                                                    dragState.dispatch(tslib_1.__assign({}, dragState.value, { originClientX: ev.clientX, tabBeingDragged: key }));\n                                                                } : null, onDragOver: sortableTabs ? function (ev) {\n                                                                    if (tabBeingDragged === key) {\n                                                                        dragState.dispatch(tslib_1.__assign({}, dragState.value, { tabBeingHovered: '' }));\n                                                                        return;\n                                                                    }\n                                                                    if (!tabBeingDragged)\n                                                                        return;\n                                                                    ev.preventDefault();\n                                                                    ev.dataTransfer.dropEffect = \"move\";\n                                                                    //console.log(\"onDragOver: \" + name + \". idx: \" + idx + \". otherIdx: \" + otherIdx);\n                                                                    dragState.dispatch(tslib_1.__assign({}, dragState.value, { tabBeingHovered: key, insertBefore: originClientX > ev.clientX }));\n                                                                } : null, onDragEnd: function (ev) {\n                                                                    _this.dragState.dispatch(tslib_1.__assign({}, dragState.value, { tabBeingHovered: '', tabBeingDragged: '' }));\n                                                                } }, link ? link.startsWith(\":\") ?\n                                                                React.createElement(\"a\", { href: preserveImpersonationQuery(link.substr(1), {}) }, name) :\n                                                                React.createElement(Link, { to: link }, name) :\n                                                                onClick ?\n                                                                    React.createElement(\"a\", { onClick: onClick }, name) :\n                                                                    name),\n                                                            !insertBefore && tabBeingHovered === key ? React.createElement(\"li\", { className: \"drop-target\", onDragOver: function (ev) { return ev.preventDefault(); } }, \"\\u00A0\") : null);\n                                                    }),\n                                                    buttons && buttons.map(function (btn, idx) { return React.createElement(\"li\", { className: \"action-tab\", key: \"btn\" + idx }, btn); }));\n                                            }))));\n                                })))))))));\n    };\n    return LazyBanner;\n}(React.Component));\nexport { LazyBanner };\nexport var Banner = function (props) { return React.createElement(LazyBanner, { lazyProps: new Emitter(props) }); };\nvar templateObject_1;\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nexport var SideList = function (_a) {\n    var items = _a.items, caption = _a.caption;\n    return (React.createElement(\"div\", { className: \"sv-html-portlet sv-portlet sv-skip-spacer\" },\n        React.createElement(\"div\", { className: \"ked_boxed\" },\n            React.createElement(\"h3\", null, caption),\n            React.createElement(\"div\", { className: \"taskContainer odd-even\" }, items.map(function (item) { return React.createElement(\"div\", { className: \"schoolCourse\", key: item.id },\n                React.createElement(\"div\", { className: [\"align-horizontal\", item.$meta && \"entitymeta-\" + item.$meta].join(' ') },\n                    React.createElement(\"div\", { className: \"horizontalItem top pull-right\" }, item.editLink.startsWith(':') ?\n                        React.createElement(\"a\", { href: item.editLink.substr(1), className: \"editItem\" }) :\n                        React.createElement(Link, { to: item.editLink, className: \"editItem\" })),\n                    React.createElement(\"div\", { className: \"horizontalItem top\" }, item.viewLink.startsWith(':') ?\n                        React.createElement(\"a\", { href: item.viewLink.substr(1) }, item.name) :\n                        React.createElement(Link, { to: item.viewLink }, item.name)),\n                    item.pills.map(function (pill, idx) {\n                        return React.createElement(\"div\", { key: idx, className: \"horizontalItem top\" },\n                            React.createElement(\"div\", { className: [\"pill\"].concat(pill.className).join(' ') }, pill.name));\n                    })),\n                React.createElement(\"div\", { className: \"horizontalItem top\" },\n                    React.createElement(\"p\", null, item.description)),\n                React.createElement(\"div\", { className: \"horizontalItem top\" },\n                    React.createElement(\"p\", { className: \"small\" }, item.smallText))); })))));\n};\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { SideList } from './side-list';\nimport { L } from '../../../utils/utils';\nimport { liveQueryView } from '../../utility-components/live-query-view';\nimport cfg from '../../../globals/KED.cfg';\nimport { preserveImpersonationQuery } from '../../../access-control';\nimport { shortDateFormat } from '../../course-builder/utils';\nimport { listCourseInstances } from '../logic/list-course-instances';\nexport var StandardCourseInstanceList = liveQueryView(function () {\n    /*{\n      loading: ()=><Spinner />,\n      error: error => <p>Ojsan hoppsan fel: {error.message}</p>\n    },*/\n    return listCourseInstances()\n        .orderBy(\"name\")\n        .map(function (_a) {\n        var id = _a.id, $meta = _a.$meta, name = _a.name, description = _a.description, tags = _a.tags, type = _a.type, modifiedBy = _a.modifiedBy, modifiedDate = _a.modifiedDate;\n        return ({\n            id: id,\n            type: type,\n            $meta: $meta,\n            name: name,\n            description: description,\n            viewLink: \":\" + preserveImpersonationQuery(cfg.KED_SUBJECT_PLANNER_URL, {}) + \"#/standard/courses/\" + id,\n            editLink: \"/admin/courses/\" + id + \"/settings\",\n            pills: tags.filter(function (tag) { return tag === \"active\"; })\n                .map(function (tag) { return ({\n                className: \"active\",\n                name: L(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"Aktiv\"], [\"Aktiv\"])))\n            }); }),\n            smallText: modifiedBy && modifiedDate && L(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"Senast redigerad av \", \" / \", \"\"], [\"Senast redigerad av \", \" / \", \"\"])), modifiedBy.name, shortDateFormat(modifiedDate))\n        });\n    })\n        .toValue()\n        .map(function (courseItems) {\n        var stepCourseItems = courseItems.filter(function (course) { return course.type === 'step-course'; });\n        var themeCourseItems = courseItems.filter(function (course) { return course.type === 'theme-course'; });\n        return React.createElement(React.Fragment, null,\n            React.createElement(SideList, { caption: \"Stegkurser\", items: stepCourseItems }),\n            React.createElement(SideList, { caption: \"Temakurser\", items: themeCourseItems }));\n    });\n});\nvar templateObject_1, templateObject_2;\n","import * as React from 'react';\nexport var TwoColumnsPage = function (_a) {\n    var left = _a.left, right = _a.right, rightWidth = _a.rightWidth;\n    return (React.createElement(\"div\", { className: \"sv-row sv-layout\" },\n        React.createElement(\"div\", { className: \"sv-layout sv-skip-spacer sv-column-12\" },\n            React.createElement(\"div\", { className: \"sv-spacer-20pxvt sv-vertical sv-layout sv-skip-spacer\" },\n                React.createElement(\"div\", { className: \"pagecontent sv-layout sv-spacer-20pxvt sv-skip-spacer\" },\n                    React.createElement(\"div\", { className: \"sv-row sv-layout sv-skip-spacer\" },\n                        React.createElement(\"div\", { className: \"sv-layout sv-skip-spacer sv-column-\" + (12 - rightWidth) }, left),\n                        React.createElement(\"div\", { className: \"sv-layout sv-column-\" + rightWidth }, right)))))));\n};\n","import * as tslib_1 from \"tslib\";\nimport { distinct, flatten } from \"../../../utils/utils\";\nexport function getSubjectCodes(tags) {\n    return distinct((tags || [])\n        .filter(function (tag) { return tag.startsWith(\"sub:\"); })\n        .map(function (tag) { return tag.substr(\"sub:\".length); }));\n}\nexport function getSchoolYears(tags) {\n    return distinct((tags || [])\n        .filter(function (tag) { return tag.startsWith(\"course:\"); })\n        .map(function (tag) { return tag.substr(tag.indexOf(\"|\") + 1); }) // School year is concatenated as pipe + schoolyear. Example: \"GRGRFYS01|4-6\"\n    );\n}\nfunction computeGradesFromGradeSpan(gradeSpan) {\n    // gradeSpan is \"1-3\", \"4-6\" or \"7-9\"\n    var _a = tslib_1.__read(gradeSpan.split(\"-\"), 2), start = _a[0], end = _a[1];\n    var resultGrades = [];\n    if (start && end) {\n        var startGrade = parseInt(start);\n        var endGrade = parseInt(end);\n        while (startGrade <= endGrade) {\n            resultGrades.push(startGrade);\n            startGrade++;\n        }\n    }\n    return resultGrades;\n}\nexport function computeCourseInstanceTags(tags, subjectCodes, schoolYears) {\n    var otherTags = (tags || []).filter(function (tag) {\n        return !tag.startsWith(\"course:\") &&\n            !tag.startsWith(\"sub:\") &&\n            !tag.startsWith(\"grade:\");\n    });\n    var subjectTags = subjectCodes.map(function (sub) { return \"sub:\" + sub; });\n    var courseTags = flatten(subjectCodes.map(function (sub) {\n        return schoolYears.map(function (schoolYear) { return \"course:\" + sub + \"|\" + schoolYear; });\n    }));\n    var grades = flatten(schoolYears.map(function (schoolYear) { return computeGradesFromGradeSpan(schoolYear); }));\n    var gradeTags = tags.includes(\"active\")\n        ? grades.map(function (grade) { return \"grade:\" + grade; })\n        : [];\n    return otherTags\n        .concat(subjectTags)\n        .concat(courseTags)\n        .concat(gradeTags);\n}\nexport function computeTagsFromSchoolYears(tags, schoolYears) {\n    //schoolYears = schoolYears.map(afterColon);\n    var subjectCodes = getSubjectCodes(tags);\n    return computeCourseInstanceTags(tags, subjectCodes, schoolYears);\n}\nexport function computeTagsFromSubjectCodes(tags, subjectCodes) {\n    //subjectCodes = subjectCodes.map(afterColon);\n    var schoolYears = getSchoolYears(tags);\n    return computeCourseInstanceTags(tags, subjectCodes, schoolYears);\n}\nexport function computeTagsFromActiveState(tags, activeState) {\n    var subjectCodes = getSubjectCodes(tags);\n    var schoolYears = getSchoolYears(tags);\n    var tagsWithoutActiveState = tags.filter(function (tag) { return tag !== \"active\"; });\n    return computeCourseInstanceTags(tagsWithoutActiveState.concat(activeState ? \"active\" : []), subjectCodes, schoolYears);\n}\nfunction afterColon(str) {\n    var pColon = str.indexOf(\":\");\n    return pColon >= 0 ? str.substr(pColon + 1) : str;\n}\n","export function getCourseCodesFromTags(tags) {\n    return (tags || [])\n        .filter(function (tag) { return tag.startsWith(\"course:\"); })\n        .map(function (courseTag) { return courseTag.substr(\"course:\".length); });\n}\n","import * as tslib_1 from \"tslib\";\nimport { Emitter } from 'kedbackend/observable';\nimport { db } from '../../../globals/db';\nimport { getOrderedDocs } from './ordered-requirements';\nexport function getStandardCoursesWithOrderedRequirements(courseCodes) {\n    var _a;\n    var courseCodeTags = courseCodes.map(function (code) { return code.startsWith('course:') ? code : \"course:\" + code; });\n    if (courseCodeTags.length === 0)\n        return new Emitter([]);\n    return (_a = db.courses.include(\"abilities\", \"centralContent\", \"knowledgeRequirements\")).tags.apply(_a, tslib_1.__spread(courseCodeTags)).filter(function (course) { return course.isTemplate; }) // BUGBUG: In KG, we would need this filter, not KS. Need another authorized way of getting the standard course only!\n        .map(function (course) { return (tslib_1.__assign({}, course, { abilities: getOrderedDocs(course.abilities, course.abilitiesOrder), centralContent: getOrderedDocs(course.centralContent, course.centralContentOrder), knowledgeRequirements: getOrderedDocs(course.knowledgeRequirements, course.knowledgeRequirementsOrder) })); }).toValue();\n}\n","import { db, globalId } from '../../../globals/db';\nexport function listCourseInstances() {\n    return db.courseInstances.hasEdgesFrom([globalId]);\n}\n","import * as tslib_1 from \"tslib\";\nimport { Emitter } from 'kedbackend/observable';\nimport { db } from '../../../globals/db';\nimport { flatten } from '../../../utils/utils';\nexport function getOrderedDocs(docs, order, _a) {\n    var appendLeftovers = (_a === void 0 ? { appendLeftovers: false } : _a).appendLeftovers;\n    // Mark doc IDs that where present in given 'order' array.\n    // Will be used to find left-overs that were not present in the 'order' array.\n    var markedDocs = {};\n    if (!docs || !order) {\n        // Special case: no docs or no order. Don't fail. Just return docs as is.\n        return docs;\n    }\n    // Map given 'order' array to corresponding docs. Also mark in markedDocs.\n    var result = (docs && order ?\n        order.map(function (id) {\n            markedDocs[id] = true;\n            return docs.find(function (doc) { return doc.id === id; });\n        }).filter(function (doc) { return !!doc; }) :\n        docs);\n    if (appendLeftovers) {\n        // If any leftovers are there, concat them at the end:\n        var leftOvers = docs.filter(function (doc) { return !markedDocs[doc.id]; });\n        return result.concat(leftOvers);\n    }\n    else {\n        return result;\n    }\n}\nexport function resolveRequirementOrder(obj, orderDefiner) {\n    var _a;\n    var orderDefiningDocObservable;\n    if (orderDefiner) {\n        // User provided the orderDefining doc (use case is when obj is a Course or Subject, which contains its order by itself. User then provides the Course or Subject in both args)\n        orderDefiningDocObservable = new Emitter([orderDefiner]);\n    }\n    else {\n        var courseCodes = obj.tags.filter(function (tag) { return tag.startsWith(\"course:\"); });\n        if (courseCodes.length === 0) {\n            return new Emitter(obj); // No course tags. Not possible to resolve order.\n        }\n        orderDefiningDocObservable = (_a = db.courses).tags.apply(_a, tslib_1.__spread(courseCodes)).cacheOptimized().toValue();\n    }\n    return orderDefiningDocObservable.map(function (orderHolders) {\n        var abilitiesOrder = flatten(orderHolders.map(function (orderHolder) { return orderHolder.abilitiesOrder || []; }));\n        var ccOrder = flatten(orderHolders.map(function (orderHolder) { return orderHolder.centralContentOrder || []; }));\n        var krOrder = flatten(orderHolders.map(function (orderHolder) { return orderHolder.knowledgeRequirementsOrder || []; }));\n        var objClone = Object.assign({}, obj);\n        if (objClone.abilities)\n            objClone.abilities = getOrderedDocs(obj.abilities, abilitiesOrder);\n        if (objClone.centralContent)\n            objClone.centralContent = getOrderedDocs(obj.centralContent, ccOrder);\n        if (objClone.knowledgeRequirements)\n            objClone.knowledgeRequirements = getOrderedDocs(obj.knowledgeRequirements, krOrder);\n        return objClone;\n    });\n}\n","import * as tslib_1 from \"tslib\";\nimport { db } from '../../../globals/db';\nimport env from '../../../globals/KED.env';\nexport function publishCourse(_a) {\n    var school = _a.school, draftRepo = _a.draftRepo, course = _a.course;\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var destinationRepo, schoolBranchId;\n        return tslib_1.__generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    if (!(school === \"standard\")) return [3 /*break*/, 1];\n                    // Editing Standard School should merge to reality.\n                    draftRepo.merge();\n                    destinationRepo = db;\n                    return [3 /*break*/, 3];\n                case 1: return [4 /*yield*/, db.schools.name(school).single().map(function (school) { return school.officialBranchId; }).load()];\n                case 2:\n                    schoolBranchId = _b.sent();\n                    draftRepo.merge(schoolBranchId);\n                    destinationRepo = db.branch(schoolBranchId);\n                    _b.label = 3;\n                case 3:\n                    destinationRepo.courseInstances.update(course, {\n                        modifiedDate: Date.now(),\n                        modifiedBy: {\n                            name: env.currentUser.displayName,\n                            url: \"mailto:\" + env.currentUser.mail\n                        }\n                    });\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n","import * as tslib_1 from \"tslib\";\nimport { flatten, L } from \"../../../utils/utils\";\nimport { getEmailFromDocAccess } from '../utils';\nexport function getUncoveredKnowledgeRequirements(course) {\n    var uncoveredRequirements = course.knowledgeRequirements.reduce(function (result, item) {\n        result[item.id] = item;\n        return result;\n    }, {});\n    course.tasks.forEach(function (task) {\n        task.knowledgeRequirements.forEach(function (kr) {\n            delete uncoveredRequirements[kr.id];\n        });\n    });\n    return Object.keys(uncoveredRequirements).map(function (id) { return uncoveredRequirements[id]; });\n}\nexport function getIdsNotCoveredByTasks(course) {\n    return getIdsNotCoveredByReqReferencingDocs([course], course.tasks);\n}\nexport function getIdsNotCoveredByReqReferencingDocs(templates, docsBeingChecked) {\n    var uncoveredIds = {};\n    // 1. Mark the ids of all knowledge requirements, abilities and central content for this course:\n    templates.forEach(function (course) {\n        course.knowledgeRequirements.forEach(function (r) {\n            uncoveredIds[r.id] = true;\n        });\n        course.abilities.forEach(function (a) {\n            uncoveredIds[a.id] = true;\n        });\n        course.centralContent.forEach(function (cc) {\n            uncoveredIds[cc.id] = true;\n        });\n    });\n    // 2. List all tasks and unmark all ids that they refer to\n    docsBeingChecked.forEach(function (doc) {\n        doc.knowledgeRequirements.forEach(function (kr) {\n            delete uncoveredIds[kr.id];\n        });\n        doc.abilities.forEach(function (a) {\n            delete uncoveredIds[a.id];\n        });\n        doc.centralContent.forEach(function (cc) {\n            delete uncoveredIds[cc.id];\n        });\n    });\n    return uncoveredIds;\n}\nexport function sanityCheck(course) {\n    function hasDuplicateTasks(course) {\n        var taskIds = {};\n        return flatten(course.modules.map(function (module) { return module.taskIds.map(function (taskId) {\n            if (taskIds[taskId]) {\n                var task = course.tasks.find(function (t) { return t.id === taskId; });\n                return L(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"Samma uppgift f\\u00F6rekommer flera g\\u00E5nger: \\\"\", \"\\\"\"], [\"Samma uppgift f\\u00F6rekommer flera g\\u00E5nger: \\\"\", \"\\\"\"])), task.name);\n            }\n            taskIds[taskId] = true;\n        }).filter(function (x) { return x; }); }));\n    }\n    function tasksWithSameUrl(course) {\n        var taskUrls = {};\n        return course.tasks.map(function (task) {\n            if (task.url) {\n                if (taskUrls[task.url]) {\n                    return L(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"Tv\\u00E5 uppgifter pekar p\\u00E5 samma URL: \\\"\", \"\\\" samt \\\"\", \"\\\"\"], [\"Tv\\u00E5 uppgifter pekar p\\u00E5 samma URL: \\\"\", \"\\\" samt \\\"\", \"\\\"\"])), taskUrls[task.url].name, task.name);\n                }\n                taskUrls[task.url] = task;\n            }\n        }).filter(function (x) { return x; });\n    }\n    function hasEmptyModuleNames(course) {\n        return course.modules.some(function (module) { return module.name === \"\"; }) && L(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"Det finns minst en modul utan angivet namn\"], [\"Det finns minst en modul utan angivet namn\"])));\n    }\n    function hasDuplicateModuleNames(course) {\n        var moduleNames = {};\n        return course.modules.map(function (module) {\n            if (module.name && moduleNames[module.name]) {\n                return L(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject([\"Modulen med namn \", \" f\\u00F6rekommer flera g\\u00E5nger\"], [\"Modulen med namn \", \" f\\u00F6rekommer flera g\\u00E5nger\"])), module.name);\n            }\n            if (module.name)\n                moduleNames[module.name] = true;\n        });\n    }\n    var checks = flatten([\n        hasDuplicateTasks(course),\n        tasksWithSameUrl(course),\n        hasEmptyModuleNames(course),\n        hasDuplicateModuleNames(course)\n    ]);\n    return checks.filter(function (result) { return result; });\n}\nexport function getTasksPerId(course) {\n    var result = {};\n    function add(id, task) {\n        var list = result[id] || (result[id] = []);\n        list.push(task);\n    }\n    course.tasks.forEach(function (task) {\n        task.abilities.forEach(function (a) { return add(a.id, task); });\n        task.centralContent.forEach(function (c) { return add(c.id, task); });\n        task.futureAbilities.forEach(function (fa) { return add(fa, task); });\n    });\n    return result;\n}\n/** Returns an access list for a course in a backward compatible way */\nexport function getSoftAccessList(course) {\n    var responsibleTeachers = course.responsibleTeachers;\n    var result = responsibleTeachers.map(function (da) { return ({\n        name: da.name,\n        email: getEmailFromDocAccess(da),\n        access: da.access || 'edit'\n    }); });\n    return result;\n}\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4;\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { allowCopy } from \"../utils\";\nimport { showError, L } from \"../../../utils/utils\";\nimport { createUUID } from \"kedbackend/client\";\nimport env from '../../../globals/KED.env';\nvar AdminMenuItems = [\n    { name: \"schools\", text: L(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"Skolor\"], [\"Skolor\"]))), route: \"/schools\" },\n    { name: \"subjects\", text: L(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\u00C4mnen\"], [\"\\u00C4mnen\"]))), route: \"/subjects\" },\n];\nvar NonAdminMenuItems = [\n    { name: \"courseBuilder\", text: L(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"Kursbyggaren\"], [\"Kursbyggaren\"]))), route: \"/courses/new\" },\n    { name: \"studentPage\", text: L(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject([\"Elevsida\"], [\"Elevsida\"]))), route: \"\" },\n    { name: \"feedback\", text: React.createElement(\"span\", null,\n            React.createElement(\"i\", { className: \"fa fa-commenting-o\", \"aria-hidden\": \"true\" }),\n            \" Feedback\"), route: \"https://kg.kunskapsporten.se/kursbyggaren/\" }\n];\nfunction onDropImage(ev, host, course, origCourse) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var files, url, items, file, form, res, _loop_1, i;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    ev.stopPropagation();\n                    ev.preventDefault();\n                    files = ev.dataTransfer.files;\n                    url = null;\n                    items = Array.from(ev.dataTransfer.items);\n                    if (!(files.length > 0)) return [3 /*break*/, 3];\n                    file = files[0];\n                    if (file.size > 2 * 1024 * 1024) {\n                        showError(L(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject([\"Kan inte ladda upp bilder st\\u00F6rre \\u00E4n 2 MB\"], [\"Kan inte ladda upp bilder st\\u00F6rre \\u00E4n 2 MB\"]))));\n                        return [2 /*return*/];\n                    }\n                    form = new FormData();\n                    form.append(\"files\", file);\n                    return [4 /*yield*/, env.kedBackendClient.http.fetch('web-upload', 'put', {}, {}, {\n                            body: form\n                        })];\n                case 1:\n                    res = _a.sent();\n                    if (res.status !== 200) {\n                        showError(L(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject([\"Kunde inte ladda upp filen till Google Storage\"], [\"Kunde inte ladda upp filen till Google Storage\"]))));\n                        return [2 /*return*/];\n                    }\n                    return [4 /*yield*/, res.text()];\n                case 2:\n                    url = _a.sent();\n                    return [3 /*break*/, 7];\n                case 3:\n                    _loop_1 = function (i) {\n                        var item;\n                        return tslib_1.__generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    item = items[i];\n                                    if (!item.type.match('^text/uri-list')) return [3 /*break*/, 2];\n                                    return [4 /*yield*/, new Promise(function (resolve) { return item.getAsString(resolve); })];\n                                case 1:\n                                    // URI\n                                    url = _a.sent();\n                                    _a.label = 2;\n                                case 2: return [2 /*return*/];\n                            }\n                        });\n                    };\n                    i = 0;\n                    _a.label = 4;\n                case 4:\n                    if (!(i < items.length)) return [3 /*break*/, 7];\n                    return [5 /*yield**/, _loop_1(i)];\n                case 5:\n                    _a.sent();\n                    _a.label = 6;\n                case 6:\n                    ++i;\n                    return [3 /*break*/, 4];\n                case 7:\n                    if (url == null) {\n                        showError(L(templateObject_7 || (templateObject_7 = tslib_1.__makeTemplateObject([\"Kunde inte hitta n\\u00E5gon bild i inneh\\u00E5llet\"], [\"Kunde inte hitta n\\u00E5gon bild i inneh\\u00E5llet\"]))));\n                        return [2 /*return*/];\n                    }\n                    setCourseImage(course, origCourse, host, url);\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nexport function setCourseImage(course, origCourse, host, url) {\n    var imageId = createUUID();\n    host.update({\n        imageId: { $set: imageId },\n        images: {\n            $set: [{\n                    id: imageId,\n                    url: url,\n                    acl: [\n                        \"role:USER:R\",\n                        \"schoolRole:\" + env.currentUser.school + \"/EMPLOYEE:S\"\n                    ],\n                    $meta: 'add'\n                }]\n        }\n    });\n}\n/* This version had the bug that old images were not replaced.\nOne course at Uppsala contained 12 images.\n\n\nexport function setCourseImageOld(\n  course: Course,\n  origCourse: Course,\n  host: ICourseEditorHost,\n  url: string)\n{\n  if (!origCourse || !origCourse.imageId) {\n    const imageId = createUUID();\n    host.update({\n      imageId: { $set: imageId },\n      images: {\n        $push: [{\n          id: imageId,\n          url,\n          acl: course.isTemplate ? [\"role:USER:R\"] : [\"role:USER:R\", `schoolRole:${env.currentUser.school}/EMPLOYEE:S`],\n          $meta: 'add'\n        }]\n      }\n    });\n  } else {\n    // Update existing image:\n    const imgIdx = course.images.findIndex(img => img.id === course.imageId);\n    if (imgIdx >= 0) {\n      const imageEntity = course.images[imgIdx];\n      if (course.isTemplate) {\n        // Templates: Update the template image content:\n        host.update({\n          images: {\n            $splice: [[imgIdx, 1, {\n              ...imageEntity,\n              url,\n              $meta: 'update'\n            }]]\n          }\n        })\n      } else {\n        // Real courses: Replace with a new image\n        const imageId = createUUID();\n        host.update({\n          imageId: { $set: imageId },\n          images: {\n            $splice: [[imgIdx, 1, {\n              id: imageId,\n              url,\n              acl: [\n                `role:USER:R`,\n                `schoolRole:${env.currentUser.school}/EMPLOYEE:S`\n              ],\n              $meta: 'add'\n            }]]\n          }\n        })\n      }\n    } else {\n      showError(L`Kunde inte uppdatera bilden.`);\n    }\n  }\n}\n*/\nexport var CourseBanner = function (props) {\n    var title = props.title, isTemplate = props.isTemplate, host = props.host, course = props.course, origCourse = props.origCourse, backgroundImage = props.backgroundImage, activePage = props.activePage;\n    var isAdmin = env.currentUser.roles.some(function (role) { return role === \"ADMIN\"; });\n    var menuItems = NonAdminMenuItems;\n    if (isAdmin)\n        menuItems = AdminMenuItems.concat(menuItems);\n    return React.createElement(\"div\", { className: \"sv-row sv-layout sv-skip-spacer\" },\n        React.createElement(\"div\", { className: \"sv-layout sv-skip-spacer sv-column-12\" },\n            React.createElement(\"div\", { className: \"sv-script-portlet sv-portlet sv-skip-spacer\" },\n                backgroundImage && React.createElement(\"style\", null, \"\\n        .pageHeader {\\n          background-image: url('\" + backgroundImage + \"') !important;\\n        }\\n      \"),\n                React.createElement(\"div\", { className: \"pageHeader\", onDragOver: course && allowCopy, onDrop: course && (function (ev) { return onDropImage(ev, host, course, origCourse); }) },\n                    React.createElement(\"a\", null,\n                        React.createElement(\"h1\", null, title)),\n                    React.createElement(\"div\", { className: \"buttonsField\" },\n                        React.createElement(\"div\", { className: \"buttonsContainer\" },\n                            React.createElement(\"div\", { className: \"align-horizontal\" }),\n                            React.createElement(\"div\", { className: 'horizontalMenu' },\n                                React.createElement(\"ul\", null, menuItems.map(function (item) { return ({\n                                    item: item,\n                                    isActive: activePage === item.name,\n                                    callback: props.callbacks && props.callbacks[item.name],\n                                    givenRoute: (props.routes && props.routes[item.name]),\n                                    defaultRoute: item.route\n                                }); }).filter(function (x) { return x.callback || x.defaultRoute || x.givenRoute; }).map(function (_a) {\n                                    var item = _a.item, isActive = _a.isActive, callback = _a.callback, defaultRoute = _a.defaultRoute, givenRoute = _a.givenRoute;\n                                    return React.createElement(\"li\", { key: item.name, className: isActive ? \"activePage\" : \"\", onClick: callback }, callback ?\n                                        React.createElement(\"a\", null, item.text) :\n                                        defaultRoute || givenRoute ?\n                                            givenRoute || /^http[s]\\:\\/\\//i.test(defaultRoute) ?\n                                                React.createElement(\"a\", { href: givenRoute || defaultRoute }, item.text) :\n                                                React.createElement(Link, { to: defaultRoute }, item.text) :\n                                            React.createElement(\"a\", null, item.text));\n                                })))))))));\n};\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7;\n","import * as tslib_1 from \"tslib\";\nimport { flatten } from '../../utils/utils';\n//get sentences by requirement\nexport function getRequirmentSentences(requirement) {\n    return requirement.split(\".\").filter(function (e) { return e; });\n}\n//retrieve sentences\nexport function getSavedSentences(partialRequirments) {\n    return partialRequirments.map(function (obj) {\n        return obj.trim();\n    }) || [];\n}\n//check all requirements are marked\nexport function allRequirementSentecesMarked(requirementName, partialRequirements) {\n    var textSentences = getRequirmentSentences(requirementName);\n    return partialRequirements && partialRequirements.length === textSentences.length;\n    ;\n}\n//get the partial saved sentences for the default view\nexport function getPartialContentDefaultView(requirement, partialRequirments, alreadyCoveredPartialRequirments, skipNotMarked) {\n    var resultedHtml = requirement.name;\n    var textSentences = getRequirmentSentences(requirement.name);\n    var rowRequirments = partialRequirments && getSavedSentences(partialRequirments);\n    var allReqCoveredSentence = alreadyCoveredPartialRequirments && getCoveredSenteces(alreadyCoveredPartialRequirments, requirement.id);\n    var allReqSentencesMarked = allRequirementSentecesMarked(requirement.name, rowRequirments);\n    textSentences.forEach(function (sentence) {\n        //trimm current sentence\n        var trimmedSentence = sentence.trim();\n        var fullSentence = sentence + \".\";\n        if (rowRequirments && rowRequirments.includes(trimmedSentence) && !allReqSentencesMarked) {\n            resultedHtml = resultedHtml.replace(fullSentence, \"<span class=\" + \"markedGreen\" + \">\" + fullSentence + \"</span>\");\n        }\n        else {\n            var coveredSentece = allReqCoveredSentence && allReqCoveredSentence.includes(trimmedSentence);\n            if (coveredSentece) {\n                resultedHtml = resultedHtml.replace(fullSentence, \"<span>\" + fullSentence + \"</span>\");\n            }\n            else if (!allReqSentencesMarked && allReqCoveredSentence && allReqCoveredSentence.length > 0) {\n                resultedHtml = resultedHtml.replace(fullSentence, \"<span class=\" + \"markedRed\" + \">\" + fullSentence + \"</span>\");\n            }\n        }\n    });\n    return resultedHtml;\n}\n//check the current requirement is already covered\nexport function isPartialCoveredRequirment(requirement, alreadyCoveredPartialRequirments) {\n    var textSentences = getRequirmentSentences(requirement.name);\n    var result = false;\n    for (var i = 0; i < textSentences.length; i++) {\n        var trimmedSentence = textSentences[i].trim();\n        var allCoveredSentenceReq = alreadyCoveredPartialRequirments && getCoveredSenteces(alreadyCoveredPartialRequirments, requirement.id);\n        var coveredSentece = allCoveredSentenceReq && allCoveredSentenceReq.includes(trimmedSentence);\n        if (coveredSentece) {\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n//compute the covered senteces excluding the current requirement\nexport function getCoveredSenteces(allReq, requirementId) {\n    var resultArray = [];\n    allReq.forEach(function (obj) {\n        var assignedReq = Object.assign([], Object.keys(obj).filter(function (reqId) { return reqId == requirementId; }).map(function (k) { return obj[k].map(function (elem) { return elem.trim(); }); }));\n        resultArray.push.apply(resultArray, tslib_1.__spread(assignedReq));\n    });\n    return flatten(resultArray);\n}\n//sort the selected sentences by the order of the appearance in the requirement\nexport function getSortedRequirments(textSentences, partialRequirments) {\n    var output = [];\n    var indexedSentences = textSentences.map(function (e, i) { return { ind: i, val: e }; });\n    output = indexedSentences.filter(function (s) { return partialRequirments.includes(s.val); });\n    return output ? output.sort(function (x, y) { return x.ind > y.ind ? 1 : -1; }).map(function (s) { return s.val; }) : [];\n}\nexport function getMigrationTitle(isMigrated, markMode) {\n    return isMigrated ?\n        markMode ?\n            \"Skolverket har uppdaterat textens formulering. Du kan granska \\u00E4ndringen genom att f\\u00E4lla ut varningsboxen till h\\u00F6ger, med titel \\\"Uppdaterade formuleringar fr\\u00E5n Skolverket\\\"\" :\n            \"Skolverket har uppdaterat textens formulering, men detta har \\u00E4nnu inte granskats av uppgiftens redigeringsbeh\\u00F6rige\" :\n        undefined;\n}\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { CourseBanner } from \"../courses/course-banner\";\nimport { showError, L } from \"../../../utils/utils\";\nimport env from '../../../globals/KED.env';\nimport { createUUID, DocumentAccess, BatchRunner } from \"kedbackend/client\";\nimport { Link } from 'react-router-dom';\nexport var EditSchool = function (props) { return React.createElement(\"div\", { style: { outline: 0 } },\n    React.createElement(CourseBanner, { title: \"Skolor\", activePage: \"schools\", callbacks: { schools: function () { return location.hash = \"#/schools\"; } }, routes: { feedback: props.feedbackUrl } }),\n    React.createElement(EditSchoolNoBanner, tslib_1.__assign({}, props))); };\nvar EditSchoolNoBanner = /** @class */ (function (_super) {\n    tslib_1.__extends(EditSchoolNoBanner, _super);\n    function EditSchoolNoBanner(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = null;\n        return _this;\n    }\n    EditSchoolNoBanner.prototype.componentDidMount = function () {\n        this.load().catch(function (err) { return showError(err); });\n    };\n    EditSchoolNoBanner.prototype.load = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var id, school;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.props.id) return [3 /*break*/, 2];\n                        id = this.props.id;\n                        return [4 /*yield*/, env.kedBackendClient.get(\"schools\", id)];\n                    case 1:\n                        school = _a.sent();\n                        this.origSchool = tslib_1.__assign({}, school);\n                        this.setState(tslib_1.__assign({}, school));\n                        return [3 /*break*/, 3];\n                    case 2:\n                        // No id, create new instead.\n                        this.setState({\n                            id: createUUID(),\n                            officialBranchId: createUUID(),\n                            isGymnasium: this.props.type === 'gymnasium',\n                            isPrimarySchool: this.props.type === 'primary'\n                        });\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    EditSchoolNoBanner.prototype.save = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var r, school;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        r = new BatchRunner();\n                        school = tslib_1.__assign({}, this.state, { tags: (this.state.tags || [])\n                                .filter(function (tag) { return [\"primary\", \"gymnasium\"].indexOf(tag) < 0; }) });\n                        if (school.isPrimarySchool)\n                            school.tags.push(\"primary\");\n                        if (school.isGymnasium)\n                            school.tags.push(\"gymnasium\");\n                        if (!(school.isGymnasium || school.isPrimarySchool)) {\n                            throw new Error(L(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"Skolan m\\u00E5ste antingen vara gymnasium eller grundskola\"], [\"Skolan m\\u00E5ste antingen vara gymnasium eller grundskola\"]))));\n                        }\n                        if (!this.origSchool) {\n                            school.acl = [\"role:USER:R\"];\n                            school.acl.push(new DocumentAccess(\"schoolRole\", school.name + \"/EMPLOYEE\", \"W\").toString());\n                            r.add(\"schools\", school);\n                            this.addSchoolBranch(school, r);\n                        }\n                        else if (this.origSchool.name !== this.state.name) {\n                            throw new Error(\"Skolans namn får inte ändras. Kontakta Vemendo AB.\");\n                        }\n                        else {\n                            if (!school.officialBranchId) {\n                                school.officialBranchId = createUUID();\n                                this.addSchoolBranch(school, r);\n                            }\n                            r.put(\"schools\", school);\n                        }\n                        return [4 /*yield*/, env.kedBackendClient.batch(r.mutationRequests)];\n                    case 1:\n                        _a.sent();\n                        location.hash = \"#/schools\";\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    EditSchoolNoBanner.prototype.addSchoolBranch = function (school, r) {\n        var branch = {\n            id: school.officialBranchId,\n            name: school.name,\n            schoolId: school.id,\n            acl: [\n                \"role:USER:R\",\n                new DocumentAccess(\"schoolRole\", school.name + \"/EMPLOYEE\", \"W\").toString()\n            ]\n        };\n        r.add(\"branches\", branch);\n    };\n    EditSchoolNoBanner.prototype.deleteSchool = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var schoolBranch, br_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(prompt(L(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\u00C4r du s\\u00E4ker p\\u00E5 att ta bort skolan \\\"\", \"\\\"? Skriv skolans exakta namn f\\u00F6r att bekr\\u00E4fta\"], [\"\\u00C4r du s\\u00E4ker p\\u00E5 att ta bort skolan \\\"\", \"\\\"? Skriv skolans exakta namn f\\u00F6r att bekr\\u00E4fta\"])), this.state.name)) === this.state.name)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, env.kedBackendClient.list(\"branches\", {\n                                ids: [this.state.officialBranchId],\n                                include: \"approvedChildren\",\n                                flags: [\"includeIdsOnly\"]\n                            })];\n                    case 1:\n                        schoolBranch = _a.sent();\n                        br_1 = new BatchRunner();\n                        br_1.delete(\"schools\", this.state.id);\n                        schoolBranch[0].approvedChildren.forEach(function (_a) {\n                            var id = _a.id;\n                            br_1.delete(\"branches\", id);\n                        });\n                        br_1.delete(\"branches\", this.state.officialBranchId);\n                        return [4 /*yield*/, env.kedBackendClient.batch(br_1.mutationRequests)];\n                    case 2:\n                        _a.sent();\n                        location.hash = \"#/schools\";\n                        return [3 /*break*/, 4];\n                    case 3:\n                        alert(\"Skolan togs inte bort eftersom det namn du angav inte stämmer.\");\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    EditSchoolNoBanner.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, title = _a.title, id = _a.id;\n        var editExisting = !!id;\n        var school = this.state;\n        var origSchool = this.origSchool;\n        var isAdmin = env.currentUser.roles.some(function (role) { return role === \"ADMIN\"; });\n        return React.createElement(\"div\", { className: \"sv-row sv-layout\" },\n            React.createElement(\"div\", { className: \"pagecontent sv-layout sv-spacer-20pxvt sv-skip-spacer\" },\n                React.createElement(\"h2\", null, title),\n                React.createElement(\"hr\", null),\n                React.createElement(\"div\", { className: \"align-horizontal\" },\n                    React.createElement(\"div\", { className: \"horizontalItem top\" }, \"Namn:\"),\n                    React.createElement(\"div\", { className: \"horizontalItem top\" },\n                        React.createElement(\"input\", { type: \"text\", autoFocus: !school || !school.name, disabled: !isAdmin || editExisting, tabIndex: 1, size: 50, value: school ? school.name : \"\", onChange: function (ev) { return _this.setState({ name: ev.target.value }); } })),\n                    React.createElement(\"div\", { className: \"horizontalItem top spaced\" })),\n                React.createElement(\"div\", { className: \"align-horizontal\" },\n                    React.createElement(\"div\", { className: \"horizontalItem top\" }, \"Visningsnamn:\"),\n                    React.createElement(\"div\", { className: \"horizontalItem top\" },\n                        React.createElement(\"input\", { type: \"text\", autoFocus: school && !school.displayName, disabled: !isAdmin, tabIndex: 1, size: 50, value: school ? school.displayName : \"\", onChange: function (ev) { return _this.setState({ displayName: ev.target.value }); } })),\n                    React.createElement(\"div\", { className: \"horizontalItem top spaced\" })),\n                school && school.isGymnasium ? React.createElement(\"div\", { className: \"align-horizontal\" },\n                    React.createElement(\"div\", { className: \"horizontalItem top\" }, \"EDS namn (gymnasium):\"),\n                    React.createElement(\"div\", { className: \"horizontalItem top\" },\n                        React.createElement(\"input\", { type: \"text\", disabled: !isAdmin, tabIndex: 1, size: 50, value: school ? school.edsSchoolNameGymn : \"\", onChange: function (ev) { return _this.setState({ edsSchoolNameGymn: ev.target.value }); } })),\n                    React.createElement(\"div\", { className: \"horizontalItem top spaced\" })) : null,\n                school && school.isPrimarySchool ? React.createElement(\"div\", { className: \"align-horizontal\" },\n                    React.createElement(\"div\", { className: \"horizontalItem top\" }, \"EDS namn (grundskola):\"),\n                    React.createElement(\"div\", { className: \"horizontalItem top\" },\n                        React.createElement(\"input\", { type: \"text\", disabled: !isAdmin, tabIndex: 1, size: 50, value: school ? school.edsSchoolNamePrim : \"\", onChange: function (ev) { return _this.setState({ edsSchoolNamePrim: ev.target.value }); } })),\n                    React.createElement(\"div\", { className: \"horizontalItem top spaced\" })) : null,\n                React.createElement(\"div\", { className: \"align-horizontal\" },\n                    React.createElement(\"div\", { className: \"horizontalItem top\" }, \"Typ:\"),\n                    React.createElement(\"div\", { className: \"horizontalItem top\" },\n                        React.createElement(\"input\", { type: \"checkbox\", name: \"schoolTypePrimary\", disabled: !isAdmin, checked: school && school.isPrimarySchool, tabIndex: 1, value: \"primary\", onChange: function (ev) { return _this.setState({ isPrimarySchool: ev.target.checked }); } }),\n                        \"\\u00A0Grundskola\"),\n                    React.createElement(\"div\", { className: \"horizontalItem top spaced\" })),\n                React.createElement(\"div\", { className: \"align-horizontal\" },\n                    React.createElement(\"div\", { className: \"horizontalItem top\" }),\n                    React.createElement(\"div\", { className: \"horizontalItem top\" },\n                        React.createElement(\"input\", { type: \"checkbox\", name: \"schoolTypeGymnasium\", disabled: !isAdmin, checked: school && school.isGymnasium, tabIndex: 1, value: \"gymnasium\", onChange: function (ev) { return _this.setState({ isGymnasium: ev.target.checked }); } }),\n                        \"\\u00A0Gymnasium\"),\n                    React.createElement(\"div\", { className: \"horizontalItem top spaced\" })),\n                React.createElement(\"br\", null),\n                isAdmin && editExisting && React.createElement(\"div\", { tabIndex: 2, className: \"btn btn-warning btn-large pull-right\", onClick: function () {\n                        return _this.deleteSchool().catch(showError);\n                    } }, \"Ta bort skola\"),\n                React.createElement(\"div\", { className: \"pull-right\" }, \"\\u00A0\"),\n                React.createElement(Link, { className: \"btn btn-warning btn-large pull-right\", to: \"/schools\" }, \"Avbryt\"),\n                isAdmin && React.createElement(\"a\", { tabIndex: 1, className: \"btn btn-large\", onClick: function () {\n                        if (origSchool && origSchool.name !== school.name) {\n                            if (!confirm(L(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"\\u00C4r du s\\u00E4ker p\\u00E5 att du vill d\\u00F6pa om skolan? Detta p\\u00E5verkar portalens funktion f\\u00F6r l\\u00E4rare och elever som tillh\\u00F6r skolan. Namnet m\\u00E5ste st\\u00E4mma exakt \\u00F6verens med namngivningen av skolan p\\u00E5 anv\\u00E4ndarobjekten.\\n\\nDet som h\\u00E4nder annars \\u00E4r att elever och l\\u00E4rare p\\u00E5 skolan inte l\\u00E4ngre hittar n\\u00E5gra kurser.\\n\\nBlir det fel kan du dock alltid bara d\\u00F6pa tillbaka skolans namn.\"], [\"\\u00C4r du s\\u00E4ker p\\u00E5 att du vill d\\u00F6pa om skolan? Detta p\\u00E5verkar portalens funktion f\\u00F6r l\\u00E4rare och elever som tillh\\u00F6r skolan. Namnet m\\u00E5ste st\\u00E4mma exakt \\u00F6verens med namngivningen av skolan p\\u00E5 anv\\u00E4ndarobjekten.\\n\\nDet som h\\u00E4nder annars \\u00E4r att elever och l\\u00E4rare p\\u00E5 skolan inte l\\u00E4ngre hittar n\\u00E5gra kurser.\\n\\nBlir det fel kan du dock alltid bara d\\u00F6pa tillbaka skolans namn.\"]))))) {\n                                return;\n                            }\n                        }\n                        _this.save().catch(showError);\n                    } }, \"Spara\")));\n    };\n    return EditSchoolNoBanner;\n}(React.Component));\nexport { EditSchoolNoBanner };\nvar templateObject_1, templateObject_2, templateObject_3;\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { L } from \"../../../utils/utils\";\nimport env from '../../../globals/KED.env';\nimport { Link } from 'react-router-dom';\nimport { actAs } from \"../../../access-control\";\nimport { Spinner } from \"../sub-components/spinner\";\nexport var EditableSchoolList = function (props) {\n    var schools = props.schools, viewCourseUrl = props.viewCourseUrl;\n    var isAdmin = env.currentUser.roles.some(function (role) { return role === \"ADMIN\"; });\n    return React.createElement(\"div\", { className: \"editable-school-list\" },\n        React.createElement(\"div\", null, schools ? React.createElement(\"table\", null,\n            React.createElement(\"tbody\", null, schools.map(function (school) {\n                return React.createElement(\"tr\", { className: \"align-horizontal\", key: school.id },\n                    React.createElement(\"td\", null,\n                        React.createElement(Link, { className: \"editItem\", to: \"/schools/\" + school.id + \"/edit\" })),\n                    React.createElement(\"td\", null,\n                        React.createElement(\"p\", null, school.name)),\n                    React.createElement(\"td\", null,\n                        React.createElement(\"p\", null,\n                            React.createElement(\"a\", { style: { cursor: 'pointer' }, onClick: function () { return actAs({ role: \"EMPLOYEE\", school: school.name }); } }, \"Agera som l\\u00E4rare p\\u00E5 denna skola\"))),\n                    React.createElement(\"td\", null,\n                        React.createElement(\"p\", null,\n                            React.createElement(\"a\", { style: { cursor: 'pointer' }, onClick: function () { return actAs({ role: \"STUDENT\", school: school.name, url: viewCourseUrl }); } }, \"Agera som elev p\\u00E5 denna skola\"))));\n            }))) : React.createElement(\"p\", null,\n            React.createElement(Spinner, null),\n            \"V.g. v\\u00E4nta medan skolor laddas\")),\n        React.createElement(\"br\", null),\n        schools && isAdmin && React.createElement(Link, { to: \"/schools/new/\" + props.type, className: \"btn\" }, props.type == 'gymnasium' ? L(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"L\\u00E4gg till gymnasieskola\"], [\"L\\u00E4gg till gymnasieskola\"]))) :\n            props.type == 'primary' ? L(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"L\\u00E4gg till grundskola\"], [\"L\\u00E4gg till grundskola\"]))) : L(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"L\\u00E4gg till skola\"], [\"L\\u00E4gg till skola\"])))));\n};\nvar templateObject_1, templateObject_2, templateObject_3;\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { CourseBanner } from \"../courses/course-banner\";\nimport env from '../../../globals/KED.env';\nimport { EditableSchoolList } from './editable-school-list';\nimport { showError, compareProp } from \"../../../utils/utils\";\nimport { Spinner } from '../sub-components/spinner';\nexport var Schools = function (props) { return React.createElement(\"div\", { style: { outline: 0 } },\n    React.createElement(CourseBanner, { title: \"Skolor\", activePage: \"schools\", routes: { feedback: props.feedbackUrl } }),\n    React.createElement(SchoolsWithoutBanner, { viewCourseUrl: props.viewCourseUrl })); };\nvar SchoolsWithoutBanner = /** @class */ (function (_super) {\n    tslib_1.__extends(SchoolsWithoutBanner, _super);\n    function SchoolsWithoutBanner(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            schools: null\n        };\n        return _this;\n    }\n    SchoolsWithoutBanner.prototype.componentDidMount = function () {\n        this.load().catch(function (err) { return showError(err.message || err); });\n    };\n    SchoolsWithoutBanner.prototype.load = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var schools;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, env.kedBackendClient.list(\"schools\")];\n                    case 1:\n                        schools = _a.sent();\n                        this.setState({ schools: schools });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SchoolsWithoutBanner.prototype.render = function () {\n        var schools = this.state.schools;\n        schools && schools.sort(compareProp(\"name\"));\n        return React.createElement(\"div\", { className: \"sv-row sv-layout\" },\n            React.createElement(\"div\", { className: \"pagecontent sv-layout sv-spacer-20pxvt sv-skip-spacer\" }, schools ? React.createElement(React.Fragment, null,\n                React.createElement(\"div\", null,\n                    React.createElement(\"h2\", null, \"Gymnasieskolor\"),\n                    React.createElement(EditableSchoolList, { schools: schools.filter(function (school) { return school.isGymnasium; }), viewCourseUrl: this.props.viewCourseUrl, type: \"gymnasium\" })),\n                React.createElement(\"div\", null,\n                    React.createElement(\"h2\", null, \"Grundskolor\"),\n                    React.createElement(EditableSchoolList, { schools: schools.filter(function (school) { return school.isPrimarySchool; }), viewCourseUrl: this.props.viewCourseUrl, type: \"primary\" }))) : React.createElement(Spinner, null)));\n    };\n    return SchoolsWithoutBanner;\n}(React.Component));\nexport { SchoolsWithoutBanner };\n","import * as React from 'react';\nexport var EllipsisLoader = function () {\n    return React.createElement(\"img\", { style: { border: 0, margin: 0, padding: 0 }, className: \"ellipsis-loader\" });\n};\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { L } from '../../../utils/utils';\nimport { getPartialContentDefaultView, getRequirmentSentences, getCoveredSenteces, getSavedSentences, isPartialCoveredRequirment, getMigrationTitle, getSortedRequirments, allRequirementSentecesMarked } from '../knowledge-matrix-partial-utils';\nvar KnowledgeMatrix = /** @class */ (function (_super) {\n    tslib_1.__extends(KnowledgeMatrix, _super);\n    function KnowledgeMatrix(props) {\n        return _super.call(this, props) || this;\n    }\n    KnowledgeMatrix.prototype.getKnowledgeSentencesContent = function (requirement, partialRequirments, index, markedOk, isMigrated) {\n        var _this = this;\n        var _a = this.props, coveredPartialRequirments = _a.coveredPartialRequirments, markMode = _a.markMode;\n        //split text in senteces\n        var textSentences = getRequirmentSentences(requirement.name);\n        //get saved sencenteces for the current requirement\n        var rowRequirments = partialRequirments && getSavedSentences(partialRequirments);\n        //get all saved senteces excluding the current ones\n        var allCoveredSentenceReq = coveredPartialRequirments && getCoveredSenteces(coveredPartialRequirments, requirement.id);\n        return React.createElement(\"td\", { key: index, title: getMigrationTitle(isMigrated, markMode) }, textSentences.map(function (sentence, k) {\n            var trimmedSentence = sentence.trim();\n            var hasValue = rowRequirments && rowRequirments.includes(trimmedSentence) || markedOk && !rowRequirments;\n            var sentenceNotMarked = !allCoveredSentenceReq.includes(trimmedSentence);\n            return React.createElement(\"span\", { key: k, dangerouslySetInnerHTML: { __html: sentence ? sentence + \".\" : \"\" }, className: \"selectable\" + (hasValue ? \" markedGreen\" : (sentenceNotMarked ? \" markedRed\" : \"\")), onClick: function () {\n                    var updatedRequirments = partialRequirments ? Object.assign([], partialRequirments) : [];\n                    var shouldBeRemoved = rowRequirments && rowRequirments.includes(trimmedSentence);\n                    //check if no partial data saved, but the requirment is markedOk\n                    if (markedOk && (!rowRequirments || rowRequirments.length == 0)) {\n                        //save all excepting the one that should be removed\n                        updatedRequirments = textSentences.filter(function (x) { return x != sentence; });\n                        _this.props.onUpdatePartialKnowledge(requirement.id, getSortedRequirments(textSentences, updatedRequirments));\n                    }\n                    else {\n                        if (shouldBeRemoved) {\n                            updatedRequirments = partialRequirments.filter(function (req) { return req != sentence; });\n                        }\n                        else {\n                            updatedRequirments.push(sentence);\n                        }\n                        _this.props.onUpdatePartialKnowledge(requirement.id, getSortedRequirments(textSentences, updatedRequirments));\n                    }\n                } });\n        }));\n    };\n    KnowledgeMatrix.prototype.onRequirementChanged = function (requirement, value, partialValues, allPartialMarked) {\n        if (this.props.onUpdatePartialKnowledge) {\n            //remove all saved senteces if the requirement is unchecked\n            (value && !partialValues || allPartialMarked) ? this.props.onUpdatePartialKnowledge(requirement.id, []) : this.props.onUpdatePartialKnowledge(requirement.id, getRequirmentSentences(requirement.name));\n        }\n        else {\n            this.props.onMarkChanged(requirement.id, !value);\n        }\n    };\n    KnowledgeMatrix.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, knowledgeRequirements = _a.knowledgeRequirements, markedIds = _a.markedIds, migratedIds = _a.migratedIds, explainedRequirements = _a.explainedRequirements, markBySentenceView = _a.markBySentenceView, markPartialFeatureEnabled = _a.markPartialFeatureEnabled;\n        var _b = this.props, idsToMarkNotOk = _b.idsToMarkNotOk, markMode = _b.markMode, onExplainedRequirementsChanged = _b.onExplainedRequirementsChanged, partialRequirments = _b.partialRequirments, coveredPartialRequirments = _b.coveredPartialRequirments;\n        var columns = [\"E\", \"C\", \"A\"];\n        var rows = [];\n        var reqs = knowledgeRequirements.slice();\n        var row = null;\n        while (true) {\n            row = columns.map(function (grade) {\n                var pNext = reqs.findIndex(function (r) { return r.gradeStep && r.gradeStep.toUpperCase() === grade; });\n                if (pNext < 0)\n                    return null;\n                var rv = reqs[pNext];\n                reqs.splice(pNext, 1);\n                return rv;\n            });\n            if (row.every(function (r) { return r === null; }))\n                break;\n            rows.push(row);\n        }\n        return React.createElement(\"table\", { className: \"knowledge-matrix\" },\n            React.createElement(\"thead\", null,\n                React.createElement(\"tr\", null, columns.map(function (c) { return React.createElement(\"th\", { key: c }, c); }))),\n            React.createElement(\"tbody\", null, rows.map(function (row, i) { return React.createElement(React.Fragment, { key: i },\n                React.createElement(\"tr\", null, row.map(function (requirement, j) {\n                    var isMarkedOK = requirement && markedIds && markedIds.indexOf(requirement.id) >= 0;\n                    var isMarkedNotOK = requirement && idsToMarkNotOk && idsToMarkNotOk[requirement.id]; //not used anymore\n                    var isMigrated = requirement && migratedIds && !!migratedIds[requirement.id];\n                    var rowPartialRequirements = requirement && partialRequirments && partialRequirments[requirement.id];\n                    var partialValues = rowPartialRequirements && getSavedSentences(rowPartialRequirements);\n                    var allReqSentencesMarked = requirement && allRequirementSentecesMarked(requirement.name, partialValues);\n                    var hasPartialCovered = requirement && isPartialCoveredRequirment(requirement, coveredPartialRequirments);\n                    var markedRed = !(partialValues && partialValues.length > 0 || hasPartialCovered);\n                    return requirement && markBySentenceView && markPartialFeatureEnabled ? _this.getKnowledgeSentencesContent(requirement, rowPartialRequirements, j, isMarkedOK, isMigrated) :\n                        React.createElement(\"td\", { key: j, dangerouslySetInnerHTML: { __html: requirement ? (rowPartialRequirements && rowPartialRequirements.length || hasPartialCovered) ?\n                                    getPartialContentDefaultView(requirement, rowPartialRequirements, coveredPartialRequirments, markedRed) : requirement.name : \"\" }, className: (markMode ? \"selectable\" : \"\") +\n                                (isMigrated ? \" migrated\" : \"\") +\n                                (isMarkedOK && (!rowPartialRequirements || allReqSentencesMarked) ?\n                                    \" markedGreen\" :\n                                    markedRed ?\n                                        \" markedRed\" :\n                                        \"\"), onClick: markMode && requirement ?\n                                function () { return _this.onRequirementChanged(requirement, isMarkedOK, partialValues, allReqSentencesMarked); } :\n                                undefined, title: getMigrationTitle(isMigrated, markMode) });\n                })),\n                explainedRequirements && React.createElement(\"tr\", null, row.map(function (requirement, j) {\n                    var partialSentences = requirement && partialRequirments && partialRequirments[requirement.id] && getSavedSentences(partialRequirments[requirement.id]);\n                    var isMarkedOK = requirement && markedIds && markedIds.indexOf(requirement.id) >= 0 || partialSentences && partialSentences.length > 0;\n                    return React.createElement(\"td\", { key: j }, isMarkedOK ? React.createElement(\"textarea\", { placeholder: L(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"Beskrivning av kravet\"], [\"Beskrivning av kravet\"]))), className: \"inputTextBox inputTextLarge\", style: { width: \"100%\" }, readOnly: !markMode, value: (requirement && explainedRequirements[requirement.id]) || \"\", onChange: requirement && onExplainedRequirementsChanged && (function (ev) { return onExplainedRequirementsChanged(requirement.id, ev.target.value); }) }) : undefined);\n                }))); })));\n        { /*return <div>\n          <table>\n            <thead>\n              <tr>\n                <th>E</th>\n                <th>C</th>\n                <th>A</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tbody.map((row, i) =>\n              <tr key={i}>{row.map((cell, j) => {\n                const isMarkedOK = props.markedIds && props.markedIds.indexOf(cell.id) >= 0;\n                const isMarkedNotOK = props.idsToMarkNotOk && props.idsToMarkNotOk[cell.id];\n                return <td\n                  key={j}\n                  rowSpan={cell.rowSpan}\n                  className={(props.markMode ? \"selectable\" : \"\") +\n                    (isMarkedOK ?\n                      \" markedGreen\" :\n                      (isMarkedNotOK ?\n                        \" markedRed\":\n                        \"\"))}\n                  onClick={props.markMode && (()=>props.onMarkChanged(cell.id, !isMarkedOK))}>\n                  {cell.html && <div style={{position: 'relative'}}>\n                    <p\n                      className={cell.type === 'ability' ? 'abilityText' : 'criteriaText'}\n                      dangerouslySetInnerHTML={{__html: cell.html}} />\n                    {props.editMode && <RemoveItem className=\"upperRight\" onClick={()=>\n                      this.setCellIds(\n                        cell.type,\n                        cell.rowIndex,\n                        this.getCellIds(\n                          cell.type,\n                          cell.rowIndex).filter(id => id != cell.id) )} /> }\n                  </div>}\n                </td>})}\n              </tr>)}\n            </tbody>\n          </table>\n        </div>*/\n        }\n    };\n    return KnowledgeMatrix;\n}(React.Component));\nexport { KnowledgeMatrix };\nvar templateObject_1;\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { L } from \"../../../utils/utils\";\n;\nexport var RemoveItem = function (_a) {\n    var onClick = _a.onClick, className = _a.className, style = _a.style, title = _a.title;\n    return React.createElement(\"div\", { title: title || L(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"Radera\"], [\"Radera\"]))), className: \"removeItem \" + (className || \"\"), onClick: onClick, style: style });\n};\nvar templateObject_1;\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { OpenCloseBox } from \"../../utility-components/open-close-box\";\nimport { arrayToLookup } from '../../../utils/utils';\nvar SelectRelatedDocs = /** @class */ (function (_super) {\n    tslib_1.__extends(SelectRelatedDocs, _super);\n    function SelectRelatedDocs(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {};\n        return _this;\n    }\n    SelectRelatedDocs.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, options = _a.options, title = _a.title, markedIds = _a.markedIds, markMode = _a.markMode, migratedIds = _a.migratedIds, uncoveredIds = _a.uncoveredIds;\n        var groupedOptions = arrayToLookup(options, function (d) { return d.group || \"default\"; });\n        var groups = Object.keys(groupedOptions);\n        return React.createElement(OpenCloseBox, { title: React.createElement(\"p\", null, title), className: \"larger\" }, groups.map(function (group) { return React.createElement(React.Fragment, { key: group },\n            groups.length === 1 ? null : React.createElement(React.Fragment, null,\n                React.createElement(\"br\", null),\n                React.createElement(\"h5\", null, group),\n                React.createElement(\"hr\", null)),\n            groupedOptions[group].map(function (option) {\n                var isMarked = markedIds.some(function (x) { return x === option.id; });\n                var isMigrated = migratedIds && !!migratedIds[option.id];\n                var isUncovered = uncoveredIds && uncoveredIds[option.id];\n                return React.createElement(\"div\", { className: \"align-horizontal\", key: option.id, onClick: function () {\n                        return markMode && _this.props.onMarkChanged(option.id, !isMarked);\n                    } },\n                    React.createElement(\"div\", { className: \"horizontalItem top spaced\" +\n                            (markMode ? \" selectable\" : \"\") +\n                            (isMarked ? \" markedGreen\" : (isUncovered ?\n                                \" markedRed\" :\n                                \"\")) +\n                            (isMigrated ? \" migrated\" : \"\"), title: isMigrated ?\n                            markMode ?\n                                \"Skolverket har uppdaterat textens formulering. Du kan granska \\u00E4ndringen genom att f\\u00E4lla ut varningsboxen till h\\u00F6ger, med titel \\\"Uppdaterade formuleringar fr\\u00E5n Skolverket\\\"\" :\n                                \"Skolverket har uppdaterat textens formulering, men detta har \\u00E4nnu inte granskats av uppgiftens redigeringsbeh\\u00F6rige\" :\n                            undefined },\n                        React.createElement(\"p\", { dangerouslySetInnerHTML: { __html: option.name } }),\n                        React.createElement(\"br\", null)));\n            })); }));\n    };\n    return SelectRelatedDocs;\n}(React.Component));\nexport { SelectRelatedDocs };\n","import * as React from 'react';\nexport var Spinner = function (_a) {\n    var _b = _a.label, label = _b === void 0 ? \"\" : _b;\n    return React.createElement(\"span\", null,\n        React.createElement(\"i\", { className: \"fa fa-spinner fa-spin\", \"aria-hidden\": \"true\" }),\n        \"\\u00A0\",\n        label);\n};\n","import * as tslib_1 from \"tslib\";\nimport env from '../../../../globals/KED.env';\nimport { migrateSubject } from './migrate-subject';\nimport { loadCourse } from '../../utils';\nexport function diffXmlWithDatabase(existingSubject, subjectToImport, changes) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var expandedCourseTemplates, courseSets;\n        var _this = this;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, env.kedBackendClient.get('subjects', existingSubject.id, { include: [\"courseTemplates\", \"abilities\"] })];\n                case 1:\n                    // Expand graphs of existing Subject\n                    existingSubject = _a.sent();\n                    return [4 /*yield*/, Promise.all(existingSubject.courseTemplates.map(function (ct) { return loadCourse(ct.id, {\n                            include: [\n                                'centralContent',\n                                'knowledgeRequirements'\n                            ]\n                        }); }))];\n                case 2:\n                    expandedCourseTemplates = _a.sent();\n                    console.log(\"Subject: \" + existingSubject.name + \". Courses: \" + expandedCourseTemplates.map(function (_a) {\n                        var name = _a.name;\n                        return name;\n                    }));\n                    return [4 /*yield*/, Promise.all(expandedCourseTemplates.map(function (courseTemplate) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                            var _a;\n                            return tslib_1.__generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        _a = {\n                                            template: courseTemplate\n                                        };\n                                        return [4 /*yield*/, env.kedBackendClient.list(\"courses\", { name: courseTemplate.name, include: ['abilities'], flags: ['includeIdsOnly'] })];\n                                    case 1: return [2 /*return*/, (_a.instances = _b.sent(),\n                                            _a)];\n                                }\n                            });\n                        }); }))];\n                case 3:\n                    courseSets = _a.sent();\n                    /*if (expandedCourseTemplates.some (course => !course.centralContentOrder || !course.knowledgeRequirementsOrder || !course.abilitiesOrder)) {\n                      migrateOrderListsOfCourseInstances(courseSets, subjectToImport, changes);\n                      // In future, as abilities may be added or removed, we will have to maintain the order of abilities on the course instances,\n                      // the same way we do it with central content and knowledge requirements. TODO respect abilities order on every place abilities are enumerated,\n                      // such as on course viewer, course builder, etc.\n                      migrateAbilitiesOrderOnSubject(existingSubject, courseSets, changes);\n                    } else {*/\n                    return [4 /*yield*/, migrateSubject(existingSubject, courseSets, subjectToImport, changes)];\n                case 4:\n                    /*if (expandedCourseTemplates.some (course => !course.centralContentOrder || !course.knowledgeRequirementsOrder || !course.abilitiesOrder)) {\n                      migrateOrderListsOfCourseInstances(courseSets, subjectToImport, changes);\n                      // In future, as abilities may be added or removed, we will have to maintain the order of abilities on the course instances,\n                      // the same way we do it with central content and knowledge requirements. TODO respect abilities order on every place abilities are enumerated,\n                      // such as on course viewer, course builder, etc.\n                      migrateAbilitiesOrderOnSubject(existingSubject, courseSets, changes);\n                    } else {*/\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n","import * as tslib_1 from \"tslib\";\nimport { createUUID } from 'kedbackend/client';\nimport { flatten } from '../../../../utils/utils';\nimport env from '../../../../globals/KED.env';\nfunction diffSubjectGlobalTexts(dbTextMap, xmlTexts) {\n    var e_1, _a;\n    var removedIds = new Set();\n    var newTexts = new Map();\n    var idsToAdd = new Set();\n    xmlTexts.forEach(function (newText) {\n        newText = newText.trim();\n        if (!dbTextMap.has(newText)) {\n            var id = createUUID();\n            console.log(\"New id: \" + id + \". Text: \" + newText);\n            newTexts.set(newText, id);\n            idsToAdd.add(id);\n        }\n        else {\n            newTexts.set(newText, dbTextMap.get(newText));\n        }\n    });\n    try {\n        for (var _b = tslib_1.__values(dbTextMap.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var _d = tslib_1.__read(_c.value, 2), oldText = _d[0], oldId = _d[1];\n            if (xmlTexts.indexOf(oldText) === -1) {\n                removedIds.add(oldId);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return {\n        removedIds: removedIds,\n        newTexts: newTexts,\n        idsToAdd: idsToAdd\n    };\n}\nvar _fictiveOldId = 1;\nfunction fictiveOldId() {\n    return \"fictiveOldId\" + (++_fictiveOldId);\n}\nvar stopWords = new Set(\n// From https://github.com/MihaiValentin/lunr-languages/blob/master/lunr.sv.js#L252\n('alla allt att av blev bli blir blivit de dem den denna deras dess dessa det detta dig din dina ditt du där då efter ej eller en er era ert ett från för ha hade han hans har henne hennes hon honom hur här i icke ingen inom inte jag ju kan kunde man med mellan men mig min mina mitt mot mycket ni nu när någon något några och om oss på samma sedan sig sin sina sitta själv skulle som så sådan sådana sådant till under upp ut utan vad var vara varför varit varje vars vart vem vi vid vilka vilkas vilken vilket vår våra vårt än är åt över' +\n    ' kring') // This line contains additional stop-words missing in lunr.sv.\n    .split(' '));\nfunction getLexemes(html) {\n    return new Set(removeTags(html).replace(/[^\\w\\såäö]/gi, '').toLowerCase().split(/\\s/)\n        .map(function (lexeme) { return lexeme.trim(); })\n        .filter(function (lexeme) { return !!lexeme; })\n        .filter(function (lexeme) { return !stopWords.has(lexeme); }));\n}\nfunction removeTags(html) {\n    var div = document.createElement('div');\n    div.innerHTML = html;\n    return '' + div.innerText;\n}\nfunction getIdsToMigrate(dbTexts, xmlTexts, newTexts, textType, course) {\n    var idsToMigrate = new Map();\n    dbTexts = dbTexts.map(function (entity) { return (tslib_1.__assign({}, entity, { name: entity.name.trim() })); }).filter(function (_a) {\n        var name = _a.name;\n        return !!name;\n    });\n    var xmlSet = new Map();\n    xmlTexts.forEach(function (item) { return xmlSet.set(item.html, item); });\n    var dbSet = new Map();\n    dbTexts.forEach(function (entity) { return dbSet.set(entity.name, entity); });\n    // Remove those who already exists identically\n    dbTexts = dbTexts.filter(function (entity) { return !xmlSet.has(entity.name); });\n    xmlTexts = xmlTexts.filter(function (item) { return !dbSet.has(item.html); });\n    // Now, for the remainder, try the best to map old texts to new texts, and when done, check if there are new texts that never got mapped.\n    // Start by putting all dbText into the result, without a paired xml text yet:\n    dbTexts.forEach(function (dbText) { return idsToMigrate.set(dbText.id, {\n        gradeStep: dbText.gradeStep,\n        oldText: dbText.name,\n        lexemes: getLexemes(dbText.name),\n        matchLevel: 0\n    }); });\n    // Then try to pair each xmlText to an item in idsToMigrate\n    var xmlSpinsters = [];\n    while (xmlTexts.length > 0) {\n        var xmlText = xmlTexts[0];\n        var bestMatch = findBestMatch(xmlText);\n        if (!bestMatch) {\n            xmlSpinsters.push(xmlText);\n        }\n        else {\n            if (bestMatch.newText) {\n                // Throw out existing match\n                xmlTexts.push({ html: bestMatch.newText, gradeStep: bestMatch.gradeStep });\n            }\n            var pair = idsToMigrate.get(bestMatch.id);\n            // Pair myself with this match:\n            pair.newText = xmlText.html;\n            pair.matchLevel = bestMatch.myMatchLevel;\n            pair.newId = newTexts.get(xmlText.html);\n        }\n        xmlTexts.shift();\n    }\n    // For each spinster (new texts that couldn't find any match in old texts),\n    // Add them with an fictive old ID but omit oldText to mark it as a newcomer\n    xmlSpinsters.forEach(function (spinster) {\n        idsToMigrate.set(fictiveOldId(), {\n            newId: newTexts.get(spinster.html),\n            newText: spinster.html,\n            gradeStep: spinster.gradeStep,\n            matchLevel: 0,\n            lexemes: new Set()\n        });\n    });\n    // Mark typo-fixes\n    idsToMigrate.forEach(function (match) {\n        var oldText = match.oldText, newText = match.newText;\n        if (oldText && newText) {\n            if (tslib_1.__spread(getLexemes(oldText)).join(' ') === tslib_1.__spread(getLexemes(newText)).join(' ')) {\n                match.isTypoFix = true;\n            }\n        }\n    });\n    console.log(\"IdsToMigrate\", tslib_1.__spread(idsToMigrate.values()).map(function (_a) {\n        var oldText = _a.oldText, lexemes = _a.lexemes;\n        return tslib_1.__spread(lexemes).join(' ') + \": \" + oldText;\n    }));\n    return idsToMigrate;\n    function findBestMatch(xmlText) {\n        var xmlLexemes = getLexemes(xmlText.html);\n        var possiblePartners = tslib_1.__spread(idsToMigrate.entries()).filter(function (_a) {\n            var _b = tslib_1.__read(_a, 2), id = _b[0], x = _b[1];\n            return x.gradeStep === xmlText.gradeStep;\n        })\n            .map(function (_a) {\n            var _b = tslib_1.__read(_a, 2), id = _b[0], _c = _b[1], gradeStep = _c.gradeStep, matchLevel = _c.matchLevel, newText = _c.newText, lexemes = _c.lexemes;\n            return ({\n                id: id,\n                gradeStep: gradeStep,\n                matchLevel: matchLevel,\n                newText: newText,\n                myMatchLevel: getMatchLevel(xmlLexemes, lexemes)\n            });\n        }).filter(function (pp) { return pp.myMatchLevel >= 50 && (!pp.matchLevel || pp.matchLevel < pp.myMatchLevel); });\n        return possiblePartners.sort(function (a, b) { return b.myMatchLevel - a.myMatchLevel; })[0]; // highest first.\n    }\n    function getMatchLevel(lexemes1, lexemes2) {\n        if (lexemes1.size === 0 || lexemes2.size === 0)\n            return 0;\n        var points1 = 0;\n        var points2 = 0;\n        lexemes1.forEach(function (word) {\n            if (lexemes2.has(word))\n                ++points1;\n        });\n        lexemes2.forEach(function (word) {\n            if (lexemes1.has(word))\n                ++points2;\n        });\n        return Math.round(100 * Math.max(points1 / lexemes1.size, points2 / lexemes2.size));\n    }\n    /*if (dbTexts.length !== xmlTexts.length) {\n      // We can no longer assume that the changed texts refer to different formulations of the same meaning.\n      // We not map old formulations to new ones.\n      // In future, we could handle this case by assuming all old texts not occurring in new data, have been removed and all new have been added.\n      throw new Error(\"Number of \" + textType + (course ? ` on course ${course}` : \"\") + \" differs. Cannot migrate.\");\n    }\n    dbTexts.forEach(({name: oldText, id: oldId, gradeStep}, i) => {\n      const xmlText = xmlTexts[i].trim();\n      if (oldText.trim() !== xmlText) {\n        idsToMigrate.set(oldId, {newText: xmlText, newId: newTexts.get(xmlText), oldText, gradeStep});\n      }\n    });\n    return idsToMigrate;*/\n}\nexport function migrateSubject(existingSubject, courseSets, subjectToImport, changes) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        function migrateCourseInstance(course, courseToImport, idsToMigrate) {\n            var showChanges = !shownChanges.has(course.name);\n            shownChanges.add(course.name);\n            abilityIdsToMigrate.forEach(function (_a, oldId) {\n                var newId = _a.newId, oldText = _a.oldText;\n                // Relink the course instance with abilities. This change does not need to be visible in GUI.\n                changes.push({\n                    mutations: function (br) {\n                        if (oldText)\n                            br.unlink2(\"courses\", course.id, \"abilities\", oldId);\n                        if (newId)\n                            br.link2(\"courses\", course.id, \"abilities\", newId);\n                    }\n                });\n            });\n            course.abilitiesOrder = subjectToImport.abilities.map(function (html) { return newAbilityTexts.get(html); });\n            var ccsToMigrate = idsToMigrate.ccsToMigrate, krsToMigrate = idsToMigrate.krsToMigrate;\n            // Central Content\n            ccsToMigrate.forEach(function (_a, oldId) {\n                var newId = _a.newId, newText = _a.newText, oldText = _a.oldText, isTypoFix = _a.isTypoFix;\n                changes.push({\n                    change: showChanges && (oldText ?\n                        newText ?\n                            isTypoFix ?\n                                \"Tryckfelsr\\u00E4ttning Centralt Inneh\\u00E5ll\" :\n                                \"Uppdaterat Centralt Inneh\\u00E5ll\" :\n                            \"Borttaget Centralt Inneh\\u00E5ll\" :\n                        \"Nytt Centralt Inneh\\u00E5ll\"),\n                    content: \"<h4>\" + course.name + \"</h4><strike>\" + (oldText || '') + \"</strike><br/>\" + (newText || ''),\n                    mutations: function (br) {\n                        if (newId && ccsToAdd.has(newId) && !createdIds.has(newId)) {\n                            var cc = {\n                                id: newId,\n                                name: newText,\n                                acl: [\"role:USER:R\"],\n                                dateTime: Date.now()\n                            };\n                            br.add(\"central-content\", cc);\n                            createdIds.add(newId);\n                        }\n                        if (oldText)\n                            br.unlink2(\"courses\", course.id, \"centralContent\", oldId);\n                        if (newId)\n                            br.link2(\"courses\", course.id, \"centralContent\", newId);\n                    }\n                });\n            });\n            course.centralContentOrder = courseToImport.centralContent.map(function (_a) {\n                var html = _a.html;\n                return newCCTexts.get(html);\n            });\n            // Knowledge Requirements\n            krsToMigrate.forEach(function (_a, oldId) {\n                var newId = _a.newId, newText = _a.newText, gradeStep = _a.gradeStep, oldText = _a.oldText, isTypoFix = _a.isTypoFix;\n                changes.push({\n                    change: showChanges && (oldText ?\n                        newText ?\n                            isTypoFix ?\n                                \"Tryckfelsr\\u00E4ttning Kunskapskrav\" :\n                                \"Uppdaterat Kunskapskrav\" :\n                            \"Borttaget Kunskapskrav\" :\n                        \"Nytt Kunskapskrav\"),\n                    content: \"<h4>\" + course.name + \"</h4><strike>\" + (oldText || '') + \"</strike><br/>\" + (newText || ''),\n                    mutations: function (br) {\n                        if (newId && krsToAdd.has(newId) && !createdIds.has(newId)) {\n                            var kr = {\n                                id: newId,\n                                name: newText,\n                                gradeStep: gradeStep,\n                                acl: [\"role:USER:R\"],\n                                dateTime: Date.now()\n                            };\n                            console.log(\"Adding Knowledge-Requirement \" + newId + \": \" + newText);\n                            br.add(\"knowledge-requirements\", kr);\n                            createdIds.add(newId);\n                        }\n                        if (oldText)\n                            br.unlink2(\"courses\", course.id, \"knowledgeRequirements\", oldId);\n                        if (newId)\n                            br.link2(\"courses\", course.id, \"knowledgeRequirements\", newId);\n                    }\n                });\n            });\n            course.knowledgeRequirementsOrder =\n                courseToImport.knowledgeRequirements.map(function (kr) { return newKRTexts.get(kr.html); });\n            // Updates the course properties centralContentOrder and knowledgeRequirementsOrder\n            if (abilityIdsToMigrate.size > 0 || ccsToMigrate.size > 0 || krsToMigrate.size > 0) {\n                changes.push({\n                    change: !course.isTemplate ? \"Uppdaterad Kursinstans\" : \"Uppdaterad Kursmall\",\n                    content: !course.isTemplate ?\n                        course.name + \". Skola: \" + (course.school || \"ej angiven\") + \". Beskrivning: \" + (course.description || '') :\n                        \"\" + course.name,\n                    mutations: function (br) { return br.put(\"courses\", course); }\n                });\n            }\n        }\n        // Tasks:\n        // 1. ASYNC OPERATION: Go through all tasks that has edges to any of the old ids.\n        // 2. For each found task, do:\n        //    A: Iterate tags starting with \"course:\". Pick the course code.\n        //    B: Populate the new property migrationTasks: {\n        //         abilities: {[newId: string]: {oldText: string, oldId: string, importDate: number}}, // Be able to create a chain in the GUI !\n        //         centralContent: {[newId: string]: {oldText: string, ...\"...}},\n        //         knowledgeRequirements: {[newId: string]: {oldText: string, ...\"...}},\n        //       }\n        //       OBS1! Mergea abilities, centralCondent och knowledgeRequirements med ev tidigare värden (så man kan importera om och om igen!)\n        //       OBS2! oldId kan förekomma på flera newId om task används av flera kurser. \n        //    C: Create sets for unlinks and link operations per type.\n        //    D: For all courseCodes that the task is taggen on,\n        //         * register ccsToMigrate.keys() in the unlink set of central contents\n        //         * register ccsToMigrate.values() in the link set of central contents\n        //         * --\"-- for knowledgeRequirements\n        //    E: unlink and link with regards to abilityIdsToMigrate (keys() and values() respectively).\n        //    F: unlink and link according to the created sets of link / unlink operations.\n        //    Note: Unlike course instances, there's no order property to take care of here!\n        //\n        function migrateTasks() {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                function fetchTasksInChunksWithEdgesTo(ids, options) {\n                    return tslib_1.__awaiter(this, void 0, void 0, function () {\n                        var result;\n                        return tslib_1.__generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    // This function should make work around the case when given \"ids\" contains too many items, by\n                                    // dividing the requests into several and merge the result using a Map.\n                                    if (ids.length === 0)\n                                        return [2 /*return*/, []]; // Otherwise we'll request every task in the system.\n                                    result = new Map();\n                                    console.log(\"Number of ids: \" + ids.length);\n                                    return [4 /*yield*/, env.kedBackendClient.list(\"tasks\", tslib_1.__assign({}, options, { hasEdgesTo: ids }))];\n                                case 1: \n                                //return result.values();\n                                return [2 /*return*/, _a.sent()];\n                            }\n                        });\n                    });\n                }\n                var oldIds, importDate, tasks, _loop_2, tasks_1, tasks_1_1, task;\n                var e_7, _a;\n                return tslib_1.__generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            oldIds = tslib_1.__spread(abilityIdsToMigrate.keys(), flatten(idsToMigratePerCourse.map(function (c) { return tslib_1.__spread(c.ccsToMigrate.keys(), c.krsToMigrate.keys()); }))).filter(function (id) { return !id.startsWith('fictiveOldId'); });\n                            importDate = Date.now();\n                            return [4 /*yield*/, fetchTasksInChunksWithEdgesTo(oldIds, {\n                                    include: [\"abilities\", \"knowledgeRequirements\", \"centralContent\"],\n                                    flags: [\"includeIdsOnly\"]\n                                })];\n                        case 1:\n                            tasks = _b.sent();\n                            _loop_2 = function (task) {\n                                var e_8, _a, e_9, _b, e_10, _c, e_11, _d;\n                                var oldMT = task.migratedTexts || {\n                                    abilities: {},\n                                    centralContent: {},\n                                    knowledgeRequirements: {}\n                                };\n                                task.migratedTexts = {\n                                    abilities: {},\n                                    centralContent: {},\n                                    knowledgeRequirements: {}\n                                };\n                                var mutations = [];\n                                var changeDescriptions = [];\n                                var _loop_3 = function (id) {\n                                    var migrationInfo = abilityIdsToMigrate.get(id);\n                                    if (migrationInfo) {\n                                        var newId_1 = migrationInfo.newId, newText = migrationInfo.newText, isTypoFix = migrationInfo.isTypoFix;\n                                        var oldText = migrationInfo.oldText;\n                                        var oldId = id;\n                                        if (oldMT.abilities[id]) {\n                                            // If migrating stuff that was never acknowledges by a teacher,\n                                            // We should point out the very old id and text instead of the never-acknowledged one.\n                                            oldText = oldMT.abilities[id].oldText;\n                                            oldId = oldMT.abilities[id].oldId;\n                                        }\n                                        if (newId_1 && oldText !== newText) {\n                                            // Special case: If oldText === newText, then this is a reimport new XML that reverts back to origin text. Don't require acknowledgement from teacher!\n                                            if (!isTypoFix) {\n                                                // If this wasn't just a typo fix (changes in stop words, casing or special characters)\n                                                task.migratedTexts.abilities[newId_1] = { oldId: oldId, oldText: oldText, importDate: importDate };\n                                            }\n                                        }\n                                        mutations.push(function (br) {\n                                            br.unlink2(\"tasks\", task.id, \"abilities\", id);\n                                            if (newId_1)\n                                                br.link2(\"tasks\", task.id, \"abilities\", newId_1);\n                                        });\n                                        changeDescriptions.push(\"<strike>\" + oldText + \"</strike>\");\n                                        if (newId_1) {\n                                            changeDescriptions.push(newText);\n                                        }\n                                    }\n                                };\n                                try {\n                                    for (var _e = (e_8 = void 0, tslib_1.__values(task.abilities)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                                        var id = _f.value.id;\n                                        _loop_3(id);\n                                    }\n                                }\n                                catch (e_8_1) { e_8 = { error: e_8_1 }; }\n                                finally {\n                                    try {\n                                        if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n                                    }\n                                    finally { if (e_8) throw e_8.error; }\n                                }\n                                var taskCourseCodes = new Set(task.tags ?\n                                    task.tags.filter(function (t) { return t.startsWith('course:'); }).map(function (t) { return t.substr(\"course:\".length); }) :\n                                    []);\n                                // We need to keep track of linkedIds (for this particular task) for the following reason:\n                                // Let's say the task was referred to by two different courses (possible in old versions),\n                                // and in old Central Content, the two courses did have slightly different formulations of central content,\n                                // so the task was mapped to both of them. Then, in new XML, the same central content was formulated\n                                // in a new way that is identical this time between the two courses. Then both old IDs will be replaced\n                                // by a single new ID. It would then be unnescessary to link to the new ID twice.\n                                var linkedIds = new Set();\n                                try {\n                                    for (var idsToMigratePerCourse_1 = (e_9 = void 0, tslib_1.__values(idsToMigratePerCourse)), idsToMigratePerCourse_1_1 = idsToMigratePerCourse_1.next(); !idsToMigratePerCourse_1_1.done; idsToMigratePerCourse_1_1 = idsToMigratePerCourse_1.next()) {\n                                        var _g = idsToMigratePerCourse_1_1.value, krsToMigrate = _g.krsToMigrate, ccsToMigrate = _g.ccsToMigrate, courseCode = _g.courseCode;\n                                        if (taskCourseCodes.size === 0 || taskCourseCodes.has(courseCode)) {\n                                            var _loop_4 = function (id) {\n                                                var migrationInfo = ccsToMigrate.get(id);\n                                                if (migrationInfo) {\n                                                    var newId_2 = migrationInfo.newId, newText = migrationInfo.newText, oldText = migrationInfo.oldText, isTypoFix = migrationInfo.isTypoFix;\n                                                    var oldId = id;\n                                                    if (oldMT.centralContent[id]) {\n                                                        // If migrating stuff that was never acknowledges by a teacher,\n                                                        // We should point out the very old id and text instead of the never-acknowledged one.\n                                                        oldText = oldMT.centralContent[id].oldText;\n                                                        oldId = oldMT.centralContent[id].oldId;\n                                                    }\n                                                    if (newId_2 && oldText !== newText) {\n                                                        // Special case: If oldText === newText, then this is a reimport new XML that reverts back to origin text. Don't require acknowledgement from teacher!\n                                                        if (!isTypoFix) {\n                                                            // If this wasn't just a typo fix (changes in stop words, casing or special characters)\n                                                            task.migratedTexts.centralContent[newId_2] = { oldId: oldId, oldText: oldText, importDate: importDate };\n                                                        }\n                                                    }\n                                                    if (!newId_2 || !linkedIds.has(newId_2)) {\n                                                        mutations.push(function (br) {\n                                                            br.unlink2(\"tasks\", task.id, \"centralContent\", id);\n                                                            if (newId_2)\n                                                                br.link2(\"tasks\", task.id, \"centralContent\", newId_2);\n                                                        });\n                                                        changeDescriptions.push(\"<strike>\" + oldText + \"</strike>\");\n                                                        if (newId_2) {\n                                                            changeDescriptions.push(newText);\n                                                            linkedIds.add(newId_2);\n                                                        }\n                                                    }\n                                                }\n                                            };\n                                            try {\n                                                for (var _h = (e_10 = void 0, tslib_1.__values(task.centralContent)), _j = _h.next(); !_j.done; _j = _h.next()) {\n                                                    var id = _j.value.id;\n                                                    _loop_4(id);\n                                                }\n                                            }\n                                            catch (e_10_1) { e_10 = { error: e_10_1 }; }\n                                            finally {\n                                                try {\n                                                    if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\n                                                }\n                                                finally { if (e_10) throw e_10.error; }\n                                            }\n                                            var _loop_5 = function (id) {\n                                                var migrationInfo = krsToMigrate.get(id);\n                                                if (migrationInfo) {\n                                                    var newId_3 = migrationInfo.newId, newText = migrationInfo.newText, oldText = migrationInfo.oldText, isTypoFix = migrationInfo.isTypoFix;\n                                                    var oldId = id;\n                                                    if (oldMT.knowledgeRequirements[id]) {\n                                                        // If migrating stuff that was never acknowledges by a teacher,\n                                                        // We should point out the very old id and text instead of the never-acknowledged one.\n                                                        oldText = oldMT.knowledgeRequirements[id].oldText;\n                                                        oldId = oldMT.knowledgeRequirements[id].oldId;\n                                                    }\n                                                    if (newId_3 && oldText !== newText) {\n                                                        // Special case: If oldText === newText, then this is a reimport new XML that reverts back to origin text. Don't require acknowledgement from teacher!\n                                                        if (!isTypoFix) {\n                                                            // If this wasn't just a typo fix (changes in stop words, casing or special characters)\n                                                            task.migratedTexts.knowledgeRequirements[newId_3] = { oldId: oldId, oldText: oldText, importDate: importDate };\n                                                        }\n                                                    }\n                                                    if (!newId_3 || !linkedIds.has(newId_3)) {\n                                                        mutations.push(function (br) {\n                                                            br.unlink2(\"tasks\", task.id, \"knowledgeRequirements\", id);\n                                                            if (newId_3)\n                                                                br.link2(\"tasks\", task.id, \"knowledgeRequirements\", newId_3);\n                                                        });\n                                                        changeDescriptions.push(\"<strike>\" + oldText + \"</strike>\");\n                                                        if (newId_3) {\n                                                            changeDescriptions.push(newText);\n                                                            linkedIds.add(newId_3);\n                                                        }\n                                                    }\n                                                }\n                                            };\n                                            try {\n                                                for (var _k = (e_11 = void 0, tslib_1.__values(task.knowledgeRequirements)), _l = _k.next(); !_l.done; _l = _k.next()) {\n                                                    var id = _l.value.id;\n                                                    _loop_5(id);\n                                                }\n                                            }\n                                            catch (e_11_1) { e_11 = { error: e_11_1 }; }\n                                            finally {\n                                                try {\n                                                    if (_l && !_l.done && (_d = _k.return)) _d.call(_k);\n                                                }\n                                                finally { if (e_11) throw e_11.error; }\n                                            }\n                                        }\n                                    }\n                                }\n                                catch (e_9_1) { e_9 = { error: e_9_1 }; }\n                                finally {\n                                    try {\n                                        if (idsToMigratePerCourse_1_1 && !idsToMigratePerCourse_1_1.done && (_b = idsToMigratePerCourse_1.return)) _b.call(idsToMigratePerCourse_1);\n                                    }\n                                    finally { if (e_9) throw e_9.error; }\n                                }\n                                changes.push({\n                                    change: \"Migrerad Uppgift\",\n                                    content: \"<h4>\" + task.name + \" \" + (task.school ? \"(\" + task.school + \") \" : '(skola ej angiven)') + \"</h4>\\n          <p>Kurskod: \" + tslib_1.__spread(taskCourseCodes).join(',') + \"</p>\\n          \" + changeDescriptions.map(function (txt) { return \"<p>\" + txt + \"</p>\"; }).join(''),\n                                    mutations: function (br) {\n                                        br.put(\"tasks\", task);\n                                        mutations.forEach(function (m) { return m(br); });\n                                    }\n                                });\n                            };\n                            try {\n                                /*const tasks = await env.kedBackendClient.list<Task>(\"tasks\", {\n                                  hasEdgesTo: oldIds,\n                                  include: [\"abilities\", \"knowledgeRequirements\", \"centralContent\"],\n                                  flags: [\"includeIdsOnly\"]\n                                });*/\n                                for (tasks_1 = tslib_1.__values(tasks), tasks_1_1 = tasks_1.next(); !tasks_1_1.done; tasks_1_1 = tasks_1.next()) {\n                                    task = tasks_1_1.value;\n                                    _loop_2(task);\n                                }\n                            }\n                            catch (e_7_1) { e_7 = { error: e_7_1 }; }\n                            finally {\n                                try {\n                                    if (tasks_1_1 && !tasks_1_1.done && (_a = tasks_1.return)) _a.call(tasks_1);\n                                }\n                                finally { if (e_7) throw e_7.error; }\n                            }\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        }\n        var dbTextMap, orderedAbilities, orderedAbilities_1, orderedAbilities_1_1, a, courseSets_1, courseSets_1_1, template, _a, _b, cc, _c, _d, kr, _e, newAbilityTexts, abilitiesToAdd, _f, newCCTexts, ccsToAdd, _g, newKRTexts, krsToAdd, abilityIdsToMigrate, idsToMigratePerCourse, createdIds, shownChanges, _loop_1, courseSets_2, courseSets_2_1, _h, template, instances;\n        var e_2, _j, e_3, _k, e_4, _l, e_5, _m, e_6, _o;\n        return tslib_1.__generator(this, function (_p) {\n            switch (_p.label) {\n                case 0:\n                    dbTextMap = new Map();\n                    orderedAbilities = existingSubject.abilitiesOrder ?\n                        existingSubject.abilitiesOrder.map(function (id) { return existingSubject.abilities.find(function (a) { return a.id === id; }); }) :\n                        existingSubject.abilities;\n                    try {\n                        for (orderedAbilities_1 = tslib_1.__values(orderedAbilities), orderedAbilities_1_1 = orderedAbilities_1.next(); !orderedAbilities_1_1.done; orderedAbilities_1_1 = orderedAbilities_1.next()) {\n                            a = orderedAbilities_1_1.value;\n                            dbTextMap.set(a.name.trim(), a.id);\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (orderedAbilities_1_1 && !orderedAbilities_1_1.done && (_j = orderedAbilities_1.return)) _j.call(orderedAbilities_1);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                    try {\n                        for (courseSets_1 = tslib_1.__values(courseSets), courseSets_1_1 = courseSets_1.next(); !courseSets_1_1.done; courseSets_1_1 = courseSets_1.next()) {\n                            template = courseSets_1_1.value.template;\n                            try {\n                                for (_a = (e_4 = void 0, tslib_1.__values(template.centralContent)), _b = _a.next(); !_b.done; _b = _a.next()) {\n                                    cc = _b.value;\n                                    dbTextMap.set(cc.name.trim(), cc.id);\n                                }\n                            }\n                            catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                            finally {\n                                try {\n                                    if (_b && !_b.done && (_l = _a.return)) _l.call(_a);\n                                }\n                                finally { if (e_4) throw e_4.error; }\n                            }\n                            try {\n                                for (_c = (e_5 = void 0, tslib_1.__values(template.knowledgeRequirements)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                                    kr = _d.value;\n                                    dbTextMap.set(kr.name.trim(), kr.id);\n                                }\n                            }\n                            catch (e_5_1) { e_5 = { error: e_5_1 }; }\n                            finally {\n                                try {\n                                    if (_d && !_d.done && (_m = _c.return)) _m.call(_c);\n                                }\n                                finally { if (e_5) throw e_5.error; }\n                            }\n                        }\n                    }\n                    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                    finally {\n                        try {\n                            if (courseSets_1_1 && !courseSets_1_1.done && (_k = courseSets_1.return)) _k.call(courseSets_1);\n                        }\n                        finally { if (e_3) throw e_3.error; }\n                    }\n                    _e = diffSubjectGlobalTexts(dbTextMap, subjectToImport.abilities), newAbilityTexts = _e.newTexts, abilitiesToAdd = _e.idsToAdd;\n                    _f = diffSubjectGlobalTexts(dbTextMap, flatten(subjectToImport.courses.map(function (c) { return c.centralContent.map(function (cc) { return cc.html; }); }))), newCCTexts = _f.newTexts, ccsToAdd = _f.idsToAdd;\n                    _g = diffSubjectGlobalTexts(dbTextMap, flatten(subjectToImport.courses.map(function (c) { return c.knowledgeRequirements.map(function (kr) { return kr.html; }); }))), newKRTexts = _g.newTexts, krsToAdd = _g.idsToAdd;\n                    console.log(\"Abilities to add: \" + abilitiesToAdd.size);\n                    console.log(\"CCs to add: \" + ccsToAdd.size);\n                    console.log(\"KRs to add: \" + krsToAdd.size);\n                    abilityIdsToMigrate = getIdsToMigrate(orderedAbilities, subjectToImport.abilities.map(function (html) { return ({ html: html }); }), newAbilityTexts, \"abilities\");\n                    idsToMigratePerCourse = courseSets.map(function (_a, i) {\n                        var template = _a.template;\n                        console.log(\"Course: \" + template.name);\n                        var xmlCourse = subjectToImport.courses.find(function (c) { return c.name === template.name; }) ||\n                            subjectToImport.courses.find(function (c) { return c.code === template.code; });\n                        return {\n                            courseCode: template.code,\n                            ccsToMigrate: xmlCourse ?\n                                getIdsToMigrate(template.centralContent, // Has already been sorted when retrieved via loadCourse()\n                                xmlCourse.centralContent.map(function (_a) {\n                                    var html = _a.html;\n                                    return ({ html: html });\n                                }), newCCTexts, \"central content\", template.name) :\n                                new Map(),\n                            krsToMigrate: xmlCourse ?\n                                getIdsToMigrate(template.knowledgeRequirements, // Has already been sorted when retrieved via loadCourse()\n                                xmlCourse.knowledgeRequirements, newKRTexts, \"knowledge requirements\", template.name) :\n                                new Map()\n                        };\n                    });\n                    // OK so now we have all info.\n                    // Now, we need to:\n                    // Subject:\n                    // 1. Remove links from subjects to abilities\n                    // 2. Add links from subjects to abilities\n                    abilityIdsToMigrate.forEach(function (_a, oldId) {\n                        var newText = _a.newText, newId = _a.newId, oldText = _a.oldText, isTypoFix = _a.isTypoFix;\n                        //const oldText = existingSubject.abilities.find(a => a.id === oldId).name;\n                        changes.push({\n                            change: (oldText ?\n                                newText ?\n                                    isTypoFix ?\n                                        \"Tryckfelsr\\u00E4ttning F\\u00F6rm\\u00E5ga\" :\n                                        \"Uppdaterad F\\u00F6rm\\u00E5ga\" :\n                                    \"Borttagen F\\u00F6rm\\u00E5ga\" :\n                                \"Ny F\\u00F6rm\\u00E5ga\"),\n                            content: \"<strike>\" + (oldText || '') + \"</strike><br/>\" + (newText || ''),\n                            mutations: function (br) {\n                                if (newId && abilitiesToAdd.has(newId)) {\n                                    var a = {\n                                        id: newId,\n                                        name: newText,\n                                        acl: [\"role:USER:R\"],\n                                        dateTime: Date.now()\n                                    };\n                                    br.add(\"abilities\", a);\n                                }\n                                if (oldText)\n                                    br.unlink2(\"subjects\", existingSubject.id, \"abilities\", oldId);\n                                if (newId)\n                                    br.link2(\"subjects\", existingSubject.id, \"abilities\", newId);\n                            }\n                        });\n                    });\n                    // 3. Update abilitiesOrder on Subject based on subjectToImport.abilities (mapped to ids in newTexts)\n                    if (!existingSubject.abilitiesOrder || abilityIdsToMigrate.size > 0) {\n                        existingSubject.abilitiesOrder = subjectToImport.abilities.map(function (xml) { return newAbilityTexts.get(xml); });\n                        changes.push({\n                            mutations: function (br) { return br.put(\"subjects\", existingSubject); },\n                            change: existingSubject.abilitiesOrder ?\n                                null : // Ändringen redan visuell som \"Uppdaterad för förmåga\", etc, ovan\n                                \"Inf\\u00F6r en ordnad lista p\\u00E5 f\\u00F6rm\\u00E5gor i databasen\",\n                        });\n                    }\n                    createdIds = new Set();\n                    changes.push({ mutations: function () { return createdIds.clear(); } }); // In case mutations run twice (which it doesn't as of current impl.)\n                    shownChanges = new Set();\n                    changes.push({ mutations: function () { return shownChanges.clear(); } });\n                    _loop_1 = function (template, instances) {\n                        var e_12, _a;\n                        // Find courseToImport\n                        var courseToImport = (subjectToImport.courses.find(function (c) { return c.name === template.name; }) ||\n                            subjectToImport.courses.find(function (c) { return c.code === template.code; }));\n                        // Find Central Content and Knowledge Requirements to migrate\n                        var _b = idsToMigratePerCourse.find(function (x) { return x.courseCode === template.code; }), ccsToMigrate = _b.ccsToMigrate, krsToMigrate = _b.krsToMigrate;\n                        try {\n                            // Loop through all course instances (instances also contains templates)\n                            // and migrate them. This will include creating missing entities in the DB.\n                            for (var instances_1 = (e_12 = void 0, tslib_1.__values(instances)), instances_1_1 = instances_1.next(); !instances_1_1.done; instances_1_1 = instances_1.next()) {\n                                var course = instances_1_1.value;\n                                migrateCourseInstance(course, courseToImport, { ccsToMigrate: ccsToMigrate, krsToMigrate: krsToMigrate });\n                            }\n                        }\n                        catch (e_12_1) { e_12 = { error: e_12_1 }; }\n                        finally {\n                            try {\n                                if (instances_1_1 && !instances_1_1.done && (_a = instances_1.return)) _a.call(instances_1);\n                            }\n                            finally { if (e_12) throw e_12.error; }\n                        }\n                    };\n                    try {\n                        // Courses:\n                        // 1. Go through all course instances and:\n                        //      A: Remove links from courses to abilities listed in abilityIdsToMigrate.keys()\n                        //      B: Add links from courses to abilities abiltitiesToMigrate.values()\n                        //      C: Update abilitiesOrder on course instances based on subjectToImport (mapped to ids in newTexts)\n                        // 2, 3: Do the same for central-content and knowledge-requirementes:\n                        //    Find ccs and krs to migrate based on courseInstance.code\n                        //    For both ccs and krs, do:\n                        //      A: Unlink ccsToMigrate.keys()\n                        //      B: Link ccsToMigrate.values()\n                        //      C: Update centralContentOrder based on subjectToImport.centralContent mapped to newTexts ids\n                        //      (same for krsToMigrate, with knowledgeRequirementsOrder instead)\n                        for (courseSets_2 = tslib_1.__values(courseSets), courseSets_2_1 = courseSets_2.next(); !courseSets_2_1.done; courseSets_2_1 = courseSets_2.next()) {\n                            _h = courseSets_2_1.value, template = _h.template, instances = _h.instances;\n                            _loop_1(template, instances);\n                        }\n                    }\n                    catch (e_6_1) { e_6 = { error: e_6_1 }; }\n                    finally {\n                        try {\n                            if (courseSets_2_1 && !courseSets_2_1.done && (_o = courseSets_2.return)) _o.call(courseSets_2);\n                        }\n                        finally { if (e_6) throw e_6.error; }\n                    }\n                    return [4 /*yield*/, migrateTasks()];\n                case 1:\n                    _p.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport env from '../../../globals/KED.env';\nimport { Spinner } from \"../sub-components/spinner\";\nvar ShowSubjectInner = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowSubjectInner, _super);\n    function ShowSubjectInner(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = { subject: null };\n        return _this;\n    }\n    ShowSubjectInner.prototype.componentWillMount = function () {\n        this.load();\n    };\n    ShowSubjectInner.prototype.load = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var subject;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, env.kedBackendClient.get('subjects', this.props.id, { include: 'courseTemplates' })];\n                    case 1:\n                        subject = _a.sent();\n                        this.setState({ subject: subject });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ShowSubjectInner.prototype.render = function () {\n        if (!this.state.subject)\n            return React.createElement(\"p\", null,\n                React.createElement(Spinner, null));\n        var _a = this.state.subject, name = _a.name, code = _a.code, courseTemplates = _a.courseTemplates, schoolType = _a.schoolType;\n        return React.createElement(\"div\", null, schoolType === 'primary' ? React.createElement(React.Fragment, null,\n            React.createElement(\"h2\", null,\n                \"Grundskole\\u00E4mnet \",\n                name,\n                \" (\",\n                code,\n                \")\"),\n            React.createElement(\"ul\", { className: \"entity-list\" }, courseTemplates.map(function (_a) {\n                var id = _a.id, code = _a.code, publishable = _a.publishable, points = _a.points, schoolGrade = _a.schoolGrade;\n                return React.createElement(\"li\", { key: id, className: \"complete\" },\n                    name,\n                    \" f\\u00F6r \\u00E5rskurs \",\n                    schoolGrade);\n            }))) : React.createElement(React.Fragment, null,\n            React.createElement(\"h2\", null,\n                \"Kurser f\\u00F6r \\u00E4mnet \",\n                name,\n                \" (\",\n                code,\n                \")\"),\n            React.createElement(\"ul\", { className: \"entity-list\" }, courseTemplates.map(function (_a) {\n                var id = _a.id, name = _a.name, code = _a.code, publishable = _a.publishable, points = _a.points;\n                return React.createElement(\"li\", { key: id, className: \"complete\" },\n                    name,\n                    \" - \",\n                    points,\n                    \"p\");\n            }))));\n    };\n    return ShowSubjectInner;\n}(React.Component));\nexport { ShowSubjectInner };\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport env from '../../../globals/KED.env';\nimport { CourseBanner } from \"../courses/course-banner\";\nimport { Spinner } from \"../sub-components/spinner\";\nimport { ShowSubjectInner } from './show-subject-inner';\nvar ShowSubject = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowSubject, _super);\n    function ShowSubject(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = { subject: null };\n        return _this;\n    }\n    ShowSubject.prototype.componentWillMount = function () {\n        this.load();\n    };\n    ShowSubject.prototype.load = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var subject;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, env.kedBackendClient.get('subjects', this.props.id, { include: 'courseTemplates' })];\n                    case 1:\n                        subject = _a.sent();\n                        this.setState({ subject: subject });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ShowSubject.prototype.render = function () {\n        if (!this.state.subject)\n            return React.createElement(\"p\", null,\n                React.createElement(Spinner, null));\n        var _a = this.state.subject, name = _a.name, code = _a.code, courseTemplates = _a.courseTemplates, schoolType = _a.schoolType;\n        return React.createElement(\"div\", null,\n            React.createElement(CourseBanner, { title: name, activePage: \"subjects\", routes: { feedback: this.props.feedbackUrl } }),\n            React.createElement(ShowSubjectInner, { id: this.props.id }));\n    };\n    return ShowSubject;\n}(React.Component));\nexport { ShowSubject };\n","export function parseSkolverketYears(inYear) {\n    switch (inYear.trim()) {\n        case '3':\n        case '1-3':\n            return ['1-3'];\n        case '6':\n        case '4-6':\n            return ['4-6'];\n        case '7-9':\n        case '9':\n            return ['7-9'];\n        // Specials\n        case '1': return [\"1-3\"]; // Förekommer i ämnena \"Svenska\" och \"Svenska som andraspråk\"\n        case '1s': return [\"1-3\"]; // Förekommer i ämnena \"Svenska\" och \"Svenska som andraspråk\"\n        case '1-6': return [\"1-3\", \"4-6\"]; // Förekommer i ämnet \"Hem- och konsumentkunskap\"\n        case '4-9': return [\"4-6\", \"7-9\"]; // Förekommer i ämnet \"Moderna språk\"\n        default: {\n            throw new Error(\"Unexpected year in Skolverket XML: \" + inYear + \". Expecting 3,6,9 or 1-3, 4-6, 7-9\");\n        }\n    }\n}\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { L, showInfo, compareProp, arrayToLookup, flatten } from '../../../utils/utils';\nimport env from '../../../globals/KED.env';\nimport $ from 'jquery';\nimport { parseSkolverketYears } from './skolverket-subject';\nimport { UploadedSubject } from './uploaded-subject';\nexport { ShowSubject } from './show-subject';\nimport { Link } from 'react-router-dom';\nimport { readBlobAsText, allowCopy } from \"../utils\";\nimport { Spinner } from \"../sub-components/spinner\";\nvar SubjectsInner = /** @class */ (function (_super) {\n    tslib_1.__extends(SubjectsInner, _super);\n    function SubjectsInner(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            isListingSubjects: true,\n            gymnasiumSubjects: [],\n            primarySchoolSubjects: [],\n            uploadedSubject: null\n        };\n        return _this;\n    }\n    SubjectsInner.prototype.componentWillMount = function () {\n        this.load();\n    };\n    SubjectsInner.prototype.load = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var subjects, gymnasiumSubjects, primarySchoolSubjects;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, env.kedBackendClient.list(\"subjects\")];\n                    case 1:\n                        subjects = _a.sent();\n                        subjects.sort(compareProp(\"name\"));\n                        gymnasiumSubjects = subjects.filter(function (s) { return s.schoolType !== 'primary'; });\n                        primarySchoolSubjects = subjects.filter(function (s) { return s.schoolType === 'primary'; });\n                        this.setState({ gymnasiumSubjects: gymnasiumSubjects, primarySchoolSubjects: primarySchoolSubjects, isListingSubjects: false });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SubjectsInner.prototype.handleFileSelect = function (ev) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var files, xml, doc, typeOfSchooling, schoolType, model, courses, i, course, knownledgeRequirements, centralContents, knowledgeRequirements, centralContentsByStadium_1, knowledgeRequirementsByStadium_1, subjectName_1, subjectCode_1, subjectPurpose, coursesByStadium, model;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        ev.stopPropagation();\n                        ev.preventDefault();\n                        files = ev.dataTransfer.files;\n                        return [4 /*yield*/, readBlobAsText(files[0])];\n                    case 1:\n                        xml = _a.sent();\n                        doc = $($.parseXML(xml));\n                        typeOfSchooling = doc.find(\"subject>originatorTypeOfSchooling\").text().trim() ||\n                            doc.find(\"subject>typeOfSchooling\").text().trim();\n                        schoolType = typeOfSchooling === \"COMPULSORY_SCHOOL\" ?\n                            'primary' :\n                            typeOfSchooling === \"UPPER_SECONDARY_EDUCATION\" ?\n                                'gymnasium' :\n                                null;\n                        if (schoolType === 'gymnasium') {\n                            model = {\n                                name: doc.find(\"subject>name\").text().trim(),\n                                code: doc.find(\"subject>code\").text().trim(),\n                                purpose: doc.find(\"subject>purpose\").text().trim(),\n                                courses: [],\n                                schoolType: 'gymnasium'\n                            };\n                            courses = doc.find(\"subject>courses\");\n                            for (i = 0; i < courses.length; ++i) {\n                                course = $(courses[i]);\n                                knownledgeRequirements = [].slice.call(course.find(\"knowledgeRequirements\"))\n                                    .map(function (r) { return ({\n                                    gradeStep: $(r).find('gradeStep').text().trim(),\n                                    text: $(r).find('text').text().trim()\n                                }); });\n                                model.courses.push({\n                                    name: course.find(\"name\").text().trim(),\n                                    code: course.find(\"code\").text().trim(),\n                                    centralContent: course.find(\"centralContent\").text().trim(),\n                                    points: parseInt(course.find(\"point\").text().trim()),\n                                    knownledgeRequirements: knownledgeRequirements,\n                                });\n                            }\n                            this.setState({ uploadedSubject: model });\n                        }\n                        else {\n                            centralContents = flatten(Array.from(doc.find(\"subject>centralContent\"))\n                                .map(function (cc) {\n                                var year = $(cc).find('year').text().trim();\n                                var typeOfCentralContent = $(cc).find('typeOfCentralContent').text().trim();\n                                if (typeOfCentralContent) {\n                                    // Do not yet support multiple types of central content.\n                                    throw new Error(L(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\u00C4mnet inneh\\u00E5ller flera parallella typer av centralt inneh\\u00E5ll. Detta st\\u00F6ds \\u00E4nnu inte.\"], [\"\\u00C4mnet inneh\\u00E5ller flera parallella typer av centralt inneh\\u00E5ll. Detta st\\u00F6ds \\u00E4nnu inte.\"]))));\n                                }\n                                var stadiums = parseSkolverketYears(year);\n                                var centralContentsForEachStadium = stadiums.map(function (stadium) { return ({\n                                    year: stadium,\n                                    text: $(cc).find('text').text().trim()\n                                }); });\n                                return centralContentsForEachStadium;\n                            }));\n                            knowledgeRequirements = flatten(Array.from(doc.find(\"subject>knowledgeRequirement\"))\n                                .map(function (kr) {\n                                var year = $(kr).find('year').text().trim();\n                                var typeOfRequirement = $(kr).find('typeOfRequirement').text().trim();\n                                if (typeOfRequirement) {\n                                    // Do not yet support multiple types of knowledge requirement.\n                                    throw new Error(L(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\u00C4mnet inneh\\u00E5ller flera parallella typer av kunskapskrav. Detta st\\u00F6ds \\u00E4nnu inte.\"], [\"\\u00C4mnet inneh\\u00E5ller flera parallella typer av kunskapskrav. Detta st\\u00F6ds \\u00E4nnu inte.\"]))));\n                                }\n                                return parseSkolverketYears(year).map(function (stadium) { return ({\n                                    year: stadium,\n                                    text: $(kr).find('text').text().trim(),\n                                    gradeStep: $(kr).find('gradeStep').text().trim()\n                                }); });\n                            }));\n                            centralContentsByStadium_1 = arrayToLookup(centralContents, function (cc) { return cc.year; });\n                            knowledgeRequirementsByStadium_1 = arrayToLookup(knowledgeRequirements, function (kr) { return kr.year; });\n                            subjectName_1 = doc.find(\"subject>name\").text().trim();\n                            subjectCode_1 = doc.find(\"subject>code\").text().trim();\n                            subjectPurpose = doc.find(\"subject>purpose\").text().trim();\n                            coursesByStadium = ['1-3', '4-6', '7-9']\n                                .map(function (stadium) { return ({\n                                name: subjectName_1 + ' ' + stadium,\n                                code: subjectCode_1 + '|' + stadium,\n                                points: 0,\n                                year: stadium,\n                                centralContent: (centralContentsByStadium_1[stadium] || []).map(function (cc) { return cc.text; }).join('\\n'),\n                                knownledgeRequirements: (knowledgeRequirementsByStadium_1[stadium] || []).map(function (_a) {\n                                    var gradeStep = _a.gradeStep, text = _a.text;\n                                    return ({ gradeStep: gradeStep, text: text });\n                                })\n                            }); });\n                            model = {\n                                name: subjectName_1,\n                                code: subjectCode_1,\n                                purpose: subjectPurpose,\n                                schoolType: 'primary',\n                                courses: coursesByStadium\n                            };\n                            this.setState({ uploadedSubject: model });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SubjectsInner.prototype.onImportSuccess = function (subject) {\n        showInfo(L(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"Importen av \", \" lyckades\"], [\"Importen av \", \" lyckades\"])), subject));\n        this.setState({ uploadedSubject: null });\n        this.load();\n    };\n    SubjectsInner.prototype.render = function () {\n        var _this = this;\n        var linkPrefix = this.props.linkPrefix;\n        return React.createElement(\"div\", null, this.state.uploadedSubject ?\n            React.createElement(UploadedSubject, { onCancel: function () { return _this.setState({ uploadedSubject: null }); }, onImportSuccess: function (subject) { return _this.onImportSuccess(subject); }, subject: this.state.uploadedSubject })\n            : this.state.isListingSubjects ?\n                React.createElement(\"div\", null,\n                    React.createElement(\"p\", null,\n                        React.createElement(Spinner, null),\n                        \"Var god v\\u00E4nta medan \\u00E4mnen h\\u00E4mtas...\")) :\n                React.createElement(\"div\", null,\n                    React.createElement(\"h2\", null, L(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject([\"Gymnasie\\u00E4mnen\"], [\"Gymnasie\\u00E4mnen\"])))),\n                    React.createElement(\"ul\", null, this.state.gymnasiumSubjects.map(function (s) {\n                        return React.createElement(\"li\", { key: s.id, className: s.publishable ? \"complete\" : \"incomplete\" },\n                            React.createElement(Link, { to: linkPrefix + s.id }, s.name));\n                    })),\n                    React.createElement(\"h2\", null, L(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject([\"Grundskole\\u00E4mnen\"], [\"Grundskole\\u00E4mnen\"])))),\n                    React.createElement(\"ul\", null, this.state.primarySchoolSubjects.map(function (s) {\n                        return React.createElement(\"li\", { key: s.id, className: s.publishable ? \"complete\" : \"incomplete\" },\n                            React.createElement(Link, { to: linkPrefix + s.id }, s.name));\n                    })),\n                    React.createElement(\"div\", { className: \"drop-zone\", onDragOver: allowCopy, onDrop: function (ev) { return _this.handleFileSelect(ev); } },\n                        \"Droppa Subject-fil h\\u00E4r fr\\u00E5n skolverket (H\\u00E4mtas fr\\u00E5n \",\n                        React.createElement(\"a\", { href: \"http://opendata.skolverket.se\", target: \"skolverket\" }, \"opendata.skolverket.se\"),\n                        \")\")));\n    };\n    return SubjectsInner;\n}(React.Component));\nexport { SubjectsInner };\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { L } from '../../../utils/utils';\nimport $ from 'jquery';\nimport env from '../../../globals/KED.env';\nimport { createUUID } from 'kedbackend/client';\nimport { diffXmlWithDatabase } from './diff/diff-xml-with-database';\nvar UploadedSubject = /** @class */ (function (_super) {\n    tslib_1.__extends(UploadedSubject, _super);\n    function UploadedSubject(props) {\n        var _this = _super.call(this, props) || this;\n        _this.coursesElems = {};\n        _this.centralContentElems = [];\n        _this.knowledgeRequirementElems = [];\n        _this.state = {\n            showFullText: false,\n            changes: [],\n            isWorking: true,\n            isImporting: false\n        };\n        return _this;\n    }\n    UploadedSubject.prototype.componentDidMount = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, changes, subjectToImport, error_1;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.addClassesForCherryPickedElements();\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, 4, 5]);\n                        return [4 /*yield*/, this.diffWithExisting()];\n                    case 2:\n                        _a = _b.sent(), changes = _a.changes, subjectToImport = _a.subjectToImport;\n                        this.setState({ changes: changes, subjectToImport: subjectToImport });\n                        return [3 /*break*/, 5];\n                    case 3:\n                        error_1 = _b.sent();\n                        this.setState({ error: '' + error_1 });\n                        return [3 /*break*/, 5];\n                    case 4:\n                        this.setState({ isWorking: false });\n                        return [7 /*endfinally*/];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    UploadedSubject.prototype.addClassesForCherryPickedElements = function () {\n        var abilities = $(this.purposeElem).find('li').first().parent().children('li');\n        abilities.addClass('ability');\n        var centralContents = $(this.centralContentElems).find('li');\n        centralContents.addClass('central-content');\n        var knowledgeRequirements = $(this.knowledgeRequirementElems).find('p');\n        knowledgeRequirements.addClass('knowledge-requirement');\n        var all = $([abilities, centralContents, knowledgeRequirements]);\n        all.addClass('marked-area');\n    };\n    UploadedSubject.prototype.cherryPickData = function () {\n        var _this = this;\n        //\n        // Reads elements (tagged by classes in addClassesForCherryPickedElements()) and converts their inner HTML to the corresponding\n        // model SubjectToImport. Note that if we need to adjust how to pick the right LI or P elements, we\n        // will only need to change the code in addClassesForCherryPickedElements(), not this code.\n        //\n        var skolSubject = this.props.subject;\n        var abilitiesLis = Array.from($(this.purposeElem).find('li').first().parent().children('li'));\n        var abilities = abilitiesLis.map(function (a, i) { return (i + 1 + \". \" + $(a).html()).trim(); }).filter(function (html) { return !!html; });\n        var result = {\n            name: skolSubject.name,\n            code: skolSubject.code,\n            schoolType: skolSubject.schoolType,\n            abilities: abilities,\n            courses: Object.keys(this.coursesElems)\n                .map(function (courseCode) { return _this.coursesElems[courseCode]; })\n                .map(function (_a) {\n                var course = _a.course, elem = _a.elem;\n                return ({\n                    name: course.name,\n                    year: course.year,\n                    code: course.code,\n                    points: course.points,\n                    centralContent: Array.from($(elem).find('.central-content')).map(function (c) { return ({\n                        html: $(c).html().trim(),\n                        group: $(c).parent('ul').prev('h4').text().trim()\n                    }); }).filter(function (_a) {\n                        var html = _a.html;\n                        return !!html;\n                    }),\n                    knowledgeRequirements: Array.from($(elem).find('.grade-step-none .knowledge-requirement')).map(function (r) { return $(r).html().trim(); })\n                        .filter(function (html) { return !!html; })\n                        .map(function (html) { return ({ gradeStep: null, html: html }); })\n                        .concat(Array.from($(elem).find('.grade-step-E .knowledge-requirement')).map(function (r) { return $(r).html().trim(); })\n                        .filter(function (html) { return !!html; })\n                        .map(function (html) { return ({ gradeStep: \"E\", html: html }); })\n                        .concat(Array.from($(elem).find('.grade-step-C .knowledge-requirement')).map(function (r) { return $(r).html().trim(); })\n                        .filter(function (html) { return !!html; })\n                        .map(function (html) { return ({ gradeStep: \"C\", html: html }); }))\n                        .concat(Array.from($(elem).find('.grade-step-A .knowledge-requirement')).map(function (r) { return $(r).html().trim(); })\n                        .filter(function (html) { return !!html; })\n                        .map(function (html) { return ({ gradeStep: \"A\", html: html }); })))\n                });\n            })\n        };\n        return result;\n    };\n    UploadedSubject.prototype.diffWithExisting = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            function ct() {\n                var rv = createTime;\n                createTime += 2;\n                return rv;\n            }\n            var subjectToImport, changes, existingSubjects, existingSubject, centralContent, knowledgeRequirements, createTime, newSubject_1, subjectAbilities, _loop_1, _a, _b, a, _loop_2, _c, _d, c;\n            var e_1, _e, e_2, _f;\n            var _this = this;\n            return tslib_1.__generator(this, function (_g) {\n                switch (_g.label) {\n                    case 0:\n                        subjectToImport = this.cherryPickData();\n                        changes = [];\n                        return [4 /*yield*/, env.kedBackendClient.list(\"subjects\")];\n                    case 1:\n                        existingSubjects = _g.sent();\n                        existingSubject = existingSubjects.filter(function (s) { return s.code === _this.props.subject.code; })[0];\n                        centralContent = [], knowledgeRequirements = [];\n                        createTime = Date.now();\n                        if (!existingSubject) return [3 /*break*/, 3];\n                        // Include abilities and standardCourses with the found Subject:\n                        return [4 /*yield*/, diffXmlWithDatabase(existingSubject, subjectToImport, changes)];\n                    case 2:\n                        // Include abilities and standardCourses with the found Subject:\n                        _g.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        newSubject_1 = existingSubject = {\n                            id: createUUID(),\n                            schoolType: subjectToImport.schoolType,\n                            tags: [\"schoolType:\" + subjectToImport.schoolType],\n                            acl: [\"role:USER:R\"],\n                            code: subjectToImport.code,\n                            name: subjectToImport.name,\n                            abilitiesOrder: [],\n                            publishable: false,\n                            dateTime: ct()\n                        };\n                        changes.push({\n                            change: \"Nytt ämne\",\n                            content: subjectToImport.name + \" (\" + subjectToImport.code + \")\",\n                            mutations: function (r) { return r.add(\"subjects\", newSubject_1); }\n                        });\n                        subjectAbilities = [];\n                        _loop_1 = function (a) {\n                            var newAbility = {\n                                id: createUUID(),\n                                name: a,\n                                acl: [\"role:USER:R\"],\n                                dateTime: ct()\n                            };\n                            subjectAbilities.push(newAbility); // To refer from in courses later on!\n                            changes.push({\n                                change: \"Ny förmåga\",\n                                content: a,\n                                mutations: function (r) {\n                                    r.add(\"abilities\", newAbility);\n                                    r.link(\"subjects\", newSubject_1.id, \"abilities\", newAbility.id, \"abilities\");\n                                }\n                            });\n                        };\n                        try {\n                            for (_a = tslib_1.__values(subjectToImport.abilities), _b = _a.next(); !_b.done; _b = _a.next()) {\n                                a = _b.value;\n                                _loop_1(a);\n                            }\n                        }\n                        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                        finally {\n                            try {\n                                if (_b && !_b.done && (_e = _a.return)) _e.call(_a);\n                            }\n                            finally { if (e_1) throw e_1.error; }\n                        }\n                        // Update now when we have abilities order:\n                        newSubject_1.abilitiesOrder = subjectAbilities.map(function (_a) {\n                            var id = _a.id;\n                            return id;\n                        });\n                        _loop_2 = function (c) {\n                            var e_3, _a, e_4, _b, e_5, _c;\n                            var newCourse = {\n                                id: createUUID(),\n                                subjectCode: newSubject_1.code,\n                                schoolType: newSubject_1.schoolType,\n                                tags: [\n                                    \"sub:\" + newSubject_1.code,\n                                    \"course:\" + c.code,\n                                    \"schoolType:\" + newSubject_1.schoolType\n                                ],\n                                dateTime: ct(),\n                                isTemplate: true,\n                                acl: [\"role:EMPLOYEE:R\"],\n                                name: c.name,\n                                code: c.code,\n                                points: c.points,\n                                modules: [],\n                                subjectId: newSubject_1.id,\n                                resources: [],\n                                createdBy: { name: env.currentUser.displayName, url: \"mailto:\" + env.currentUser.mail },\n                                createdDate: Date.now(),\n                                knowledgeRequirementsOrder: [],\n                                centralContentOrder: [],\n                                abilitiesOrder: subjectAbilities.map(function (_a) {\n                                    var id = _a.id;\n                                    return id;\n                                })\n                            };\n                            if (c.year)\n                                newCourse.schoolGrade = c.year;\n                            changes.push({\n                                change: \"Ny kurs\",\n                                content: c.name,\n                                mutations: function (r) {\n                                    r.add(\"courses\", newCourse);\n                                    r.link(\"subjects\", newSubject_1.id, \"courses\", newCourse.id, \"courseTemplates\");\n                                }\n                            });\n                            var _loop_3 = function (ccGroup, html) {\n                                // Check if there exists an identical central content on previous course first\n                                var newCentralContent = centralContent.filter(function (cc) { return cc.name === html; })[0];\n                                if (!newCentralContent) {\n                                    newCentralContent = {\n                                        id: createUUID(),\n                                        dateTime: ct(),\n                                        name: html,\n                                        acl: [\"role:USER:R\"]\n                                    };\n                                    if (ccGroup)\n                                        newCentralContent.group = ccGroup;\n                                    centralContent.push(newCentralContent);\n                                    changes.push({\n                                        change: \"Nytt centralt innehåll\",\n                                        content: \"<h4>\" + ccGroup + \"</h4>\" + html,\n                                        mutations: function (r) {\n                                            r.add(\"central-content\", newCentralContent);\n                                            r.link(\"courses\", newCourse.id, \"central-content\", newCentralContent.id, \"centralContent\");\n                                        }\n                                    });\n                                }\n                                else {\n                                    changes.push({\n                                        mutations: function (r) {\n                                            r.link(\"courses\", newCourse.id, \"central-content\", newCentralContent.id, \"centralContent\");\n                                        }\n                                    });\n                                }\n                                // Register the order in which this central content appeared in the XML:\n                                newCourse.centralContentOrder.push(newCentralContent.id);\n                            };\n                            try {\n                                for (var _d = (e_3 = void 0, tslib_1.__values(c.centralContent)), _e = _d.next(); !_e.done; _e = _d.next()) {\n                                    var _f = _e.value, ccGroup = _f.group, html = _f.html;\n                                    _loop_3(ccGroup, html);\n                                }\n                            }\n                            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                            finally {\n                                try {\n                                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n                                }\n                                finally { if (e_3) throw e_3.error; }\n                            }\n                            var _loop_4 = function (cr) {\n                                var newKnowledgeRequirement = knowledgeRequirements.filter(function (kr) { return kr.name === cr.html && kr.gradeStep === cr.gradeStep; })[0];\n                                if (!newKnowledgeRequirement) {\n                                    newKnowledgeRequirement = {\n                                        id: createUUID(),\n                                        dateTime: ct(),\n                                        name: cr.html,\n                                        gradeStep: cr.gradeStep,\n                                        acl: [\"role:USER:R\"]\n                                    };\n                                    knowledgeRequirements.push(newKnowledgeRequirement);\n                                    changes.push({\n                                        change: \"Nytt kunskapskrav för betyget \" + cr.gradeStep,\n                                        content: cr.html,\n                                        mutations: function (r) {\n                                            r.add(\"knowledge-requirements\", newKnowledgeRequirement);\n                                            r.link(\"courses\", newCourse.id, \"knowledge-requirements\", newKnowledgeRequirement.id, \"knowledgeRequirements\");\n                                        }\n                                    });\n                                }\n                                else {\n                                    changes.push({\n                                        mutations: function (r) {\n                                            r.link(\"courses\", newCourse.id, \"knowledge-requirements\", newKnowledgeRequirement.id, \"knowledgeRequirements\");\n                                        }\n                                    });\n                                }\n                                // Register the order in which this knowledge requirement appeared in the XML:\n                                newCourse.knowledgeRequirementsOrder.push(newKnowledgeRequirement.id);\n                            };\n                            try {\n                                for (var _g = (e_4 = void 0, tslib_1.__values(c.knowledgeRequirements)), _h = _g.next(); !_h.done; _h = _g.next()) {\n                                    var cr = _h.value;\n                                    _loop_4(cr);\n                                }\n                            }\n                            catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                            finally {\n                                try {\n                                    if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n                                }\n                                finally { if (e_4) throw e_4.error; }\n                            }\n                            var _loop_5 = function (a) {\n                                changes.push({\n                                    mutations: function (r) {\n                                        r.link(\"courses\", newCourse.id, \"abilities\", a.id, \"abilities\");\n                                    }\n                                });\n                            };\n                            try {\n                                // Build knowledge matrix\n                                // Link directly from course template to all abilities that the subject has:\n                                for (var subjectAbilities_1 = (e_5 = void 0, tslib_1.__values(subjectAbilities)), subjectAbilities_1_1 = subjectAbilities_1.next(); !subjectAbilities_1_1.done; subjectAbilities_1_1 = subjectAbilities_1.next()) {\n                                    var a = subjectAbilities_1_1.value;\n                                    _loop_5(a);\n                                }\n                            }\n                            catch (e_5_1) { e_5 = { error: e_5_1 }; }\n                            finally {\n                                try {\n                                    if (subjectAbilities_1_1 && !subjectAbilities_1_1.done && (_c = subjectAbilities_1.return)) _c.call(subjectAbilities_1);\n                                }\n                                finally { if (e_5) throw e_5.error; }\n                            }\n                        };\n                        try {\n                            for (_c = tslib_1.__values(subjectToImport.courses), _d = _c.next(); !_d.done; _d = _c.next()) {\n                                c = _d.value;\n                                _loop_2(c);\n                            }\n                        }\n                        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                        finally {\n                            try {\n                                if (_d && !_d.done && (_f = _c.return)) _f.call(_c);\n                            }\n                            finally { if (e_2) throw e_2.error; }\n                        }\n                        _g.label = 4;\n                    case 4: return [2 /*return*/, { changes: changes, subjectToImport: subjectToImport }];\n                }\n            });\n        });\n    };\n    UploadedSubject.prototype.cancel = function () {\n        this.props.onCancel();\n    };\n    UploadedSubject.prototype.import = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var allMutations;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.setState({ isWorking: true, isImporting: true });\n                        allMutations = this.state.changes.map(function (change) { return change.mutations; });\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 3, 4]);\n                        return [4 /*yield*/, env.kedBackendClient.do(function (r) {\n                                allMutations.forEach(function (mut) { return mut(r); });\n                            })];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        this.setState({ isWorking: false, isImporting: false });\n                        return [7 /*endfinally*/];\n                    case 4:\n                        this.props.onImportSuccess(this.props.subject.name);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    UploadedSubject.prototype.fixL = function (html) {\n        return html; //.replace('<l fromat=\"OL\">')\n    };\n    UploadedSubject.prototype.render = function () {\n        var _this = this;\n        var subjectToImport = this.state.subjectToImport;\n        var subject = this.props.subject;\n        return React.createElement(\"div\", null,\n            React.createElement(\"h1\", null, L(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"Uppladdat \\u00C4mne \", \"\"], [\"Uppladdat \\u00C4mne \", \"\"])), subjectToImport ? subjectToImport.name : '')),\n            this.state.error ? React.createElement(\"p\", null,\n                \"Fel: \",\n                this.state.error) :\n                this.state.isWorking ? React.createElement(\"p\", null, \"Arbetar...\") :\n                    this.state.isImporting ? React.createElement(\"p\", null, \"Importerar...\") :\n                        this.state.changes.every(function (c) { return !c.change; }) ? // Inga ändringar att visa (bara pseudo-ändringar)\n                            React.createElement(\"div\", null,\n                                React.createElement(\"p\", null, \"Kunde inte finna n\\u00E5gra f\\u00F6r\\u00E4ndringar fr\\u00E5n befintligt data. Klicka OK f\\u00F6r att avbryta och \\u00E5terg\\u00E5.\"),\n                                React.createElement(\"button\", { onClick: function () { return _this.cancel(); } }, \" OK \")) :\n                            React.createElement(\"div\", null,\n                                React.createElement(\"table\", { style: { border: \"1px solid gray\", padding: \"2px\" } },\n                                    React.createElement(\"thead\", null,\n                                        React.createElement(\"tr\", null,\n                                            React.createElement(\"th\", { colSpan: 2 }, \"Granskning av \\u00E4ndringar i grund-data\")),\n                                        React.createElement(\"tr\", null,\n                                            React.createElement(\"th\", null, \"\\u00C4ndring\"),\n                                            React.createElement(\"th\", null, \"Inneh\\u00E5ll\"))),\n                                    React.createElement(\"tbody\", null, this.state.changes.filter(function (change) { return change.change; }).map(function (change, i) { return React.createElement(\"tr\", { key: i },\n                                        React.createElement(\"td\", { style: { padding: \"2px\" } }, change.change),\n                                        React.createElement(\"td\", { style: { padding: \"2px\" }, dangerouslySetInnerHTML: { __html: change.content } })); }))),\n                                React.createElement(\"button\", { onClick: function () { return _this.cancel(); }, disabled: this.state.isImporting }, \"Avbryt\"),\n                                React.createElement(\"button\", { onClick: function () { return _this.import(); }, disabled: this.state.isImporting }, \"Importera\"),\n                                React.createElement(\"br\", null)),\n            React.createElement(\"button\", { onClick: function () { return _this.setState({ showFullText: !_this.state.showFullText }); } }, this.state.showFullText ? L(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"D\\u00F6lj nedan\"], [\"D\\u00F6lj nedan\"]))) : L(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"Visa hela texten fr\\u00E5n Skolverket\"], [\"Visa hela texten fr\\u00E5n Skolverket\"])))),\n            React.createElement(\"table\", { style: { display: this.state.showFullText ? '' : 'none' } },\n                React.createElement(\"tbody\", null,\n                    React.createElement(\"tr\", null,\n                        React.createElement(\"th\", null, \"Namn\"),\n                        React.createElement(\"td\", null, subject.name)),\n                    React.createElement(\"tr\", null,\n                        React.createElement(\"th\", null, \"\\u00C4mneskod\"),\n                        React.createElement(\"td\", null, subject.code)),\n                    React.createElement(\"tr\", null,\n                        React.createElement(\"th\", null, \"Syfte\"),\n                        React.createElement(\"td\", { ref: function (elem) { return _this.purposeElem = elem; }, dangerouslySetInnerHTML: { __html: this.fixL(subject.purpose) } })),\n                    React.createElement(\"tr\", null,\n                        React.createElement(\"th\", null, \"Kurser\"),\n                        React.createElement(\"td\", null, subject.courses.map(function (course) { return React.createElement(\"table\", { key: course.code, ref: function (elem) { return _this.coursesElems[course.code] = { course: course, elem: elem }; } },\n                            React.createElement(\"tbody\", null,\n                                React.createElement(\"tr\", null,\n                                    React.createElement(\"th\", null, \"Kursens namn\"),\n                                    React.createElement(\"td\", null, course.name)),\n                                React.createElement(\"tr\", null,\n                                    React.createElement(\"th\", null, \"Kurskod\"),\n                                    React.createElement(\"td\", null, course.code)),\n                                React.createElement(\"tr\", null,\n                                    React.createElement(\"th\", null, \"Po\\u00E4ng\"),\n                                    React.createElement(\"td\", null, course.points)),\n                                React.createElement(\"tr\", null,\n                                    React.createElement(\"th\", null, \"Centralt inneh\\u00E5ll\"),\n                                    React.createElement(\"td\", { ref: function (elem) { return _this.centralContentElems.push(elem); }, dangerouslySetInnerHTML: { __html: _this.fixL(course.centralContent) } })),\n                                course.knownledgeRequirements.some(function (kr) { return !kr.gradeStep; }) ? React.createElement(\"tr\", null,\n                                    React.createElement(\"th\", null, \"Kunskapskrav utan betygs\\u00E4ttning\"),\n                                    React.createElement(\"td\", { className: \"grade-step-none\", ref: function (elem) { return _this.knowledgeRequirementElems.push(elem); }, dangerouslySetInnerHTML: { __html: _this.fixL(course.knownledgeRequirements.filter(function (r) { return !r.gradeStep; }).map(function (kr) { return kr.text; }).join('')) } })) : undefined,\n                                course.knownledgeRequirements.some(function (kr) { return kr.gradeStep === 'E'; }) ? React.createElement(\"tr\", null,\n                                    React.createElement(\"th\", null, \"Kunskapskrav Betyg E\"),\n                                    React.createElement(\"td\", { className: \"grade-step-E\", ref: function (elem) { return _this.knowledgeRequirementElems.push(elem); }, dangerouslySetInnerHTML: { __html: _this.fixL(course.knownledgeRequirements.filter(function (r) { return r.gradeStep === 'E'; }).map(function (kr) { return kr.text; }).join('')) } })) : undefined,\n                                course.knownledgeRequirements.some(function (kr) { return kr.gradeStep === 'C'; }) ? React.createElement(\"tr\", null,\n                                    React.createElement(\"th\", null, \"Kunskapskrav Betyg C\"),\n                                    React.createElement(\"td\", { className: \"grade-step-C\", ref: function (elem) { return _this.knowledgeRequirementElems.push(elem); }, dangerouslySetInnerHTML: { __html: _this.fixL(course.knownledgeRequirements.filter(function (r) { return r.gradeStep === 'C'; }).map(function (kr) { return kr.text; }).join('')) } })) : undefined,\n                                course.knownledgeRequirements.some(function (kr) { return kr.gradeStep === 'A'; }) ? React.createElement(\"tr\", null,\n                                    React.createElement(\"th\", null, \"Kunskapskrav Betyg A\"),\n                                    React.createElement(\"td\", { className: \"grade-step-A\", ref: function (elem) { return _this.knowledgeRequirementElems.push(elem); }, dangerouslySetInnerHTML: { __html: _this.fixL(course.knownledgeRequirements.filter(function (r) { return r.gradeStep === 'A'; }).map(function (kr) { return kr.text; }).join('')) } })) : undefined)); }))))));\n    };\n    return UploadedSubject;\n}(React.Component));\nexport { UploadedSubject };\nvar templateObject_1, templateObject_2, templateObject_3;\n","import * as tslib_1 from \"tslib\";\nimport moment from 'moment';\nimport { createUUID } from 'kedbackend/client';\nimport update from 'react-addons-update';\nimport $ from 'jquery';\nimport env from '../../globals/KED.env';\nexport function updateDocumentGraphs(oldDoc, newDoc, table, graphs, batch) {\n    var e_1, _a;\n    var docUpdates = {};\n    var docId = newDoc.id;\n    var _loop_1 = function (navProp) {\n        var e_2, _a, e_3, _b, e_4, _c;\n        var foreignTable = graphs[navProp];\n        var oldList = oldDoc[navProp] || [];\n        var newList = newDoc[navProp];\n        if (!newList)\n            return \"continue\";\n        var tuples = newList\n            .map(function (doc, idx) { return ({ doc: doc, idx: idx }); }); // Create tubles of {doc, array-index} so we can update result\n        var added = tuples.filter(function (tuple) { return !oldList.some(function (o) { return o.id === tuple.doc.id; }); }); // Find added items\n        try {\n            for (var added_1 = (e_2 = void 0, tslib_1.__values(added)), added_1_1 = added_1.next(); !added_1_1.done; added_1_1 = added_1.next()) {\n                var a = added_1_1.value;\n                var mutatedSubDoc = tslib_1.__assign({}, a.doc);\n                var meta = mutatedSubDoc.$meta;\n                delete mutatedSubDoc.$meta; // Delete $meta so that \"add\" or \"update\" does not persiste to next state.\n                if (meta === 'add') {\n                    if (!mutatedSubDoc.id)\n                        mutatedSubDoc.id = createUUID(); // Generate ID if not done yet.\n                    // Now put an 'add' mutation in the batch queue.\n                    batch.add(foreignTable, mutatedSubDoc);\n                }\n                else if (meta === 'update') {\n                    batch.put(foreignTable, mutatedSubDoc);\n                }\n                batch.link(table, docId, foreignTable, mutatedSubDoc.id, navProp);\n                // Update result so that state is reflected after succesful POST to server.\n                if (!docUpdates[navProp])\n                    docUpdates[navProp] = {};\n                docUpdates[navProp][a.idx] = { $set: mutatedSubDoc };\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (added_1_1 && !added_1_1.done && (_a = added_1.return)) _a.call(added_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        var removed = oldList.filter(function (o) { return !newList.some(function (n) { return n.id === o.id; }); });\n        try {\n            for (var removed_1 = (e_3 = void 0, tslib_1.__values(removed)), removed_1_1 = removed_1.next(); !removed_1_1.done; removed_1_1 = removed_1.next()) {\n                var r = removed_1_1.value;\n                batch.unlink(table, docId, foreignTable, r.id, navProp);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (removed_1_1 && !removed_1_1.done && (_b = removed_1.return)) _b.call(removed_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        var updated = tuples.filter(function (tuple) { return oldList.some(function (o) { return o.id === tuple.doc.id && tuple.doc.$meta === 'update'; }); });\n        try {\n            for (var updated_1 = (e_4 = void 0, tslib_1.__values(updated)), updated_1_1 = updated_1.next(); !updated_1_1.done; updated_1_1 = updated_1.next()) {\n                var u = updated_1_1.value;\n                var mutatedSubDoc = tslib_1.__assign({}, u.doc);\n                delete mutatedSubDoc.$meta;\n                batch.put(foreignTable, mutatedSubDoc);\n                // Update result so that $meta is removed from navigation prop after successful POST to server.\n                if (!docUpdates[navProp])\n                    docUpdates[navProp] = {};\n                docUpdates[navProp][u.idx] = { $set: mutatedSubDoc };\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (updated_1_1 && !updated_1_1.done && (_c = updated_1.return)) _c.call(updated_1);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n    };\n    try {\n        for (var _b = tslib_1.__values(Object.keys(graphs)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var navProp = _c.value;\n            _loop_1(navProp);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return update(newDoc, docUpdates);\n}\nexport function dtFormat(dateTime) {\n    return moment(dateTime).format('YYMMDD HH:mm');\n}\nexport function shortDateFormat(dateTime) {\n    return moment(dateTime).format('YYMMDD');\n}\nexport function shortPersonNameFormat(name) {\n    if (!name)\n        return \"\";\n    var names = name.split(' ').filter(function (n) { return !!n; });\n    var lastName = names.pop();\n    return names.map(function (name) { return name[0] + \".\"; }).concat(lastName).join(' ');\n}\nexport function updateModificationStamp(now, obj, user) {\n    return update(obj, {\n        dateTime: { $set: now },\n        modifiedDate: { $set: now },\n        modifiedBy: {\n            $set: {\n                name: user.displayName,\n                url: \"mailto:\" + user.mail\n            }\n        }\n    });\n}\nexport function updateCreationStamp(now, obj, user) {\n    return update(obj, {\n        createdDate: { $set: now },\n        createdBy: {\n            $set: {\n                name: user.displayName,\n                url: \"mailto:\" + user.mail\n            }\n        }\n    });\n}\nexport function getEmailFromDocAccess(resource) {\n    if (resource.email)\n        return resource.email;\n    return resource.url ?\n        resource.url.startsWith('mailto:') ?\n            resource.url.substring('mailto:'.length) :\n            resource.url :\n        resource.url;\n}\nexport function updateModificationAndCreationStamps(obj, user) {\n    var now = Date.now();\n    obj = updateModificationStamp(now, obj, user);\n    if (!obj.createdBy)\n        obj = updateCreationStamp(now, obj, user);\n    return obj;\n}\nexport function applyEtags(doc, newEtags, graphs) {\n    var e_5, _a;\n    var res = tslib_1.__assign({}, doc);\n    var etag = newEtags[doc.id];\n    if (etag)\n        res.$etag = etag;\n    try {\n        for (var graphs_1 = tslib_1.__values(graphs), graphs_1_1 = graphs_1.next(); !graphs_1_1.done; graphs_1_1 = graphs_1.next()) {\n            var label = graphs_1_1.value;\n            var newList = doc[label].map(function (d) { return applyEtags(d, newEtags, []); });\n            res[label] = newList;\n        }\n    }\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\n    finally {\n        try {\n            if (graphs_1_1 && !graphs_1_1.done && (_a = graphs_1.return)) _a.call(graphs_1);\n        }\n        finally { if (e_5) throw e_5.error; }\n    }\n    return res;\n}\nexport function readBlob(blob, m) {\n    return new Promise(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onload = function (ev) { return resolve(ev.target.result); };\n        reader.onabort = function (ev) { return reject(new Error(\"file read aborted\")); };\n        reader.onerror = function (ev) { return reject(ev.target.error); };\n        m(reader);\n    });\n}\nexport function readBlobAsText(blob) {\n    return readBlob(blob, function (r) { return r.readAsText(blob); });\n}\nexport function readBlobAsDataUrl(blob) {\n    return readBlob(blob, function (r) { return r.readAsDataURL(blob); });\n}\nexport function allowCopy(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'copy';\n}\nexport function updateCourseBuilderStatus(status) {\n    var div = $('div.course-builder')[0];\n    if (div)\n        div.className = \"course-builder\" + (status ? \" status \" + status : \"\");\n}\nexport function loadCourse(id, options) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var client, includeTemplateChain, includeTasks, _a, course, courseTasks, templateChain;\n        return tslib_1.__generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    client = env.kedBackendClient;\n                    includeTemplateChain = options && options.includeTemplateChain;\n                    includeTasks = !options || !options.include || options.include.indexOf(\"tasks\") !== -1;\n                    return [4 /*yield*/, Promise.all([\n                            client.get(\"courses\", id, {\n                                include: options && options.include ? options.include.filter(function (i) { return i !== \"tasks\"; }) : [\n                                    \"centralContent\",\n                                    \"knowledgeRequirements\",\n                                    \"abilities\",\n                                    \"images\",\n                                    \"acl\" // Don't include tasks here...\n                                ]\n                            }),\n                            // ... but include tasks here instead so that we can load the graphs for the\n                            // tasks as well!\n                            includeTasks && client.list(\"tasks\", {\n                                hasEdgesFrom: id,\n                                include: ['knowledgeRequirements', 'centralContent', 'abilities', 'acl'],\n                                flags: ['includeIdsOnly'] // Don't need redundant info that's already on course\n                            }),\n                            includeTemplateChain && client.list(\"courses\", {\n                                hasEdgesFrom: id,\n                                flags: ['idsOnly']\n                            })\n                        ])];\n                case 1:\n                    _a = tslib_1.__read.apply(void 0, [(_b.sent()), 3]), course = _a[0], courseTasks = _a[1], templateChain = _a[2];\n                    course.tasks = courseTasks;\n                    // Correct the order of Abilities\n                    if (course.abilities && course.abilitiesOrder) {\n                        course.abilities = course.abilitiesOrder.map(function (id) {\n                            return course.abilities.find(function (a) { return a.id === id; });\n                        });\n                    }\n                    // Correct the order of KnowledgeRequirements\n                    if (course.knowledgeRequirements && course.knowledgeRequirementsOrder) {\n                        course.knowledgeRequirements = course.knowledgeRequirementsOrder.map(function (id) {\n                            return course.knowledgeRequirements.find(function (c) { return c.id === id; });\n                        });\n                    }\n                    // Correct the order of CentralContent\n                    if (course.centralContent && course.centralContentOrder) {\n                        course.centralContent = course.centralContentOrder.map(function (id) {\n                            return course.centralContent.find(function (cc) { return cc.id === id; });\n                        }); //.filter(x => !!x);// Debugging somthin' . Normally the last .filter()... part should not be nescessary...\n                    }\n                    // Include template chain if requested.\n                    if (includeTemplateChain)\n                        course.templateChain = templateChain;\n                    return [2 /*return*/, course];\n            }\n        });\n    });\n}\n// Check differences between two array of type T\nexport function hasChanges(originalValues, currentValues) {\n    return originalValues === undefined || currentValues.filter(function (x) { return !originalValues.includes(x); }).length > 0 || originalValues.filter(function (x) { return !currentValues.includes(x); }).length > 0;\n}\n","import * as React from 'react';\nexport var LanguageContext = React.createContext({ intl: null });\n","import * as tslib_1 from \"tslib\";\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport locale_en from 'react-intl/locale-data/en';\nimport locale_sv from 'react-intl/locale-data/sv';\nimport messages_sv from \"../../translations/sv.json\";\nimport messages_en from \"../../translations/en.json\";\nimport * as React from 'react';\nimport cfg from '../../globals/KED.cfg';\nimport moment from 'moment';\nexport var setupIntl = function (Component) {\n    return /** @class */ (function (_super) {\n        tslib_1.__extends(_SetupLanguageIntl, _super);\n        function _SetupLanguageIntl(props) {\n            var _this = _super.call(this, props) || this;\n            addLocaleData(tslib_1.__spread(locale_en, locale_sv));\n            _this.messages = {\n                'sv': messages_sv,\n                'en': messages_en\n            };\n            moment().locale(cfg.KED_LOCALE);\n            return _this;\n        }\n        _SetupLanguageIntl.prototype.render = function () {\n            return React.createElement(IntlProvider, { locale: cfg.KED_LOCALE, messages: this.messages[cfg.KED_LOCALE] },\n                React.createElement(Component, tslib_1.__assign({}, this.props)));\n        };\n        return _SetupLanguageIntl;\n    }(React.Component));\n};\n","import React from 'react';\nexport var Checklist = function (_a) {\n    var available = _a.available, selected = _a.selected, onChange = _a.onChange;\n    return React.createElement(\"div\", { className: \"taskContainer\" }, available.map(function (_a) {\n        var key = _a.key, name = _a.name;\n        var checked = selected.includes(key);\n        return React.createElement(\"div\", { key: key, className: \"align-horizontal\" },\n            React.createElement(\"div\", { className: \"horizontalItem top\", onClick: function () {\n                    return onChange(checked ?\n                        selected.filter(function (k) { return k != key; }) :\n                        selected.concat(key), key, checked);\n                } },\n                React.createElement(\"div\", { className: \"checkBox\" + (checked ? \" checked\" : \"\") })),\n            React.createElement(\"div\", { className: \"horizontalItem top\" }, name));\n    }));\n};\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { FormField } from './form-field';\nvar TextInput = /** @class */ (function (_super) {\n    tslib_1.__extends(TextInput, _super);\n    function TextInput(props) {\n        return _super.call(this, props) || this;\n    }\n    TextInput.prototype.componentDidMount = function () {\n        var _this = this;\n        if (this.props.autoSelect) {\n            setTimeout(function () {\n                try {\n                    _this.input.select();\n                    _this.input.focus();\n                }\n                catch (e) { }\n            }, 50);\n        }\n    };\n    TextInput.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(FormField, { label: this.props.label },\n            React.createElement(\"div\", null,\n                React.createElement(\"input\", { type: \"text\", autoFocus: this.props.autoFocus, id: this.props.id, size: this.props.size || 35, value: this.props.value, onChange: this.props.onChange && (function (ev) { return _this.props.onChange(ev.target.value); }), disabled: this.props.disabled, placeholder: this.props.placeholder, ref: function (elem) { return _this.input = elem; } }),\n                this.props.additionalJsx)));\n    };\n    return TextInput;\n}(React.Component));\nexport { TextInput };\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { FormField } from './form-field';\nvar TextAreaFormField = /** @class */ (function (_super) {\n    tslib_1.__extends(TextAreaFormField, _super);\n    function TextAreaFormField(props) {\n        return _super.call(this, props) || this;\n    }\n    TextAreaFormField.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(FormField, { label: this.props.label, id: this.props.id },\n            React.createElement(\"div\", { className: \"align-horizontal\" },\n                React.createElement(\"div\", { className: \"horizontalItem top\" },\n                    React.createElement(\"textarea\", { autoFocus: this.props.autoFocus, id: this.props.id, cols: 35, rows: this.props.rows || 5, value: this.props.value, onChange: function (ev) { return _this.props.onChange(ev.target.value); }, placeholder: this.props.placeholder })),\n                !!this.props.children && React.createElement(\"div\", { className: \"horizontalItem\" }, this.props.children))));\n    };\n    return TextAreaFormField;\n}(React.Component));\nexport { TextAreaFormField };\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nfunction findId(node) {\n    var recucheck = new Set();\n    return (function findId(node) {\n        if (typeof node === 'string')\n            return null;\n        if (recucheck.has(node)) {\n            return;\n        }\n        recucheck.add(node);\n        if (node.props) {\n            if (node.props.id)\n                return node.props.id;\n            if (node.props.children) {\n                return findId(node.props.children);\n            }\n            return;\n        }\n        if (node.length) {\n            for (var i = 0; i < node.length; ++i) {\n                var child = node[i];\n                if (child) {\n                    var childId = findId(child);\n                    if (childId)\n                        return childId;\n                    //console.log(child);\n                }\n            }\n        }\n    })(node);\n}\nvar FormField = /** @class */ (function (_super) {\n    tslib_1.__extends(FormField, _super);\n    function FormField(props) {\n        return _super.call(this, props) || this;\n    }\n    FormField.prototype.render = function () {\n        return React.createElement(React.Fragment, null,\n            React.createElement(\"label\", { className: \"kclabel\", htmlFor: this.props.id || findId(this.props.children) }, this.props.label),\n            this.props.children);\n    };\n    return FormField;\n}(React.Component));\nexport { FormField };\n","import * as React from 'react';\nimport { LiveQueryView } from './live-query-view';\nexport function LazyContent(_a) {\n    var children = _a.children, spinner = _a.spinner, onError = _a.onError, noError = _a.noError;\n    return React.createElement(LiveQueryView, { props: children, spinner: spinner, noError: noError, onError: onError, fn: function (observable) { return observable; } });\n}\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { shallowEquals } from '../../utils/utils';\nexport function liveQueryView(fn, options) {\n    return function (props) {\n        return React.createElement(LiveQueryView, tslib_1.__assign({ props: props, fn: fn }, options));\n    };\n}\nvar LiveQueryView = /** @class */ (function (_super) {\n    tslib_1.__extends(LiveQueryView, _super);\n    function LiveQueryView(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            result: null,\n            isLoading: true\n        };\n        return _this;\n    }\n    LiveQueryView.prototype.componentDidMount = function () {\n        this.subscribe();\n    };\n    LiveQueryView.prototype.componentWillUnmount = function () {\n        this.unsubscribe();\n    };\n    LiveQueryView.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        return (this.state.error !== nextState.error ||\n            this.state.isLoading !== nextState.isLoading ||\n            this.state.result !== nextState.result ||\n            !shallowEquals(nextProps.props, this.props.props));\n    };\n    LiveQueryView.prototype.componentDidUpdate = function (prevProps) {\n        if (!shallowEquals(prevProps.props, this.props.props)) {\n            this.unsubscribe();\n            this.subscribe();\n        }\n    };\n    LiveQueryView.prototype.subscribe = function () {\n        var _this = this;\n        this.setState({ isLoading: true });\n        this.subscription = this.props.fn(this.props.props).subscribe(function (result, error) { return _this.setState({\n            result: result,\n            error: error,\n            isLoading: false\n        }); });\n    };\n    LiveQueryView.prototype.unsubscribe = function () {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n    };\n    LiveQueryView.prototype.render = function () {\n        var _a = this.state, result = _a.result, error = _a.error, isLoading = _a.isLoading;\n        var _b = this.props, spinner = _b.spinner, onError = _b.onError, noError = _b.noError;\n        //if (!isLoading && !result) debugger;\n        return error ?\n            noError ? \"\" : onError ? onError(error) : React.createElement(\"p\", null,\n                \"Error: \",\n                error.message) :\n            isLoading ?\n                spinner ? spinner : \"\" :\n                result === undefined ? \"\" : result;\n    };\n    return LiveQueryView;\n}(React.Component));\nexport { LiveQueryView };\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { liveQueryView } from './live-query-view';\nimport { Spinner } from '../course-builder/sub-components/spinner';\nimport env from '../../globals/KED.env';\nexport var LoadingIndicator = liveQueryView(function () {\n    return env.kedBackendClient.http.status.combineLatest(env.edsClient.http.status)\n        .map(function (_a) {\n        var _b = tslib_1.__read(_a, 2), kedBackendStatus = _b[0], edsStatus = _b[1];\n        return React.createElement(\"div\", { className: \"loading-indicator\" },\n            React.createElement(\"div\", { className: \"indicator\" }, kedBackendStatus.numOutstandingOperations > 0 || edsStatus.numOutstandingOperations > 0 ?\n                React.createElement(Spinner, null) : undefined));\n    });\n});\n","import * as tslib_1 from \"tslib\";\nimport React from 'react';\nimport { Spinner } from '../course-builder/sub-components/spinner';\nimport { L } from '../../utils/utils';\nvar Multiselect = /** @class */ (function (_super) {\n    tslib_1.__extends(Multiselect, _super);\n    function Multiselect(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            optionsVisible: false\n        };\n        return _this;\n    }\n    Multiselect.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, selected = _a.selected, onChange = _a.onChange, getOptions = _a.getOptions;\n        var _b = this.state, optionsVisible = _b.optionsVisible, options = _b.options;\n        var filteredOptions = options && options.filter(function (o) { return !selected.some(function (s) { return s.key === o.key; }); });\n        return React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: \"taskContainer\" }, selected.map(function (_a) {\n                var key = _a.key, name = _a.name;\n                //const checked = selected.includes(key);\n                return React.createElement(\"div\", { key: key, className: \"align-horizontal\" },\n                    React.createElement(\"div\", { className: \"horizontalItem top\" },\n                        React.createElement(\"i\", { className: \"fa fa-remove hoverable\", onClick: function () { return onChange(selected.filter(function (option) { return option.key !== key; })); } }),\n                        name));\n            })),\n            React.createElement(\"span\", { style: { outline: 'none' }, tabIndex: 0, onBlur: function (ev) { return setTimeout(function () { return _this.setState({ optionsVisible: false }); }, 100); } },\n                React.createElement(\"a\", { className: \"btn\", onClick: function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                        var options_1, err_1;\n                        return tslib_1.__generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    if (optionsVisible)\n                                        return [2 /*return*/, this.setState({ optionsVisible: false })];\n                                    this.setState({ optionsVisible: true });\n                                    if (!!this.state.options) return [3 /*break*/, 4];\n                                    _a.label = 1;\n                                case 1:\n                                    _a.trys.push([1, 3, , 4]);\n                                    return [4 /*yield*/, getOptions()];\n                                case 2:\n                                    options_1 = _a.sent();\n                                    this.setState({ options: options_1 });\n                                    return [3 /*break*/, 4];\n                                case 3:\n                                    err_1 = _a.sent();\n                                    this.setState({ options: [{ key: null, name: L(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"Ett fel har intr\\u00E4ffat\"], [\"Ett fel har intr\\u00E4ffat\"]))) }] });\n                                    return [3 /*break*/, 4];\n                                case 4: return [2 /*return*/];\n                            }\n                        });\n                    }); } },\n                    React.createElement(\"i\", { className: \"fa fa-plus\", \"aria-hidden\": true }),\n                    \" \", L(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"L\\u00E4gg till\"], [\"L\\u00E4gg till\"])))),\n                optionsVisible ? React.createElement(React.Fragment, null,\n                    React.createElement(\"br\", null),\n                    filteredOptions ?\n                        React.createElement(\"select\", { size: filteredOptions.length === 1 ? 2 : filteredOptions.length, defaultValue: '', onChange: function (ev) {\n                                var selectedKey = ev.target.value;\n                                onChange(selected.concat({ key: selectedKey, name: options.filter(function (o) { return o.key === selectedKey; }).map(function (o) { return o.name; })[0] }));\n                                _this.setState({ optionsVisible: false });\n                            } },\n                            React.createElement(\"option\", { style: { display: 'none' }, disabled: true, key: '', value: '' }),\n                            filteredOptions.map(function (_a) {\n                                var key = _a.key, name = _a.name;\n                                return React.createElement(\"option\", { key: key, value: key }, name);\n                            })) :\n                        React.createElement(Spinner, null)) :\n                    undefined));\n    };\n    return Multiselect;\n}(React.Component));\nexport { Multiselect };\nvar templateObject_1, templateObject_2;\n","/* REFACTOR: Move this component outside coursebuilder!\n   This is a general-purpose component\n*/\nimport * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { GoalProgress } from '../charts/goal-progress';\nvar OpenCloseBox = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenCloseBox, _super);\n    function OpenCloseBox(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            headerOpen: props.headerOpen || false\n        };\n        return _this;\n    }\n    OpenCloseBox.prototype.componentWillReceiveProps = function (nextProps) {\n        if (nextProps.headerOpen !== this.props.headerOpen) {\n            this.setState({ headerOpen: nextProps.headerOpen });\n        }\n    };\n    OpenCloseBox.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, title = _a.title, className = _a.className, children = _a.children, headerClassName = _a.headerClassName, contentClassName = _a.contentClassName, displayProgress = _a.displayProgress, progressData = _a.progressData, inactivated = _a.inactivated, inactivatedRender = _a.inactivatedRender;\n        var headerOpen = this.state.headerOpen;\n        if (inactivated)\n            return inactivatedRender === 'titleAndChildren' ? React.createElement(React.Fragment, null,\n                React.createElement(React.Fragment, null, title),\n                React.createElement(React.Fragment, null, children)) : React.createElement(React.Fragment, null, children);\n        //var currentProgressData = //progressData();\n        return React.createElement(\"div\", { className: (className || '') + \" openClose\" + (headerOpen ? \" open\" : \"\") },\n            React.createElement(\"div\", { className: \"openHeader\" + (headerClassName ? \" \" + headerClassName : \"\"), onClick: function () {\n                    if (_this.props.onOpenClose)\n                        _this.props.onOpenClose(!_this.state.headerOpen);\n                    _this.setState({ headerOpen: !_this.state.headerOpen });\n                } },\n                React.createElement(\"div\", { className: \"openHeaderContainer\" },\n                    React.createElement(\"div\", null, title),\n                    displayProgress && React.createElement(GoalProgress, tslib_1.__assign({}, progressData)))),\n            React.createElement(\"div\", { className: \"openContent\" + (contentClassName ? \" \" + contentClassName : \"\") }, children));\n    };\n    return OpenCloseBox;\n}(React.Component));\nexport { OpenCloseBox };\n","import cfg from '../globals/KED.cfg';\ncfg.ENVIRONMENT = process.env.ENVIRONMENT;\ncfg.KED_API_URL = process.env.KED_API_URL; // \"https://kedbackendtest.azurewebsites.net/api/\"\ncfg.EDS_API_URL = process.env.EDS_API_URL; // \"https://edsportalowinapi.azurewebsites.net/api/\"\ncfg.KED_TOKEN_URL = process.env.KED_TOKEN_URL; // \"https://kedauthtest.azurewebsites.net/token\"\ncfg.KED_CLIENT_ID = process.env.KED_CLIENT_ID; // \"devclient\", \"testclient\", \"...\"\ncfg.KED_CLIENT_SECRET = process.env.KED_CLIENT_SECRET;\ncfg.KED_REALM = process.env.KED_REALM; // \"SE1\"\ncfg.KED_LOCALE = cfg.KED_LOCALE || process.env.KED_LOCALE; // \"sv\", \"en\". Only set from process.env if not set from SiteVision element config.\ncfg.KED_SCHOOL_LOCALE = cfg.KED_SCHOOL_LOCALE || process.env.KED_SCHOOL_LOCALE; // \"sv\", \"en_sin\", \"en_nin\". Only set from process.env if not set from SiteVision element config.\ncfg.KED_RESOURCES_URL = cfg.KED_RESOURCES_URL || process.env.KED_RESOURCES_URL;\n","/* These scripts assume some of the global vars have already been set:\n  * KED.cfg\n  * KED.env.currentUser\n\n  The rest will be set here (client side)\n*/\nimport './configure';\nimport './set-bearer-providers';\nimport './set-ked-backend-client';\nimport './set-eds-client';\n","import * as tslib_1 from \"tslib\";\nimport { parseQueryString, generateQueryString, splitUrlAndQuery } from \"../utils/query-string\";\nimport { WebServerBearerProvider, isomorphic, storage } from 'kedbackend/clientweb';\nimport { KedBearerProvider } from 'kedbackend/client';\nimport cfg from '../globals/KED.cfg';\nimport env from '../globals/KED.env';\nimport { IMPERSONATION_QUERY_PARAMS } from \"../access-control/index\";\nimport { cherryPickProps } from \"../utils/utils\";\nvar employeeClassroomScopes = [\n    \"https://www.googleapis.com/auth/classroom.courses\",\n    \"https://www.googleapis.com/auth/classroom.profile.emails\",\n    \"https://www.googleapis.com/auth/classroom.rosters\",\n    \"https://www.googleapis.com/auth/classroom.coursework.students\"\n];\nvar studentClassroomScopes = [\n    \"https://www.googleapis.com/auth/classroom.courses\",\n    \"https://www.googleapis.com/auth/classroom.coursework.me\"\n];\nfunction getMergedTokenPath(tokenPath, locationSearch, scopes) {\n    // Merge configured query params of token path with params given to current page\n    var currentQuery = parseQueryString(locationSearch);\n    var impersonationProps = cherryPickProps(currentQuery, IMPERSONATION_QUERY_PARAMS);\n    var _a = tslib_1.__read(splitUrlAndQuery(tokenPath), 2), tokenPathWithoutQuery = _a[0], tokenQueryString = _a[1];\n    var tokenPathQuery = parseQueryString(tokenQueryString);\n    return tokenPathWithoutQuery + generateQueryString(tslib_1.__assign({}, tokenPathQuery, impersonationProps, { scopes: scopes.join(',') }));\n}\nfunction getTokenId(mergedTokenPath, userEmail) {\n    return mergedTokenPath + \"/\" + userEmail;\n}\nfunction saveUserInfo(user, tokenId) {\n    env.currentUser = user;\n    var schoolgrade = parseQueryString(location.search, { toLower: true }).schoolgrade;\n    if (schoolgrade) {\n        var schoolGradeInt = parseInt(schoolgrade);\n        env.currentUser.schoolGrade = schoolGradeInt;\n        env.currentUser.schoolType = schoolGradeInt > 9 ? \"Gymnasium\" : \"Grundskolor\";\n    }\n    sessionStorage.setItem(\"userInfo\" + tokenId, JSON.stringify(user));\n}\nfunction loadUserInfo(tokenId) {\n    var storedSessionUser = sessionStorage.getItem(\"userInfo\" + tokenId);\n    if (storedSessionUser) {\n        env.currentUser = JSON.parse(storedSessionUser);\n    }\n}\nfunction createBearerProvider(mergedTokenPath, userEmail) {\n    var tokenId = getTokenId(mergedTokenPath, userEmail);\n    return new WebServerBearerProvider(mergedTokenPath, function (responseText) {\n        var res = JSON.parse(responseText);\n        if (!res.ok)\n            throw new Error(res.error);\n        if (res.user) {\n            saveUserInfo(res.user, tokenId);\n        }\n        return { token: res.token, expires: Date.now() + 59 * 60 * 1000 };\n    }, tokenId);\n}\nfunction createGoogleTokenProvider(mergedTokenPath, userEmail) {\n    var tokenId = getTokenId(mergedTokenPath, userEmail);\n    return new WebServerBearerProvider(mergedTokenPath, function (responseText) {\n        var res = JSON.parse(responseText);\n        if (!res.ok)\n            throw new Error(res.error);\n        return { token: res.token, expires: Date.now() + 59 * 60 * 1000 };\n    }, tokenId);\n}\nfunction createTestTokenProvider(tokenUrl, user, scopes) {\n    return new KedBearerProvider(isomorphic, storage, tokenUrl + user.mail + location.search, cfg.KED_CLIENT_ID, cfg.KED_CLIENT_SECRET, tokenUrl, {\n        email: user.mail.toLowerCase(),\n        roles: user.roles,\n        school: user.school,\n        schoolType: user.schoolType,\n        scopes: scopes,\n        name: user.displayName\n    });\n}\n// env.currentUser.mail is set by SiteVision server initially.\n// A response from /api/token may change the mail attribute of the current\n// user, so env.currentUser.mail may be different after getting a response.\n// However, the initial value is valuable always in order to distinguish the case\n// when one normal user logs out and another user logs in.\nvar initialUserEmail = env.currentUser && env.currentUser.mail; // Initial value of mail. May change.\nif (initialUserEmail) {\n    // KED\n    if (cfg.KED_TOKEN_PATH) {\n        //\n        //\n        // Production / SiteVision proxied /api/token to request tokens from:\n        //\n        //\n        var mergedTokenPath = getMergedTokenPath(cfg.KED_TOKEN_PATH, location.search, [\n            \"kedbackend\",\n            \"EDS\",\n        ]);\n        env.bearerProvider = createBearerProvider(mergedTokenPath, initialUserEmail);\n        loadUserInfo(getTokenId(mergedTokenPath, initialUserEmail));\n        var scopes = [\n            \"https://www.googleapis.com/auth/calendar.readonly\",\n            \"https://www.googleapis.com/auth/drive\"\n        ].concat(env.currentUser.roles.includes(\"EMPLOYEE\")\n            ? employeeClassroomScopes\n            : studentClassroomScopes);\n        // Google\n        var googleMergedPath = getMergedTokenPath(cfg.KED_TOKEN_PATH, location.search, scopes);\n        env.googleTokenProvider = createGoogleTokenProvider(googleMergedPath, initialUserEmail);\n    }\n    else if (cfg.KED_TOKEN_URL && cfg.KED_CLIENT_ID && cfg.KED_CLIENT_SECRET) {\n        //\n        //\n        // Test - go directly to KEDAUTH server to retrieve tokens\n        //\n        //\n        env.bearerProvider = createTestTokenProvider(cfg.KED_TOKEN_URL, env.currentUser, [\n            \"kedbackend\",\n            \"EDS\",\n        ]);\n        var scopes = [\n            \"https://www.googleapis.com/auth/calendar.readonly\",\n            \"https://www.googleapis.com/auth/drive\"\n        ].concat(env.currentUser.roles.includes(\"EMPLOYEE\")\n            ? employeeClassroomScopes\n            : studentClassroomScopes);\n        env.googleTokenProvider = createTestTokenProvider(cfg.KED_TOKEN_URL + \"/google\", env.currentUser, scopes);\n    }\n    else {\n        throw new Error(\"Missing configuration parameter KED_TOKEN_PATH\");\n    }\n}\n","import env from '../globals/KED.env';\nimport cfg from '../globals/KED.cfg';\nimport { isomorphic } from 'kedbackend/clientweb';\nimport { EdsClient } from '../apis/edsclient';\nenv.edsClient = new EdsClient(isomorphic, cfg.EDS_API_URL, env.bearerProvider, function () { return env.currentUser.mail; });\n","import env from '../globals/KED.env';\nimport cfg from '../globals/KED.cfg';\nimport { KedBackendClientWeb } from 'kedbackend/clientweb';\nenv.kedBackendClient = new KedBackendClientWeb(cfg.KED_API_URL, env.bearerProvider);\n","import KED from './KED';\n;\nif (!KED.cfg)\n    KED.cfg = {};\nexport default KED.cfg;\nexport var cfg = KED.cfg;\n","import KED from './ked';\nif (!KED.env)\n    KED.env = {};\nexport default KED.env;\nexport var env = KED.env;\n","export var KED_NAMESPACE = \"KED\";\nvar result = typeof KED === 'undefined' ? {} : KED;\nif (typeof window !== 'undefined' && typeof KED === 'undefined') {\n    window[KED_NAMESPACE] = result;\n}\nexport default result;\n","import env from './KED.env';\nimport { KedBackendRepo } from 'kedbackend/repo';\nimport { getGlobalId, createUUID } from 'kedbackend/client';\nimport cfg from './KED.cfg';\nif (!env.db) {\n    // Put db on env so that it is shared between subject planner and other components!\n    env.db = new KedBackendRepo(function () { return env.kedBackendClient; }, function () { return env.currentUser ?\n        env.currentUser.mail :\n        \"\"; }, function () { return env.currentUser ?\n        env.currentUser.displayName || env.currentUser.mail :\n        \"\"; });\n}\nexport var db = env.db;\nexport var globalId = getGlobalId(cfg.KED_REALM);\nexport var Schools = {\n    standardSchool: db.schools.name(\"standard\").cacheOptimized().single(),\n    get mySchool() { return db.schools.name(env.currentUser.school).cacheOptimized().single(); }\n};\nexport var CourseInstances = {\n    getBranchId: function (school, courseId) {\n        return school.switchMap(function (school) {\n            return db.branches\n                .hasEdgesFrom([school.officialBranchId])\n                .name(\"draft\")\n                .tags(courseId)\n                .idsOnly()\n                .map(function (_a) {\n                var id = _a.id;\n                return id;\n            })\n                .toValue()\n                .map(function (ids) { return ids.length > 0 ? ids[0] : undefined; });\n        });\n    },\n    /** Get a DRAFT branch for given course ID and given school.\n     * If there is not yet such a branch, create it using mutationsOnEmpty() which will\n     * lead to the C# code DocumentRepository.ReadOrMutate() via DocumentController.\n     */\n    getOrCreateBranchId: function (school, courseId) {\n        return db.courseInstances.idsOnly().id(courseId).switchMap(function () {\n            return school.switchMap(function (school) {\n                return db.branches\n                    .hasEdgesFrom([school.officialBranchId])\n                    .name(\"draft\")\n                    .tags(courseId)\n                    .idsOnly()\n                    .mutationsOnEmpty(function (tx) {\n                    // These 2 mutations will occur server side, atomically.\n                    // Will be sent on each request in the query, but will only execute if query results in zero items.\n                    //console.log(\"School:\", school);\n                    var id = createUUID();\n                    tx.add(\"branches\", {\n                        id: id,\n                        acl: [\n                            \"role:USER:R\",\n                            \"schoolRole:\" + school.name + \"/EMPLOYEE:S\"\n                        ],\n                        name: 'draft',\n                        schoolId: school.id,\n                        treeParentId: school.officialBranchId,\n                        tags: [courseId]\n                    });\n                    // Approving the branch makes sure that it was created by an EMPLOYEE on given school.\n                    tx.link2(\"branches\", school.officialBranchId, \"approvedChildren\", id);\n                })\n                    .single()\n                    .map(function (_a) {\n                    var id = _a.id;\n                    return id;\n                });\n            });\n        });\n    },\n    getAllDescendantIds: function (courseId) {\n        return db.courseBlocks.tags(courseId).idsOnly().concat(db.courseContents.tags(courseId).idsOnly()).concat(db.courseTabs.tags(courseId).idsOnly()).concat(db.tasks.tags(courseId).idsOnly())\n            .map(function (x) { return x.id; });\n    }\n};\n","export var KED_NAMESPACE = \"KED\";\nvar result = typeof KED === 'undefined' ? {} : KED;\nif (typeof window !== 'undefined' && typeof KED === 'undefined') {\n    window[KED_NAMESPACE] = result;\n}\nexport default result;\n","export var users = [{\n        displayName: \"Administratör\",\n        mail: \"vemendo@kedschools.com\",\n        roles: ['ADMIN', 'EMPLOYEE'],\n        school: 'KED',\n        username: \"admin\"\n    }, {\n        displayName: \"David\",\n        mail: \"david.fahlander@vemendo.se\",\n        roles: ['ADMIN', 'EMPLOYEE'],\n        school: 'KED',\n        username: \"david\",\n        schoolGrade: 2\n    },\n    {\n        displayName: \"Andrei\",\n        mail: \"andrei.spatarelu@vemendo.se\",\n        roles: ['ADMIN', 'EMPLOYEE', 'STUDENT'],\n        school: 'KED',\n        username: \"andrei\",\n        schoolGrade: 7\n    }, {\n        displayName: \"Carl Holmberg\",\n        mail: \"carl.holmberg@kunskapsgymnasiet.se\",\n        roles: ['ADMIN', 'EMPLOYEE'],\n        school: 'Norrköping',\n        username: \"carl.holmberg@kunskapsgymnasiet.se\"\n    }, {\n        displayName: \"Carl\",\n        mail: \"carl@kedschools.com\",\n        roles: ['ADMIN', 'EMPLOYEE', 'STUDENT'],\n        school: 'KED',\n        username: \"carl\"\n    }, {\n        displayName: \"david.fahlander@kedschools.com\",\n        mail: \"david.fahlander@kedschools.com\",\n        roles: [\"ADMIN\", \"EMPLOYEE\", \"STUDENT\"],\n        school: \"KED\",\n        username: \"david.fahlander@kedschools.com\"\n    }, {\n        displayName: \"Teacher 1\",\n        mail: \"teacher1.classroom@kedschools.com\",\n        roles: ['EMPLOYEE'],\n        school: 'KED',\n        username: \"teacher1.classroom@kedschools.com\"\n    }, {\n        displayName: \"Student 3\",\n        mail: \"student3.classroom@kedschools.com\",\n        roles: ['STUDENT'],\n        school: 'KED',\n        username: \"student3.classroom@kedschools.com\"\n    }, {\n        displayName: \"Student 13\",\n        mail: \"student13.classroom@kedschools.com\",\n        roles: ['STUDENT'],\n        school: 'KED',\n        username: \"student13.classroom@kedschools.com\"\n    }, {\n        displayName: \"Student 24\",\n        mail: \"student24.classroom@kedschools.com\",\n        roles: ['STUDENT'],\n        school: 'KED',\n        username: \"student24.classroom@kedschools.com\"\n    }, {\n        displayName: \"Test-Live-Elev1\",\n        mail: \"ubw6757@edu.kunskapsgymnasiet.se\",\n        roles: ['STUDENT'],\n        school: 'Uppsala',\n        username: \"ubw6757@edu.kunskapsgymnasiet.se\"\n    }, {\n        displayName: \"Test-Live-Elev2\",\n        mail: \"ums4302@edu.kunskapsgymnasiet.se\",\n        roles: ['STUDENT'],\n        school: 'Uppsala',\n        username: \"ums4302@edu.kunskapsgymnasiet.se\"\n    }, {\n        displayName: \"Test-Live-Elev3\",\n        mail: \"uhh3460@edu.kunskapsgymnasiet.se\",\n        roles: ['STUDENT'],\n        school: 'Uppsala',\n        username: \"uhh3460@edu.kunskapsgymnasiet.se\"\n    }, {\n        displayName: \"Test-Live-Elev4(fel goals issue)\",\n        mail: \"umt6826@edu.kunskapsskolan.se\",\n        roles: [\"STUDENT\"],\n        school: \"Uppsala\",\n        username: \"umt6826@edu.kunskapsskolan.se\"\n    }, {\n        displayName: \"Test-Live-Elev5(future abilities)\",\n        mail: \"ujg3833@edu.kunskapsskolan.se\",\n        roles: [\"STUDENT\"],\n        school: \"Uppsala\",\n        username: \"ujg3833@edu.kunskapsskolan.se\"\n    }, {\n        displayName: \"Test-Live-Elev6(future abilities)\",\n        mail: \"ujt1363@edu.kunskapsskolan.se\",\n        roles: [\"STUDENT\"],\n        school: \"Uppsala\",\n        username: \"ujt1363@edu.kunskapsskolan.se\"\n    }, {\n        displayName: \"Test-Live-Lärare1\",\n        mail: \"rickard.albertsson@kunskapsgymnasiet.se\",\n        roles: ['EMPLOYEE'],\n        school: 'Uppsala',\n        username: \"rickard.albertsson@kunskapsgymnasiet.se\"\n    }, {\n        displayName: \"EDSTestUserGymnasium\",\n        mail: \"uhh3200@edu.kunskapsgymnasiet.se\",\n        //mail: \"UHH3200@EDU.KUNSKAPSGYMNASIET.SE\",\n        roles: [\"STUDENT\"],\n        username: \"EDSTestUser1\",\n        school: \"KED\",\n        schoolType: \"Gymnasium\"\n    }, {\n        displayName: \"vemendo.elev@kedschools.com\",\n        mail: \"vemendo.elev@kedschools.com\",\n        roles: [\"STUDENT\"],\n        username: \"vemendo.elev@kedschools.com\",\n        school: \"KED\",\n        schoolType: \"Gymnasium\"\n    }, {\n        displayName: \"Medarbetare Nacka\",\n        mail: \"medarbetare.nacka@kunskapsskolan.se\",\n        roles: [\"EMPLOYEE\"],\n        username: \"medarbetare.nacka/KS\",\n        school: \"Nacka\",\n        schoolType: \"Grundskolor\"\n    }, {\n        displayName: \"Medarbetare Globen\",\n        mail: \"medarbetare.globen@kunskapsgymnasiet.se\",\n        roles: [\"EMPLOYEE\"],\n        username: \"medarbetare.globen/KS\",\n        school: \"Globen\",\n        schoolType: \"Gymnasium\"\n    }, {\n        displayName: \"Elev Globen\",\n        mail: \"elev.globen@edu.kunskapsgymnasiet.se\",\n        schoolGrade: 2,\n        roles: ['STUDENT'],\n        username: \"elev.globen\",\n        school: \"Globen\",\n        schoolType: \"Gymnasium\"\n    }, {\n        displayName: \"Elev Borås\",\n        mail: \"elev.boras@edu.kunskapsskolan.se\",\n        schoolGrade: 7,\n        roles: ['STUDENT'],\n        username: \"elev.boras\",\n        school: \"Borås\",\n        schoolType: \"Grundskolor\"\n    }, {\n        displayName: \"Elev Borlänge\",\n        mail: \"elev.borlange@edu.kunskapsskolan.se\",\n        schoolGrade: 9,\n        roles: ['STUDENT'],\n        username: 'elev.borlange/KS',\n        school: 'Borlänge',\n        schoolType: \"Gymnasium\"\n    }, {\n        displayName: \"Roll-lös\",\n        mail: \"none@kunskapsskolan.se\",\n        username: \"none\",\n        roles: []\n    }];\n","import env from '../globals/KED.env';\nimport { users } from './data/users';\nimport { parseQueryString } from '../utils/query-string';\nvar username = parseQueryString(location.search).user;\nif (username) {\n    var user = users.find(function (u) { return u.username === username; });\n    if (user) {\n        env.currentUser = user;\n    }\n}\nvar _a = parseQueryString(location.search, { toLower: true }), role = _a.role, school = _a.school, schoolgrade = _a.schoolgrade;\nif (env.currentUser) {\n    if (role) {\n        env.currentUser.roles = role.split(',');\n    }\n    if (school) {\n        env.currentUser.school = school;\n    }\n    if (schoolgrade) {\n        var schoolGradeInt = parseInt(schoolgrade);\n        env.currentUser.schoolGrade = schoolGradeInt;\n        env.currentUser.schoolType = schoolGradeInt > 9 ? \"Gymnasium\" : \"Grundskolor\";\n    }\n}\n","import * as tslib_1 from \"tslib\";\n// <Initialization>\nimport './set-current-user'; // Emulate server-side script to set current user\nimport '../global-setters/set-all'; // Client-side initialization\n// </Initialization>\nimport env from '../globals/KED.env';\nimport * as React from 'react';\nimport { ChooseUser } from './utils/choose-user';\nimport { includeCSS } from './utils/include-css';\nimport { includeOptionalCSS } from '../utils/include-optional-css';\nimport { SubjectPlannerAdminApp } from '../components/course-builder-ks/admin';\nimport { LanguageContext } from '../components/utility-components/LanguageContext';\nimport { injectIntl } from 'react-intl';\nimport { setupIntl } from '../components/utility-components/SetupLanguageIntl';\nincludeOptionalCSS({\n    v1: [\n        'css/courseviewer.css',\n        'css/dialog.css',\n        'css/grid-css-patch.css'\n    ],\n    includeCSS: includeCSS,\n    version: 7,\n    NOCSS: '6',\n    versionFolder: 'css/delta-css/courseviewer'\n});\nvar _App = /** @class */ (function (_super) {\n    tslib_1.__extends(_App, _super);\n    function _App(props) {\n        var _this = _super.call(this, props) || this;\n        if (!location.hash)\n            location.hash = \"#/\";\n        return _this;\n    }\n    _App.prototype.render = function () {\n        var intl = this.props.intl;\n        return env.currentUser ?\n            React.createElement(LanguageContext.Provider, { value: { intl: intl } },\n                React.createElement(SubjectPlannerAdminApp, null)) :\n            React.createElement(ChooseUser, null);\n    };\n    return _App;\n}(React.Component));\nvar App = setupIntl(injectIntl(_App));\nexport default App;\n","import * as React from 'react';\nimport { users } from '../data/users';\nexport function ChooseUser() {\n    var select;\n    return React.createElement(\"div\", { className: \"sv-layout\" },\n        React.createElement(\"h2\", null, \"V\\u00E4lj anv\\u00E4ndare\"),\n        React.createElement(\"table\", { className: \"login-table\" },\n            React.createElement(\"thead\", null,\n                React.createElement(\"tr\", null,\n                    React.createElement(\"th\", null, \"Namn\"),\n                    React.createElement(\"th\", null, \"Roller\"),\n                    React.createElement(\"th\", null, \"E-post\"),\n                    React.createElement(\"th\", null, \"Skola\"))),\n            React.createElement(\"tbody\", null, users.map(function (_a) {\n                var username = _a.username, displayName = _a.displayName, mail = _a.mail, school = _a.school, roles = _a.roles;\n                return React.createElement(\"tr\", { key: mail, onClick: function () { return location.search = \"?user=\" + username; } },\n                    React.createElement(\"td\", null, displayName),\n                    React.createElement(\"td\", { style: roles.length === 0 ? { fontStyle: 'italic' } : {} }, roles.length === 0 ? \"saknar roller\" : roles.join(', ')),\n                    React.createElement(\"td\", null, mail),\n                    React.createElement(\"td\", { style: school ? {} : { fontStyle: 'italic' } }, school || \"saknar skola\"));\n            }))));\n}\n;\n","function resolve(uri) {\n    var href = location.protocol + \"//\" + location.host + location.pathname;\n    var pLastSlash = href.lastIndexOf('/');\n    return href.substr(0, pLastSlash + 1) + uri;\n}\nexport function includeCSS(cssFile) {\n    document.write('<link rel=\"stylesheet\" href=\"' + resolve(cssFile) + '\" />');\n}\n","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { db } from '../globals/db';\nimport { RemoveItem } from '../components/course-builder/sub-components/remove-item';\nvar ErrorSuccessFeedback = /** @class */ (function (_super) {\n    tslib_1.__extends(ErrorSuccessFeedback, _super);\n    function ErrorSuccessFeedback(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            errors: [],\n            infos: []\n        };\n        _this._unhandledRejection = _this._unhandledRejection.bind(_this);\n        _this._error = _this._error.bind(_this);\n        _this._customError = _this._customError.bind(_this);\n        _this._onInfo = _this._onInfo.bind(_this);\n        _this._dbWriterError = _this._dbWriterError.bind(_this);\n        _this._dbWriterStateChanged = _this._dbWriterStateChanged.bind(_this);\n        return _this;\n    }\n    ErrorSuccessFeedback.prototype._addError = function (message, details, retryable) {\n        var _this = this;\n        //console.error(message, {retryable: !!retryable, details});\n        this.setState(function (_a) {\n            var errors = _a.errors;\n            if (errors.some(function (e) { return e.message === message; }))\n                return { errors: errors };\n            if (errors.length > 2)\n                errors = errors.slice(1);\n            return {\n                errors: errors.concat([{ message: message, details: details, retryable: retryable }])\n            };\n        });\n        // Remove non-retryable errors after 30 seconds:\n        if (!retryable)\n            setTimeout(function () {\n                _this.setState(function (_a) {\n                    var errors = _a.errors;\n                    return ({\n                        errors: errors.filter(function (e) { return e.message !== message; })\n                    });\n                });\n            }, 30000);\n    };\n    ErrorSuccessFeedback.prototype._addInfo = function (message) {\n        var _this = this;\n        if (message === \"\") {\n            // Turn off current info messages\n            this.setState({ infos: [] });\n            return;\n        }\n        this.setState(function (_a) {\n            var infos = _a.infos;\n            if (infos.some(function (info) { return info === message; }))\n                return { infos: infos };\n            if (infos.length > 1)\n                infos = infos.slice(1);\n            return {\n                infos: [message] // was: infos.concat(message). But it sucks!\n            };\n        });\n        // Remove info message after 10 seconds:\n        setTimeout(function () {\n            _this.setState(function (_a) {\n                var infos = _a.infos;\n                return ({\n                    infos: infos.filter(function (msg) { return msg !== message; })\n                });\n            });\n        }, 10000);\n    };\n    ErrorSuccessFeedback.prototype._dbWriterError = function (error, retryable) {\n        this._addError(\"Det g\\u00E5r inte att spara till servern\", error, retryable);\n    };\n    ErrorSuccessFeedback.prototype._dbWriterStateChanged = function (_a) {\n        var isEdited = _a.isEdited, isSaving = _a.isSaving;\n        if (!isEdited) {\n            // If isEdited is false, a successful write must have happened, and\n            // there cannot be any retryable error anymore\n            this.setState(function (_a) {\n                var errors = _a.errors;\n                errors = errors.filter(function (e) { return !e.retryable; });\n                return { errors: errors };\n            });\n        }\n        this.setState({\n            dbWriterIsEdited: isEdited,\n            dbWriterIsSaving: isSaving\n        });\n    };\n    ErrorSuccessFeedback.prototype.componentDidMount = function () {\n        window.addEventListener('unhandledrejection', this._unhandledRejection);\n        window.addEventListener('error', this._error);\n        window.addEventListener('customerror', this._customError);\n        window.addEventListener('info', this._onInfo);\n        db.writer.onError(this._dbWriterError);\n        db.writer.onStateChange(this._dbWriterStateChanged);\n    };\n    ErrorSuccessFeedback.prototype.componentWillUnmount = function () {\n        window.removeEventListener('unhandledrejection', this._unhandledRejection);\n        window.removeEventListener('error', this._error);\n        window.removeEventListener('customerror', this._customError);\n        window.removeEventListener('info', this._onInfo);\n        db.writer.off(this._dbWriterError);\n        db.writer.off(this._dbWriterStateChanged);\n    };\n    ErrorSuccessFeedback.prototype._unhandledRejection = function (ev) {\n        this._addError(\"Ett ok\\u00E4nt fel intr\\u00E4ffade...\", ev.reason);\n    };\n    ErrorSuccessFeedback.prototype._error = function (ev) {\n        this._addError(ev.error ? ev.error.message : \"Ett ok\\u00E4nt fel intr\\u00E4ffade...\", ev.error);\n    };\n    ErrorSuccessFeedback.prototype._customError = function (ev) {\n        this._addError(ev.detail);\n    };\n    ErrorSuccessFeedback.prototype._onInfo = function (ev) {\n        this._addInfo(ev.detail);\n    };\n    ErrorSuccessFeedback.prototype.render = function () {\n        var _this = this;\n        var _a = this.state, errors = _a.errors, infos = _a.infos, dbWriterIsSaving = _a.dbWriterIsSaving;\n        return React.createElement(\"div\", { className: \"error-success-feedback\", style: {\n                position: \"fixed\",\n                left: 0,\n                top: 0,\n                width: \"100%\",\n                pointerEvents: 'none'\n            } },\n            React.createElement(\"div\", { style: { display: 'table', margin: \"0 auto\" } },\n                errors.filter(function (e) { return !e.retryable || !dbWriterIsSaving; })\n                    .map(function (_a) {\n                    var message = _a.message, details = _a.details, retryable = _a.retryable, showDetails = _a.showDetails;\n                    return (React.createElement(\"div\", { key: message, className: \"error\" },\n                        React.createElement(\"div\", { style: { float: 'left' } }, message),\n                        React.createElement(\"div\", { style: { pointerEvents: 'auto' } },\n                            React.createElement(RemoveItem, { onClick: function () { return _this.removeError(message); } })),\n                        details || retryable ? React.createElement(\"div\", { style: { pointerEvents: 'auto' } },\n                            details ? React.createElement(React.Fragment, null,\n                                React.createElement(\"a\", { className: \"btn\", onClick: function () { return _this.toggleDetails(message); } }, showDetails ? \"Dölj detailer\" : \"Visa detailjer\"),\n                                \"\\u00A0\") : undefined,\n                            showDetails ? React.createElement(\"p\", null, '' + details) : React.createElement(React.Fragment, null, \"\\u00A0\"),\n                            retryable ? React.createElement(\"a\", { className: \"btn\", onClick: function () { return _this.retrySave(); } }, \"F\\u00F6rs\\u00F6k spara nu\") : undefined) : undefined));\n                }),\n                infos.map(function (message) {\n                    return React.createElement(\"p\", { key: message, className: \"info\" }, message);\n                })));\n    };\n    ErrorSuccessFeedback.prototype.removeError = function (message) {\n        this.setState(function (_a) {\n            var errors = _a.errors;\n            return ({\n                errors: errors.filter(function (e) { return e.message !== message; })\n            });\n        });\n    };\n    ErrorSuccessFeedback.prototype.retrySave = function () {\n        db.writer.retrySave();\n    };\n    ErrorSuccessFeedback.prototype.toggleDetails = function (message) {\n        this.setState(function (_a) {\n            var errors = _a.errors;\n            return ({ errors: errors.map(function (error) { return error.message === message ? tslib_1.__assign({}, error, { showDetails: !error.showDetails }) :\n                    error; })\n            });\n        });\n    };\n    return ErrorSuccessFeedback;\n}(React.Component));\nexport { ErrorSuccessFeedback };\n","export function includeOptionalCSS(_a) {\n    var v1 = _a.v1, versionFolder = _a.versionFolder, version = _a.version, includeCSS = _a.includeCSS, NOCSS = _a.NOCSS;\n    if (!NOCSS) {\n        if (v1)\n            v1.forEach(function (cssFile) { return includeCSS(cssFile); });\n    }\n    var cssVer = parseInt(NOCSS);\n    if (isNaN(cssVer))\n        cssVer = 1;\n    for (var ver = cssVer + 1; ver <= version; ++ver) {\n        includeCSS(versionFolder + \"/v\" + ver + \".css\");\n    }\n}\n","import * as tslib_1 from \"tslib\";\nvar DEFAULT_CACHE_EXPIRATION = 30 * 60 * 1000; // 30 minutes.\nvar defaultOptions = {\n    isApiMethod: function (f) { return typeof f === 'function'; },\n    cacheExpiration: DEFAULT_CACHE_EXPIRATION\n};\nexport function makeSuspenseApi(api, options) {\n    if (options === void 0) { options = defaultOptions; }\n    options = tslib_1.__assign({}, defaultOptions, options);\n    var isApiMethod = options.isApiMethod, cacheExpiration = options.cacheExpiration;\n    var rv = Object.create(api);\n    var cache = {};\n    // Walk the instance + prototype chain to generate suspense version of each promise returning method\n    for (var proto = api; proto && proto !== Object.prototype; proto = Object.getPrototypeOf(proto)) {\n        suspendify(proto);\n    }\n    function suspendify(proto) {\n        Object.keys(proto).forEach(function (prop) {\n            if (!rv.hasOwnProperty(prop) && isApiMethod(prop)) {\n                rv[prop] = function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var key = JSON.stringify(tslib_1.__spread([prop], args));\n                    var cachedEntry = cache[key];\n                    if (cachedEntry !== undefined) {\n                        if (cachedEntry.promise)\n                            throw cachedEntry.promise;\n                        if (cachedEntry.error)\n                            throw cachedEntry.error;\n                        if (cachedEntry.timeout > Date.now()) {\n                            return cachedEntry.value;\n                        }\n                    }\n                    try {\n                        var promise = proto[prop].apply(api, args).then(function (result) {\n                            cache[key] = { timeout: Date.now() + cacheExpiration, value: result };\n                        }).catch(function (error) {\n                            cache[key] = { timeout: Date.now() + cacheExpiration, error: error };\n                        });\n                        cache[key] = { timeout: Date.now() + cacheExpiration, promise: promise };\n                        throw promise;\n                    }\n                    catch (error) {\n                        if (error.then)\n                            throw error;\n                        cache[key] = { timeout: Date.now() + cacheExpiration, error: error };\n                    }\n                };\n            }\n        });\n    }\n    return rv;\n}\n","import * as tslib_1 from \"tslib\";\nexport function parseQueryString(locationSearch, options) {\n    var toLower = (options || {}).toLower;\n    var result = {};\n    if (locationSearch && locationSearch.length > 1)\n        locationSearch.substr(1)\n            .split('&')\n            .map(function (part) { return part.split('=').map(function (s) { return decodeURIComponent(s.trim()); }); })\n            .forEach(function (_a) {\n            var _b = tslib_1.__read(_a, 2), key = _b[0], value = _b[1];\n            return result[toLower ? key.toLowerCase() : key] = value;\n        });\n    return result;\n}\nfunction encodeParams(params) {\n    return Object.keys(params).filter(function (key) { return params[key] !== undefined; }).map(function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]); }).join('&');\n}\nexport function generateQueryString(params) {\n    return \"?\" + encodeParams(params);\n}\nexport function parseHashQueryString(locationHash, options) {\n    return parseQueryString(locationHash, options);\n}\nexport function generateHashQueryString(params) {\n    return \"#\" + encodeParams(params);\n}\nexport function splitUrlAndQuery(urlWithPossibleQuery) {\n    var pQuery = urlWithPossibleQuery.indexOf('?');\n    return pQuery >= 0 ?\n        [urlWithPossibleQuery.substr(0, pQuery), urlWithPossibleQuery.substr(pQuery)] :\n        [urlWithPossibleQuery, \"\"];\n}\n","import * as tslib_1 from \"tslib\";\nimport moment from 'moment';\nexport function getFirstAndLastWeekOfTerm(term) {\n    return term === 'AT' ?\n        [32, 51] :\n        [1, 25];\n}\n//Not used anymore\n// export function getTermStartAndEnd(now: moment.Moment) : moment.Moment[] {\n//     return now.month() >= 6 ? // 6 = July in JS Dates and in moment as well!\n//     [moment(new Date(now.year(), 7, 1)), moment(new Date(now.year(), 11, 31))] : // aug1 - dec31\n//     [moment(new Date(now.year(), 0, 1)), moment(new Date(now.year(), 6, 31))]; // jan1 - july31\n// }\nexport function getTermStarEndDate(date, isFirstTerm) {\n    var addYear = date.getMonth() >= 7;\n    var termYear = null;\n    if (addYear) {\n        termYear = isFirstTerm ? date.getFullYear() : date.getFullYear() + 1;\n    }\n    else {\n        termYear = isFirstTerm ? date.getFullYear() - 1 : date.getFullYear();\n    }\n    var termYearMoment = moment(termYear.toString(), \"YYYY\");\n    if (termYearMoment.week() != 1) {\n        termYearMoment = termYearMoment.clone().add(1, 'week');\n    }\n    return isFirstTerm ? [moment(termYearMoment.clone()).week(32).startOf('week'), moment(termYearMoment.clone()).week(51).endOf('week')] :\n        [moment(termYearMoment.clone()), moment(termYearMoment.clone()).week(25).endOf('week')];\n}\nexport function getSchoolMoment(m) {\n    var thisYear = m.year();\n    var isAutumn = m.month() >= 6; // determine \n    var _a = tslib_1.__read(isAutumn ?\n        [thisYear, thisYear + 1] :\n        [thisYear - 1, thisYear], 2), autumnYear = _a[0], springYear = _a[1];\n    var academicYear = '' + autumnYear + '/' + springYear;\n    var term = isAutumn ? 'AT' : 'ST';\n    var week = m.week();\n    return { academicYear: academicYear, term: term, week: week };\n}\nexport function addYear(aYear, numYearsToAdd) {\n    return aYear.split('/')\n        .map(function (yearStr) { return parseInt(yearStr) + numYearsToAdd; })\n        .map(function (year) { return '' + year; })\n        .join('/');\n}\nexport function nextAcademicYear(aYear) {\n    return addYear(aYear, 1);\n}\nexport function prevAcademicYear(aYear) {\n    return addYear(aYear, -1);\n}\n","import moment from 'moment';\nimport { getSchoolMoment, addYear } from './school-moment';\nfunction isSchoolMoment(obj) {\n    return 'academicYear' in obj;\n}\nvar SchoolTerm = /** @class */ (function () {\n    function SchoolTerm(dateOrSchoolMoment) {\n        var schoolMoment = isSchoolMoment(dateOrSchoolMoment) ?\n            dateOrSchoolMoment : getSchoolMoment(moment(dateOrSchoolMoment));\n        this.academicYear = schoolMoment.academicYear;\n        this.term = schoolMoment.term;\n    }\n    Object.defineProperty(SchoolTerm.prototype, \"year\", {\n        get: function () {\n            return parseInt(this.academicYear\n                .split('/')[this.term === 'AT' ? 0 : 1]);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SchoolTerm.prototype.nextTerm = function () {\n        return new SchoolTerm(this.term === 'AT' ?\n            {\n                term: 'ST',\n                academicYear: this.academicYear\n            } :\n            {\n                term: 'AT',\n                academicYear: addYear(this.academicYear, 1)\n            });\n    };\n    SchoolTerm.prototype.prevTerm = function () {\n        return new SchoolTerm(this.term === 'AT' ?\n            {\n                term: 'ST',\n                academicYear: addYear(this.academicYear, -1)\n            } :\n            {\n                term: 'AT',\n                academicYear: this.academicYear\n            });\n    };\n    SchoolTerm.prototype.toLocaleString = function (intl, shortYear) {\n        var year = this.term === 'AT' ?\n            this.academicYear.split('/')[0] :\n            this.academicYear.split('/')[1];\n        if (shortYear)\n            year = year.substr(2);\n        return this.term === 'AT' ? intl.formatMessage({ id: 'termplanner.secondTerm', defaultMessage: 'HT {year}' }, { year: year }) :\n            intl.formatMessage({ id: 'termplanner.firstTerm', defaultMessage: 'VT {year}' }, { year: year });\n    };\n    return SchoolTerm;\n}());\nexport { SchoolTerm };\n","import * as tslib_1 from \"tslib\";\nexport function capitalizeFirst(str) {\n    for (var i = 0, l = str.length; i < l; ++i) {\n        if (str.charCodeAt(i) < 0x2000) {\n            return str.substr(0, i) + str[i].toLocaleUpperCase() + str.substr(i + 1);\n        }\n    }\n    return str;\n}\nexport function extend(obj, extension) {\n    if (typeof extension !== 'object')\n        return obj;\n    Object.keys(extension).forEach(function (key) {\n        obj[key] = extension[key];\n    });\n    return obj;\n}\nexport function clone(obj, extension) {\n    var clone = {};\n    Object.getOwnPropertyNames(obj).forEach(function (key) {\n        Object.defineProperty(clone, key, Object.getOwnPropertyDescriptor(obj, key));\n    });\n    if (extension)\n        extend(clone, extension);\n    return clone;\n}\nvar concat = [].concat;\nexport function flatten(a) {\n    return concat.apply([], a);\n}\nexport function compareProp(prop) {\n    return function (a, b) {\n        var aProp = a[prop], bProp = b[prop];\n        return aProp > bProp ? 1 : aProp < bProp ? -1 : 0;\n    };\n}\nexport function compareProps(props, locales, options) {\n    props = Array.isArray(props) ? props : [props];\n    var localeCompare = function (a, b) {\n        return typeof a === 'string' ?\n            a.localeCompare(b, locales, options) :\n            a < b ? -1 : a > b ? 1 : 0;\n    };\n    function cmpPart(a, b, firstPart, rest) {\n        var firstA = a[firstPart];\n        var firstB = b[firstPart];\n        if (firstA === firstB)\n            return 0;\n        if (firstA == null)\n            return -1;\n        if (firstB == null)\n            return 1;\n        return rest.length === 0 ?\n            localeCompare(firstA, firstB) :\n            cmpPart(firstA, firstB, rest[0], rest.slice(1));\n    }\n    return props\n        .map(function (prop) { return prop.split('.'); })\n        .map(function (_a) {\n        var _b = tslib_1.__read(_a), firstPart = _b[0], rest = _b.slice(1);\n        return function (a, b) { return cmpPart(a, b, firstPart, rest); };\n    })\n        .reduce(function (cmp1, cmp2) {\n        return function (a, b) { return cmp1(a, b) || cmp2(a, b); };\n    });\n}\nexport function L(text) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var first = text[0];\n    return buildMessage(text, args);\n}\nfunction buildMessage(text, args) {\n    var rv = text[0];\n    for (var i = 1, l = text.length; i < l; ++i) {\n        rv += args[i - 1] + text[i];\n    }\n    return rv;\n}\nvar TC = /** @class */ (function () {\n    function TC(template) {\n        extend(this, template);\n    }\n    return TC;\n}());\nexport { TC };\nexport function dateTimeReviver(key, value) {\n    var a;\n    if (typeof value === 'string') {\n        a = /\\/Date\\((\\d*)\\)\\//.exec(value);\n        if (a) {\n            return new Date(+a[1]);\n        }\n    }\n    return value;\n}\n//let infoSerial = 1;\nexport function showInfo(msg) {\n    var event = new CustomEvent('info', { 'detail': msg });\n    window.dispatchEvent(event);\n}\nexport function showError(errMsg) {\n    var msg = typeof errMsg === 'string' ? errMsg : errMsg.message;\n    var event = new CustomEvent('customerror', { 'detail': msg });\n    console.error(errMsg);\n    window.dispatchEvent(event);\n}\nexport function maxLength(str, maxLen) {\n    return str.length > maxLen ?\n        str.substr(0, maxLen - 3) + \"...\" :\n        str;\n}\nexport function arrayToLookup(a, keyAccessor) {\n    var result = {};\n    for (var i = 0, l = a.length; i < l; ++i) {\n        var item = a[i];\n        var key = keyAccessor(item);\n        var array = result[key];\n        if (array)\n            array.push(item);\n        else\n            result[key] = [item];\n    }\n    return result;\n}\nexport function arrayToMap(a, keyAccessor) {\n    var result = {};\n    for (var i = 0, l = a.length; i < l; ++i) {\n        var item = a[i];\n        var key = keyAccessor(item);\n        result[key] = item;\n    }\n    return result;\n}\nexport function cherryPickProps(obj, propsToPick) {\n    var e_1, _a;\n    var result = {};\n    try {\n        for (var propsToPick_1 = tslib_1.__values(propsToPick), propsToPick_1_1 = propsToPick_1.next(); !propsToPick_1_1.done; propsToPick_1_1 = propsToPick_1.next()) {\n            var param = propsToPick_1_1.value;\n            if (param in obj)\n                result[param] = obj[param];\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (propsToPick_1_1 && !propsToPick_1_1.done && (_a = propsToPick_1.return)) _a.call(propsToPick_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return result;\n}\nexport function distinct(a, keyAccessor) {\n    var map = arrayToMap(a, keyAccessor || (function (x) { return x; }));\n    return Object.keys(map).map(function (key) { return map[key]; });\n}\nexport function shallowEquals(a, b) {\n    if (a === b)\n        return true;\n    if (!a || !b)\n        return false;\n    if (typeof a !== 'object' || typeof b !== 'object')\n        return false;\n    var keysA = Object.keys(a);\n    var keysB = Object.keys(b);\n    if (keysA.length !== keysB.length)\n        return false;\n    for (var i = 0, l = keysA.length; i < l; ++i) {\n        var key = keysA[i];\n        if (keysB[i] !== key)\n            return false;\n        if (a[key] !== b[key])\n            return false;\n    }\n    return true;\n}\n"],"mappingsvJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdzzDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/JA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9JA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3NA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9NA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjCA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/CA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvjKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACdrrVA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrtltxIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjpGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjEA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjhjpMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACltBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpxcrQA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/HA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7EA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrsourceRoot":""}