{"version":3,"file":"WeekNotebook.js","sources":["webpack://[name]/./src/components/week-notebook/index.ts","webpack://[name]/./src/components/week-notebook/root-week-notebook.tsx","webpack://[name]/./src/components/week-notebook/week-notebook.tsx","webpack://[name]/./src/repos/week-notes-repo.ts","webpack://[name]/./src/utils/if-takes-time.ts"],"sourcesContent":["export * from './week-notebook';\nexport * from './root-week-notebook';\n","import * as React from 'react';\nimport { LanguageContext } from '../utility-components/LanguageContext';\nimport { WeekNotebook } from '.';\nexport function RootWeekNotebook(props) {\n    var intl = props.intl;\n    return React.createElement(LanguageContext.Provider, { value: { intl: intl } },\n        React.createElement(WeekNotebook, null));\n}\n","import { __awaiter, __extends, __generator } from \"tslib\";\nimport React from 'react';\nimport { weekNotesRepo } from '../../repos/week-notes-repo';\nimport { PendingJob } from '../../utils/pending-job';\nimport { createUUID, DocumentAccess } from 'kedbackend/client';\nimport env from '../../globals/KED.env';\nimport { Wysiwyg } from '../utility-components/wysiwyg';\nimport actions_swedish from '../utility-components/wysiwyg/actions-sv';\nimport actions_en from '../utility-components/wysiwyg/actions';\nimport { Spinner, TimeoutSpinner } from '../course-builder/sub-components/spinner';\nimport { ifTakesTime } from '../../utils/if-takes-time';\nimport { FormattedMessage } from 'react-intl';\nimport { LanguageContext } from '../utility-components/LanguageContext';\nvar MAX_NOTE_LENGTH = 16384;\nvar WeekNotebook = /** @class */ (function (_super) {\n    __extends(WeekNotebook, _super);\n    function WeekNotebook(props) {\n        var _this = _super.call(this, props) || this;\n        _this.onChange = _this.onChange.bind(_this);\n        _this.autoSaver = new PendingJob(function () { return _this.save(); });\n        _this.state = {\n            isLoading: true,\n            showLoadingProgress: false,\n            showSavingProgress: false,\n            everEdited: false,\n            notes: \"\",\n        };\n        return _this;\n    }\n    WeekNotebook.prototype.componentDidMount = function () {\n        this.showProgressIfLoadingTakesTime();\n        weekNotesRepo.mem.subscribe(this.onChange);\n    };\n    WeekNotebook.prototype.showProgressIfLoadingTakesTime = function () {\n        var _this = this;\n        this.timeoutHandle = setTimeout(function () { return _this.state.isLoading && _this.setState({ showLoadingProgress: true }); }, 300);\n    };\n    WeekNotebook.prototype.componentWillUnmount = function () {\n        weekNotesRepo.mem.unsubscribe(this.onChange);\n        this.autoSaver.stop();\n        clearTimeout(this.timeoutHandle);\n    };\n    WeekNotebook.prototype._save = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var maxIterations;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        maxIterations = 3;\n                        _a.label = 1;\n                    case 1:\n                        if (!(this.isNotesEdited() && maxIterations)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, weekNotesRepo.upsert(this.state.weekNote, function (wn) {\n                                wn.content = _this.state.notes;\n                            })];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        --maxIterations;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    WeekNotebook.prototype.save = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var err_1;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(!this.state.showSavingProgress && !this.state.isLoading && this.isNotesEdited())) return [3 /*break*/, 8];\n                        return [4 /*yield*/, this.setState({ error: undefined })];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, 6, 8]);\n                        return [4 /*yield*/, ifTakesTime(300, function () { return _this._save(); }, function () { return _this.setState({ showSavingProgress: true }); })];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 8];\n                    case 4:\n                        err_1 = _a.sent();\n                        console.error(err_1);\n                        return [4 /*yield*/, this.setState({ error: this.context.intl.formatMessage({ id: \"common.errorSavingData\", defaultMessage: \"Kunde inte spara.\" }) })];\n                    case 5:\n                        _a.sent();\n                        return [3 /*break*/, 8];\n                    case 6: return [4 /*yield*/, this.setState({ showSavingProgress: false })];\n                    case 7:\n                        _a.sent();\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    WeekNotebook.prototype.isNotesEdited = function () {\n        var _a = this.state, weekNote = _a.weekNote, notes = _a.notes;\n        return !!weekNote && (notes !== weekNote.content);\n    };\n    //If the notebook should be used in multiple modules, move this functions into an utility file\n    WeekNotebook.prototype.getTranslatedActions = function (intl) {\n        //actions might have different icons for each language\n        //we keep the same structure of the actions, but we replace the texts with the ones from the translated files\n        var localeActions = Object.assign({}, intl.locale === \"sv\" ? actions_swedish : actions_en);\n        Object.keys(localeActions).forEach(function (elem) {\n            var currentTitle = actions_swedish[elem].title;\n            localeActions[elem].title = intl.formatMessage({ id: \"wysiwyg.\" + elem, defaultMessage: currentTitle });\n            //because the image action needs a custom translation, we treat this separately\n            if (elem === \"image\") {\n                localeActions[elem].promptMsg = intl.formatMessage({ id: \"wysiwyg.imagePromptMsg\", defaultMessage: actions_swedish[elem].promptMsg });\n            }\n        });\n        return localeActions;\n    };\n    WeekNotebook.prototype.onChange = function (weekNotes) {\n        var weekNote = weekNotes.length > 0 ?\n            weekNotes[weekNotes.length - 1] :\n            {\n                id: createUUID(),\n                dateTime: Date.now(),\n                //dateTime: weekNotesRepo.getCurrentWeek().toDate().getTime(),\n                content: \"\",\n                acl: [\n                    // Default ACL: Let user self have full control over this item:\n                    new DocumentAccess(\"email\", env.currentUser.mail, \"S\")\n                ].map(function (ac) { return ac.toString(); })\n            };\n        var newState = {\n            weekNote: weekNote,\n            //week: weekNotesRepo.getCurrentWeek().week(),\n            isLoading: false,\n            showLoadingProgress: false\n        };\n        if (!this.state.weekNote || this.state.weekNote.id !== weekNote.id || weekNotes.length === 0) {\n            newState.notes = weekNote.content;\n        }\n        this.setState(newState);\n    };\n    /*async changeWeek(direction: number) {\n      try {\n        await this.setState({\n          isLoading: true,\n          everEdited: false,\n          weekNote: null,\n          error: undefined\n        });\n        this.showProgressIfLoadingTakesTime();\n        await weekNotesRepo.changeWeek(direction);\n      } catch (err) {\n        console.error(err);\n        await this.setState({error: \"Kunde inte ladda data\"});\n      }\n    }\n  \n    prevWeek() {\n      this.changeWeek(-1);\n    }\n  \n    nextWeek() {\n      this.changeWeek(1);\n    }*/\n    WeekNotebook.prototype.render = function () {\n        var _this = this;\n        var _a = this.state, notes = _a.notes, showLoadingProgress = _a.showLoadingProgress, isLoading = _a.isLoading, showSavingProgress = _a.showSavingProgress, error = _a.error, everEdited = _a.everEdited;\n        var intl = this.context.intl;\n        return (React.createElement(\"div\", null,\n            React.createElement(\"div\", { className: \"ked_boxed kedNotepad\" },\n                React.createElement(\"h3\", null,\n                    React.createElement(FormattedMessage, { id: \"weekNotebook.title\", defaultMessage: \"Anteckningar\" })),\n                !isLoading && React.createElement(Wysiwyg, { actions: [\n                        \"bold\",\n                        \"italic\",\n                        \"underline\",\n                        \"strikethrough\",\n                        \"olist\",\n                        \"ulist\",\n                        \"outdent\",\n                        \"indent\",\n                        \"line\",\n                        \"clear\"\n                    ], defaultActions: this.getTranslatedActions(intl), html: notes.substr(0, MAX_NOTE_LENGTH), onChange: function (html) {\n                        _this.setState({\n                            notes: html.substr(0, MAX_NOTE_LENGTH),\n                            everEdited: true\n                        });\n                        _this.autoSaver.triggerChange(500);\n                    } }),\n                React.createElement(\"hr\", null),\n                error ?\n                    React.createElement(\"p\", { className: \"error\" }, error) :\n                    showLoadingProgress ?\n                        React.createElement(\"span\", null,\n                            React.createElement(FormattedMessage, { id: \"common.loading\", defaultMessage: \"Laddar...\" }),\n                            React.createElement(TimeoutSpinner, null)) :\n                        showSavingProgress ? React.createElement(React.Fragment, null,\n                            React.createElement(\"span\", null,\n                                React.createElement(FormattedMessage, { id: \"common.saving\", defaultMessage: \"Sparar...\" }),\n                                \" \\u00A0 \"),\n                            React.createElement(Spinner, null)) :\n                            this.isNotesEdited() ?\n                                React.createElement(React.Fragment, null, \"\\u00A0\") :\n                                everEdited ?\n                                    React.createElement(FormattedMessage, { id: \"common.saved\", defaultMessage: \"Sparad\" }) :\n                                    React.createElement(React.Fragment, null, \"\\u00A0\"))));\n    };\n    WeekNotebook.contextType = LanguageContext;\n    return WeekNotebook;\n}(React.Component));\nexport { WeekNotebook };\n","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { KedRepo } from './ked-repo';\nimport env from '../globals/KED.env';\nexport var weekNotesRepo = env.weekNotesRepo;\nvar WeekNotesRepo = /** @class */ (function (_super) {\n    __extends(WeekNotesRepo, _super);\n    /*private currentWeek: moment.Moment;\n  \n    getCurrentWeek() {\n      if (!this.currentWeek) {\n        const {weekMillis, expire} = JSON.parse(sessionStorage.getItem(\"week-notes-week\") || \"{}\") as {weekMillis?: number, expire?: number};\n        this.currentWeek = weekMillis && expire && expire > Date.now() ?\n          moment(new Date(weekMillis)) :\n          moment().startOf('week').add(1, 'days');\n      }\n      return this.currentWeek.clone();\n    }\n  \n    setCurrentWeek(newWeekMoment: moment.Moment) {\n      this.currentWeek = newWeekMoment;\n      sessionStorage.setItem(\"week-notes-week\", JSON.stringify({\n        weekMillis: newWeekMoment.toDate().getTime(),\n        expire: moment().add(8, \"hours\").toDate().getTime()\n      }))\n    }*/\n    function WeekNotesRepo() {\n        var _this = _super.call(this, {\n            getClient: function () { return env.kedBackendClient; },\n            optimistic: false,\n            table: \"notes\",\n            user: env.currentUser ? env.currentUser.mail : \"\",\n            getQueryOptions: function () { return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    //const userEmail = env.currentUser ? env.currentUser.mail : \"\";\n                    //const currentWeek = this.getCurrentWeek();\n                    //const weekNumber = currentWeek.week();\n                    //const kedWeek = KEDWeek(currentWeek.year(), weekNumber);\n                    return [2 /*return*/, {\n                            //from: kedWeek.notBefore,\n                            //to: kedWeek.notAfter,\n                            role: \"USER\"\n                        }];\n                });\n            }); }\n        }) || this;\n        return _this;\n        //this.currentWeek = null;\n    }\n    return WeekNotesRepo;\n}(KedRepo));\nexport { WeekNotesRepo };\nif (!weekNotesRepo) {\n    weekNotesRepo = env.weekNotesRepo = new WeekNotesRepo();\n}\n","import { __awaiter, __generator } from \"tslib\";\nexport function ifTakesTime(ms, task, action) {\n    return __awaiter(this, void 0, void 0, function () {\n        var timeoutReached, th, rv;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    timeoutReached = false;\n                    th = setTimeout(function () {\n                        timeoutReached = true;\n                        action();\n                    }, ms);\n                    return [4 /*yield*/, task()];\n                case 1:\n                    rv = _a.sent();\n                    if (!timeoutReached)\n                        clearTimeout(th);\n                    return [2 /*return*/, rv];\n            }\n        });\n    });\n}\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}